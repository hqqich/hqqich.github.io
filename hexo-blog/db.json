{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/maple/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/maple/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/maple/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/maple/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/maple/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/maple/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/maple/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/maple/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/clipboard.min.js","path":"lib/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/iconify-icon.min.js","path":"lib/iconify-icon.min.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/jquery.min.js","path":"lib/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/fancybox/fancybox.min.css","path":"lib/fancybox/fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/fancybox/fancybox.umd.min.js","path":"lib/fancybox/fancybox.umd.min.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/nprogress/nprogress.css","path":"lib/nprogress/nprogress.css","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/nprogress/nprogress.js","path":"lib/nprogress/nprogress.js","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/tocbot/tocbot.min.css","path":"lib/tocbot/tocbot.min.css","modified":0,"renderable":1},{"_id":"themes/maple/source/lib/tocbot/tocbot.min.js","path":"lib/tocbot/tocbot.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/lizhi.md","hash":"697846dd044bb32cd4160342ccea7ca04150bd15","modified":1740918784661},{"_id":"source/_posts/My-New-Post.md","hash":"5534a740f1bc73fb90ef9061d0c8724b70b27596","modified":1740918388487},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1740895029507},{"_id":"source/category/index.md","hash":"69c5660a850adf726cf95337cf6eb64edd5b7514","modified":1743934224309},{"_id":"source/tag/index.md","hash":"0970214771e38bf55c54048e4dea4d6ff0a0ce97","modified":1740911751705},{"_id":"source/_posts/detail/hexo-them.md","hash":"5b3cac8ef51e9642684a158fc0088eca94c4dec2","modified":1740928198918},{"_id":"source/_posts/linux/linux_常用命令记录.md","hash":"8f3c0f91eecb05b3947d4d89aa8abdcabd6c8834","modified":1740923421920},{"_id":"themes/maple/.gitignore","hash":"67656f75e8113a4275ba5ef394b7662fab3ebea0","modified":1740908808250},{"_id":"themes/maple/README.md","hash":"7e7179813a261535974f8ac70241cb2f73c6aa2f","modified":1740908808250},{"_id":"themes/maple/LICENSE","hash":"632b916dd7e4f5c11790ab808388cda6610210ed","modified":1740908808250},{"_id":"themes/maple/package.json","hash":"fbfff43e574591939d96829a791b4a4ab87a9173","modified":1740908808255},{"_id":"themes/maple/README.zh-CN.md","hash":"1c641b9df0614e6cba2269f130dd4af376067037","modified":1740908808250},{"_id":"themes/maple/.editorconfig","hash":"b16f01a7b04ad512e15ebb32c5786d432a536779","modified":1740908808250},{"_id":"themes/maple/_config.yml","hash":"2906f7c0797c9b233df477003eee0c7355a01291","modified":1740908808250},{"_id":"themes/maple/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1740908808251},{"_id":"themes/maple/languages/en.yml","hash":"72066419d6682a017c97910921ade125f21b04cd","modified":1740908808251},{"_id":"themes/maple/languages/default.yml","hash":"da38f00bb45a318f118db0d74df24a137351777e","modified":1740908808251},{"_id":"themes/maple/languages/es.yml","hash":"1e581098303181ed7927827d2388990f495cc873","modified":1740908808251},{"_id":"themes/maple/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1740908808251},{"_id":"themes/maple/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1740908808251},{"_id":"themes/maple/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1740908808251},{"_id":"themes/maple/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1740908808251},{"_id":"themes/maple/languages/no.yml","hash":"182bd9ea76313ec9dc769b5dd2845c0d1c56e3a0","modified":1740908808251},{"_id":"themes/maple/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1740908808252},{"_id":"themes/maple/languages/zh-CN.yml","hash":"e41d1e0e3a9e15c30b7142491bed39dc50371e96","modified":1740908808252},{"_id":"themes/maple/layout/archive.ejs","hash":"cd4a6ff3336541ea815a764c000d406787d9e4d7","modified":1740908808254},{"_id":"themes/maple/languages/zh-TW.yml","hash":"d2cb9d5d8a4a80479547da0bb63e2feee0fffe47","modified":1740908808252},{"_id":"themes/maple/layout/category.ejs","hash":"bf84bae8a03cd646f663ea54b3c2ba70e15a3013","modified":1740908808254},{"_id":"themes/maple/layout/index.ejs","hash":"d4bd174f3b8136034df484fa26ec10eae7ad7432","modified":1740908808254},{"_id":"themes/maple/scripts/echarts.js","hash":"2c5a1439a12b3c3ab3fd51b3572748a0ccd8667a","modified":1740908808255},{"_id":"themes/maple/scripts/mermaid.js","hash":"778f3daf90edab9bd5c007cfb131e69e3e65709f","modified":1740908808255},{"_id":"themes/maple/scripts/wordcount.js","hash":"bbab5a5c5f28da2d75f36fc95b4c817e33e9e17a","modified":1740908808255},{"_id":"themes/maple/layout/layout.ejs","hash":"77334fae76b4310e4294b67dd7b36e97b2bd9f0b","modified":1740908808254},{"_id":"themes/maple/layout/post.ejs","hash":"8b9176119c87abf6f3abadc04ecfc5afd5f674f4","modified":1740908808254},{"_id":"themes/maple/package-lock.json","hash":"b749271c225eb60891c7c3643063ef56e8af4a9d","modified":1740908808255},{"_id":"themes/maple/layout/tag.ejs","hash":"49933d7350788351ef5dc60b2d9783cd512de2ec","modified":1740908808255},{"_id":"themes/maple/layout/_partial/after-footer.ejs","hash":"48f56bcea9820ca347f509703ecc626ee4154276","modified":1740908808252},{"_id":"themes/maple/layout/_partial/footer.ejs","hash":"9bf536a5e4da95d488e9fa33450e0f94385d2577","modified":1740908808252},{"_id":"themes/maple/languages/ru.yml","hash":"50d08403ca204fba074f616b0d054a657f8d642f","modified":1740908808252},{"_id":"themes/maple/layout/_partial/head.ejs","hash":"6155a5e4ce7ac90340fef979d1c6714eb9492f76","modified":1740908808252},{"_id":"themes/maple/layout/_partial/header.ejs","hash":"ebce35f1a6a2e2cf3e0a6c6038ac78942b1a44b3","modified":1740908808252},{"_id":"themes/maple/source/favicon.ico","hash":"8ede8a7e8edefbd78bb978d781a502f696c32be9","modified":1740908808256},{"_id":"themes/maple/layout/_partial/paginator.ejs","hash":"7c64dd99baf13eb3c1b25435f3617635f351dbad","modified":1740908808253},{"_id":"themes/maple/layout/_plugins/baidu-analytics.ejs","hash":"7b92fafbaab42c32780a7716a41aa9130e8f6352","modified":1740908808253},{"_id":"themes/maple/layout/_plugins/busuanzi.ejs","hash":"e4907e8d16e58abdd931f5b66c954dd28b9fee6b","modified":1740908808253},{"_id":"themes/maple/layout/_plugins/disqusjs.ejs","hash":"5f9b22b65eb828e3af178379c3d5be56d93a7aaa","modified":1740908808253},{"_id":"themes/maple/layout/_partial/toc.ejs","hash":"53b822671f4049da30d3742c1cc9774751dee8f4","modified":1740908808253},{"_id":"themes/maple/layout/_plugins/giscus.ejs","hash":"24a1a2b7b7b5fc978392e5f284da27b263b9164f","modified":1740908808253},{"_id":"themes/maple/layout/_plugins/fancybox.ejs","hash":"4591ed1a13ed32b67844a4505f3ac613535fd23f","modified":1740908808253},{"_id":"themes/maple/layout/_plugins/google-analytics.ejs","hash":"295659ef0d9c902cf7a3d0f2671e83c38be2645b","modified":1740908808253},{"_id":"themes/maple/layout/_plugins/maple.ejs","hash":"fe5f2207a9c59836edfae5e7ecb520dbe0c64706","modified":1740908808253},{"_id":"themes/maple/layout/_plugins/mermaid.ejs","hash":"804c36256f9232a1fe6f308e06ae89642fe0eb1b","modified":1740908808254},{"_id":"themes/maple/layout/_plugins/nprogress.ejs","hash":"0c2a73e67ffe2563c58c5274f007df02765ec08a","modified":1740908808254},{"_id":"themes/maple/layout/_plugins/tailwindcss.ejs","hash":"ff6a9e9180453fcc8c67515e1baa564d181f1836","modified":1740908808254},{"_id":"themes/maple/layout/_plugins/theme.ejs","hash":"7f0df74ea380bb2781b0b053038919187766a7e6","modified":1740908808254},{"_id":"themes/maple/layout/_plugins/tocbot.ejs","hash":"e28198bc5ff2dc563838b9eaa39b399eb8b9e47f","modified":1740908808254},{"_id":"themes/maple/layout/_plugins/mathjax.ejs","hash":"c358356a7595b5e1fe1d65aee10616eec8eb00e7","modified":1740908808253},{"_id":"themes/maple/source/css/highlight.styl","hash":"d2772f30760aa99f7d8995e3f65c96bd10da29b6","modified":1740908808256},{"_id":"themes/maple/source/css/main.styl","hash":"3ab17f8024b2ef96cb63cf1828981e8e53330a22","modified":1740908808256},{"_id":"themes/maple/source/images/logo.svg","hash":"1b7a73d948e593dcec7549d63e5ac60ad6db6a8f","modified":1740908808261},{"_id":"themes/maple/source/img/logo.svg","hash":"75341fbd657844a29dc5e217f67c71295ad1239c","modified":1740908808265},{"_id":"themes/maple/source/js/main.js","hash":"c06a89f631ac37cc3acde2ce0979f6ebf6f6e6d6","modified":1740908808265},{"_id":"themes/maple/source/lib/iconify-icon.min.js","hash":"7526cf2b54b9e657f377083129cc00c5aa4dc110","modified":1740908808266},{"_id":"themes/maple/source/lib/nprogress/nprogress.css","hash":"d8a2825a6fb35a3eeb3743e09184c18be9dbfcdc","modified":1740908808267},{"_id":"themes/maple/source/lib/fancybox/fancybox.min.css","hash":"1564bb6a6b930a61875610c05001c4f7bfe9939a","modified":1740908808265},{"_id":"themes/maple/source/lib/clipboard.min.js","hash":"f48e9bfeca83e5057cc751e8c44fc07e9d976c06","modified":1740908808265},{"_id":"themes/maple/source/lib/nprogress/nprogress.js","hash":"e328b676f7e93bd78cd5d31cd0899cba2a423097","modified":1740908808267},{"_id":"themes/maple/source/lib/tocbot/tocbot.min.js","hash":"4f1b40a6818fe6e955f2ce7de3b79aec4dcd0a7c","modified":1740908808267},{"_id":"themes/maple/source/lib/tocbot/tocbot.min.css","hash":"0029d92ce7f1a59c7c57feb6d5f80649daba3db8","modified":1740908808267},{"_id":"themes/maple/source/lib/fancybox/fancybox.umd.min.js","hash":"e766e468e4f017b51a643648f6b4f05187c41d6b","modified":1740908808266},{"_id":"themes/maple/source/lib/jquery.min.js","hash":"69bb69e25ca7d5ef0935317584e6153f3fd9a88c","modified":1740908808266},{"_id":"themes/maple/source/images/avatar.jpg","hash":"0eb2de59901a55c792898ddf5d1da3ed96f2e2d8","modified":1740908808260},{"_id":"themes/maple/source/img/avatar.jpg","hash":"0eb2de59901a55c792898ddf5d1da3ed96f2e2d8","modified":1740908808265},{"_id":"public/category/index.html","hash":"78014dd8d67fd445eaf4c19c7087c1a95a82e10e","modified":1741009812954},{"_id":"public/tag/index.html","hash":"78014dd8d67fd445eaf4c19c7087c1a95a82e10e","modified":1741009812954},{"_id":"public/archives/index.html","hash":"ef3ef263a49bec87ec39263d569144b571f84bbb","modified":1741009812954},{"_id":"public/archives/2022/index.html","hash":"851301e29e8c4c51fc2b1b5580ef62055d501574","modified":1741009812954},{"_id":"public/archives/2022/08/index.html","hash":"500b3a5cb80654fa94a6c04935dd74412948d0cc","modified":1741009812954},{"_id":"public/archives/2025/index.html","hash":"cde25c3ea34e5b39994f31cbf9fd05cfdda5803d","modified":1741009812954},{"_id":"public/archives/2025/03/index.html","hash":"86246519f55f58954122903fb5d9241c8110771e","modified":1741009812954},{"_id":"public/categories/Music/index.html","hash":"7ba974fa05b754ebcb4ef90fea3abf6b9bc97c32","modified":1741009812954},{"_id":"public/index.html","hash":"859cf078338e0f5b2f06c09761ccb571d7577caa","modified":1741009812954},{"_id":"public/tags/Music/index.html","hash":"99c143552144dc2e4b87e367c8f759bc0deff17f","modified":1741009812954},{"_id":"public/2025/03/02/linux/linux_常用命令记录/index.html","hash":"99c552affe18f8f899796ec430eae3f1d8783079","modified":1741009812954},{"_id":"public/2025/03/02/detail/hexo-them/index.html","hash":"04b775f5ceb312d390bc00df4aabe1d669395aa3","modified":1741009812954},{"_id":"public/2025/03/02/My-New-Post/index.html","hash":"17c0333f48378348720b83246f70e0af5c43ddb3","modified":1741009812954},{"_id":"public/2025/03/02/hello-world/index.html","hash":"2f0952668d94bcd95f80c961055d7aa03763d90e","modified":1741009812954},{"_id":"public/2022/08/22/lizhi/index.html","hash":"0f6252e9d7645beddb3b32a9d3eb5239f41d6a6e","modified":1741009812954},{"_id":"public/favicon.ico","hash":"8ede8a7e8edefbd78bb978d781a502f696c32be9","modified":1741006324451},{"_id":"public/images/logo.svg","hash":"1b7a73d948e593dcec7549d63e5ac60ad6db6a8f","modified":1741006324451},{"_id":"public/img/logo.svg","hash":"75341fbd657844a29dc5e217f67c71295ad1239c","modified":1741006324451},{"_id":"public/css/highlight.css","hash":"58217c19313bd9b12b768a4fcd09e66a980fea2c","modified":1741006324451},{"_id":"public/css/main.css","hash":"5a1af8c15ba4385840892d78884e7811defe4380","modified":1741006324451},{"_id":"public/js/main.js","hash":"c06a89f631ac37cc3acde2ce0979f6ebf6f6e6d6","modified":1741006324451},{"_id":"public/lib/clipboard.min.js","hash":"f48e9bfeca83e5057cc751e8c44fc07e9d976c06","modified":1741006324451},{"_id":"public/lib/nprogress/nprogress.css","hash":"d8a2825a6fb35a3eeb3743e09184c18be9dbfcdc","modified":1741006324451},{"_id":"public/lib/nprogress/nprogress.js","hash":"e328b676f7e93bd78cd5d31cd0899cba2a423097","modified":1741006324451},{"_id":"public/lib/tocbot/tocbot.min.css","hash":"0029d92ce7f1a59c7c57feb6d5f80649daba3db8","modified":1741006324451},{"_id":"public/lib/tocbot/tocbot.min.js","hash":"4f1b40a6818fe6e955f2ce7de3b79aec4dcd0a7c","modified":1741006324451},{"_id":"public/lib/fancybox/fancybox.min.css","hash":"1564bb6a6b930a61875610c05001c4f7bfe9939a","modified":1741006324451},{"_id":"public/lib/iconify-icon.min.js","hash":"7526cf2b54b9e657f377083129cc00c5aa4dc110","modified":1741006324451},{"_id":"public/lib/jquery.min.js","hash":"69bb69e25ca7d5ef0935317584e6153f3fd9a88c","modified":1741006324451},{"_id":"public/lib/fancybox/fancybox.umd.min.js","hash":"e766e468e4f017b51a643648f6b4f05187c41d6b","modified":1741006324451},{"_id":"public/images/avatar.jpg","hash":"0eb2de59901a55c792898ddf5d1da3ed96f2e2d8","modified":1741006324451},{"_id":"public/img/avatar.jpg","hash":"0eb2de59901a55c792898ddf5d1da3ed96f2e2d8","modified":1741006324451},{"_id":"source/_posts/build-frontend-framework.md","hash":"273f97936d790be1b84823f934080f4d4d472bfd","modified":1734940951000},{"_id":"source/_posts/centos-china-mirrors.md","hash":"a3730dd0ffa2a1389900b944c2f7f31d1f733f86","modified":1734940951000},{"_id":"source/_posts/centos7-upgrade-glibc.md","hash":"8312577761f9465ba1320d2bc33be84ffc06f63f","modified":1734940951000},{"_id":"source/_posts/echarts-test.md","hash":"2a10d00152c298eaa0c8193ea4c643452cec301c","modified":1734940951000},{"_id":"source/_posts/linux-clash.md","hash":"d63c0e8c85eae9650b853fe9ad90c9a86c0abc8f","modified":1734940951000},{"_id":"source/_posts/markdown-test.md","hash":"c3bc618902c14276801fdf68655cd5a429b41f42","modified":1734940951000},{"_id":"source/_posts/math-jax-test.md","hash":"b06f824ca62bb69ce94ff4c89d05fe69f9c98443","modified":1734940951000},{"_id":"source/_posts/mysql-interview.md","hash":"45da67a1374544d4d40074be1cfb515ba8ae8800","modified":1734940951000},{"_id":"source/_posts/python-offline-deploy.md","hash":"9039227f734dc9e2a52614273d520b34b418c2ff","modified":1734940951000},{"_id":"public/archives/page/2/index.html","hash":"4bc7f7df8fff1b16c87aa03efbf8fe805ba66f64","modified":1741009812954},{"_id":"public/archives/2022/07/index.html","hash":"7b683e76827dacc49f29be98237e8cf535669fcc","modified":1741009812954},{"_id":"public/archives/2023/01/index.html","hash":"d25d21113123d76e8ab345cb48f1641a58cd68b4","modified":1741009812954},{"_id":"public/archives/2023/09/index.html","hash":"2bc8e1f0dfb7f133135cf3f765965dee77ea5ef1","modified":1741009812954},{"_id":"public/archives/2023/03/index.html","hash":"b1c9138037903a21bc0c428c40f22ce18c97edbe","modified":1741009812954},{"_id":"public/archives/2023/07/index.html","hash":"51d01a701324d1ccbd36425c7e0f39713daf030b","modified":1741009812954},{"_id":"public/archives/2024/index.html","hash":"75f5bcd1337ab9b7ff3c68a0427c648d67b11a57","modified":1741009812954},{"_id":"public/archives/2023/index.html","hash":"fe2e15e5874cfb92fd3e7b68936e861798f61cb2","modified":1741009812954},{"_id":"public/archives/2024/03/index.html","hash":"dcc993ea70213095577414dc8da34cfc28bdffba","modified":1741009812954},{"_id":"public/archives/2024/04/index.html","hash":"b135b654f786707506b3524068563bcc00996224","modified":1741009812954},{"_id":"public/categories/Web/index.html","hash":"6c964d5322a7bccb113b6f608d9a89b4fb597f4d","modified":1741009812954},{"_id":"public/categories/Test/index.html","hash":"0c9da88eeb5b0adbab046d40446f434b0359cb33","modified":1741009812954},{"_id":"public/categories/面试/index.html","hash":"6d92fa588abc7f6b491b5b3ef16c6ae43fe1fc42","modified":1741009812954},{"_id":"public/categories/devops/index.html","hash":"1181577ae843464fb6877cb54b04c31ef1444f74","modified":1741009812954},{"_id":"public/categories/python/index.html","hash":"a56a0c8a5c42839e08b50fd79377abb9bc978996","modified":1741009812954},{"_id":"public/page/2/index.html","hash":"de7e21fa33fa4b9ff64ef21f61249135891224f2","modified":1741009812954},{"_id":"public/tags/Web/index.html","hash":"c52445ac639c1dce44e398d2dba563a86d19ec46","modified":1741009812954},{"_id":"public/tags/centos/index.html","hash":"f933da64f30b5092d79c284adc30ba1a4bc514ae","modified":1741009812954},{"_id":"public/tags/centos7/index.html","hash":"c543c527ae69ae5c800ed4df74b55a870dbb0af8","modified":1741009812954},{"_id":"public/tags/mirror/index.html","hash":"4aa078be5246e7eabb3d03bee4debc78b1bb8654","modified":1741009812954},{"_id":"public/tags/glibc/index.html","hash":"7703d5fb6c072f7413adb0f2f261108a8bf83612","modified":1741009812954},{"_id":"public/tags/devops/index.html","hash":"7bc3b4d98f6ea75ebef728a8eb338929a78eb0b1","modified":1741009812954},{"_id":"public/tags/linux/index.html","hash":"b668343aab6d79f33ca6fc2810dd1277ba209988","modified":1741009812954},{"_id":"public/tags/Test/index.html","hash":"aa9ed84b1fef7e68efca9989b25d600e34e3024d","modified":1741009812954},{"_id":"public/tags/clash/index.html","hash":"067c795ce403f7c523fa1da39e0b94c7184a5306","modified":1741009812954},{"_id":"public/tags/面试/index.html","hash":"767c731cadbb4f441d438777690c2f89fd406b71","modified":1741009812954},{"_id":"public/tags/python/index.html","hash":"97d9a9eaa29d766ac6eabe3baed24b46a2c988d5","modified":1741009812954},{"_id":"public/2024/04/15/mysql-interview/index.html","hash":"3fd205e3d7c602d63452fd17961dab364c95f0d2","modified":1741009812954},{"_id":"public/2024/03/26/python-offline-deploy/index.html","hash":"0fa1eff03792bda2ddbed9f05acbee2feef980cf","modified":1741009812954},{"_id":"public/2023/09/20/build-frontend-framework/index.html","hash":"b73fcfbafa97327154b49f7fe73f49a78c1153c7","modified":1741009812954},{"_id":"public/2023/03/18/centos7-upgrade-glibc/index.html","hash":"406a763378fa61389ce357629d6a33521da4feb1","modified":1741009812954},{"_id":"public/2023/07/18/centos-china-mirrors/index.html","hash":"547fa246a90d062acbeff9bc709521d65a6725f5","modified":1741009812954},{"_id":"public/2023/01/18/linux-clash/index.html","hash":"a4deddaec33954759cc337b6aee53b1500ddf748","modified":1741009812954},{"_id":"public/2022/07/21/math-jax-test/index.html","hash":"d4b3d27c393f8b830e8796f38d54ab06d48afee1","modified":1741009812954},{"_id":"public/2022/07/25/echarts-test/index.html","hash":"6e14f10f862496823754ca444304b794a5619412","modified":1741009812954},{"_id":"public/2022/07/20/markdown-test/index.html","hash":"fd6165800583afc0fb2e18c7cdb2886b501b3189","modified":1741009812954}],"Category":[{"name":"Music","_id":"cm7t27pkw000653jk195s8945"},{"name":"Web","_id":"cm7t4ahds0002u7jk7xav9uka"},{"name":"devops","_id":"cm7t4ahdu0007u7jkanut7513"},{"name":"Test","_id":"cm7t4ahdw000hu7jk6gc712zh"},{"name":"面试","_id":"cm7t4ahdx000wu7jk73v39s91"},{"name":"python","_id":"cm7t4ahdx0012u7jkc5u2c29u"}],"Data":[],"Page":[{"title":"category","date":"2022-07-19T09:01:29.000Z","layout":"category","_content":"","source":"category/index.md","raw":"---\ntitle: category\ndate: 2022-07-19 17:01:29\nlayout: category\n---\n","updated":"2025-04-06T10:10:24.309Z","path":"category/index.html","_id":"cm7t27pkr000053jk19840w6u","comments":1,"content":"","excerpt":"","more":""},{"title":"tag","date":"2022-07-19T09:01:29.000Z","layout":"tag","_content":"","source":"tag/index.md","raw":"---\ntitle: tag\ndate: 2022-07-19 17:01:29\nlayout: tag\n---\n","updated":"2025-03-02T10:35:51.705Z","path":"tag/index.html","comments":1,"_id":"cm7t27pku000253jk2flp66yb","content":"","excerpt":"","more":""}],"Post":[{"title":"My New Post","date":"2025-03-02T09:41:38.000Z","_content":"\n\n```mermaid\ngraph LR;\n  A-->B\n  B-->C\n  C-->D\n  D-->A\n```\n\n```text\ngraph LR;\n  A-->B\n  B-->C\n  C-->D\n  D-->A\n```\n\n\n<div class=\"mermaid\">\ngraph LR;\n  A-->B\n  B-->C\n  C-->D\n  D-->A\n</div>\n","source":"_posts/My-New-Post.md","raw":"---\ntitle: My New Post\ndate: 2025-03-02 17:41:38\ntags:\n---\n\n\n```mermaid\ngraph LR;\n  A-->B\n  B-->C\n  C-->D\n  D-->A\n```\n\n```text\ngraph LR;\n  A-->B\n  B-->C\n  C-->D\n  D-->A\n```\n\n\n<div class=\"mermaid\">\ngraph LR;\n  A-->B\n  B-->C\n  C-->D\n  D-->A\n</div>\n","slug":"My-New-Post","published":1,"updated":"2025-03-02T12:26:28.487Z","comments":1,"layout":"post","photos":[],"_id":"cm7t27pks000153jk5f23gwzn","content":"<pre class=\"mermaid\">graph LR;\n  A-->B\n  B-->C\n  C-->D\n  D-->A</pre>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR;</span><br><span class=\"line\">  A--&gt;B</span><br><span class=\"line\">  B--&gt;C</span><br><span class=\"line\">  C--&gt;D</span><br><span class=\"line\">  D--&gt;A</span><br></pre></td></tr></table></figure>\n\n\n<div class=\"mermaid\">\ngraph LR;\n  A-->B\n  B-->C\n  C-->D\n  D-->A\n</div>\n","excerpt":"","more":"<pre class=\"mermaid\">graph LR;\n  A-->B\n  B-->C\n  C-->D\n  D-->A</pre>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR;</span><br><span class=\"line\">  A--&gt;B</span><br><span class=\"line\">  B--&gt;C</span><br><span class=\"line\">  C--&gt;D</span><br><span class=\"line\">  D--&gt;A</span><br></pre></td></tr></table></figure>\n\n\n<div class=\"mermaid\">\ngraph LR;\n  A-->B\n  B-->C\n  C-->D\n  D-->A\n</div>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2025-03-02T05:57:09.506Z","updated":"2025-03-02T05:57:09.507Z","comments":1,"layout":"post","photos":[],"_id":"cm7t27pku000353jkd9z1bz04","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"南京市民李先生","date":"2022-08-22T02:20:48.000Z","excerpt":"南京市民李先生私藏","_content":"\n<link rel=\"stylesheet\" href=\"https://testingcf.jsdelivr.net/npm/aplayer/dist/APlayer.min.css\" />\n<link rel=\"stylesheet\" href=\"https://testingcf.jsdelivr.net/npm/driver.js/dist/driver.min.css\" />\n\n<script src=\"https://testingcf.jsdelivr.net/npm/aplayer/dist/APlayer.min.js\"></script>\n<script src=\"https://testingcf.jsdelivr.net/gh/nj-lizhi/song@main/audio/list-v2.js\"></script>\n\n<script src=\"https://testingcf.jsdelivr.net/npm/hls.js@0.14.4/dist/hls.min.js\"></script>\n<script src=\"https://testingcf.jsdelivr.net/npm/dplayer@1.27.0/dist/DPlayer.min.js\"></script>\n\n<script src=\"https://testingcf.jsdelivr.net/npm/driver.js/dist/driver.min.js\"></script>\n\n## 音乐合集\n\n<div id=\"aplayer\"></div>\n\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst ap = new APlayer({\n    container: document.getElementById('aplayer'),\n    autoplay: false,\n    listFolded: false,\n    audio: list\n});\n</script>\n\n## 2009-我爱南京跨年演唱会\n\n<div id=\"dplayer1\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp1 = new DPlayer({\n    container: document.getElementById(\"dplayer1\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2009-wanj@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n## 2014-IO 跨年演唱会\n\n<div id=\"dplayer2\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp2 = new DPlayer({\n    container: document.getElementById(\"dplayer2\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2014-io@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n## 2015-看见北京站直播实录\n\n<div id=\"dplayer3\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp3 = new DPlayer({\n    container: document.getElementById(\"dplayer3\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2015-kj@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n## 2018-洗心革面跨年演唱会\n\n<div id=\"dplayer4\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp4 = new DPlayer({\n    container: document.getElementById(\"dplayer4\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2018-xxgm@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n","source":"_posts/lizhi.md","raw":"---\ntitle: 南京市民李先生\ndate: 2022-08-22 10:20:48\ntags:\n  - Music\ncategories:\n  - Music\nexcerpt: 南京市民李先生私藏\n---\n\n<link rel=\"stylesheet\" href=\"https://testingcf.jsdelivr.net/npm/aplayer/dist/APlayer.min.css\" />\n<link rel=\"stylesheet\" href=\"https://testingcf.jsdelivr.net/npm/driver.js/dist/driver.min.css\" />\n\n<script src=\"https://testingcf.jsdelivr.net/npm/aplayer/dist/APlayer.min.js\"></script>\n<script src=\"https://testingcf.jsdelivr.net/gh/nj-lizhi/song@main/audio/list-v2.js\"></script>\n\n<script src=\"https://testingcf.jsdelivr.net/npm/hls.js@0.14.4/dist/hls.min.js\"></script>\n<script src=\"https://testingcf.jsdelivr.net/npm/dplayer@1.27.0/dist/DPlayer.min.js\"></script>\n\n<script src=\"https://testingcf.jsdelivr.net/npm/driver.js/dist/driver.min.js\"></script>\n\n## 音乐合集\n\n<div id=\"aplayer\"></div>\n\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst ap = new APlayer({\n    container: document.getElementById('aplayer'),\n    autoplay: false,\n    listFolded: false,\n    audio: list\n});\n</script>\n\n## 2009-我爱南京跨年演唱会\n\n<div id=\"dplayer1\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp1 = new DPlayer({\n    container: document.getElementById(\"dplayer1\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2009-wanj@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n## 2014-IO 跨年演唱会\n\n<div id=\"dplayer2\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp2 = new DPlayer({\n    container: document.getElementById(\"dplayer2\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2014-io@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n## 2015-看见北京站直播实录\n\n<div id=\"dplayer3\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp3 = new DPlayer({\n    container: document.getElementById(\"dplayer3\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2015-kj@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n## 2018-洗心革面跨年演唱会\n\n<div id=\"dplayer4\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp4 = new DPlayer({\n    container: document.getElementById(\"dplayer4\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2018-xxgm@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n","slug":"lizhi","published":1,"updated":"2025-03-02T12:33:04.661Z","comments":1,"layout":"post","photos":[],"_id":"cm7t27pkv000453jkhhwf5m6w","content":"<link rel=\"stylesheet\" href=\"https://testingcf.jsdelivr.net/npm/aplayer/dist/APlayer.min.css\" />\n<link rel=\"stylesheet\" href=\"https://testingcf.jsdelivr.net/npm/driver.js/dist/driver.min.css\" />\n\n<script src=\"https://testingcf.jsdelivr.net/npm/aplayer/dist/APlayer.min.js\"></script>\n<script src=\"https://testingcf.jsdelivr.net/gh/nj-lizhi/song@main/audio/list-v2.js\"></script>\n\n<script src=\"https://testingcf.jsdelivr.net/npm/hls.js@0.14.4/dist/hls.min.js\"></script>\n<script src=\"https://testingcf.jsdelivr.net/npm/dplayer@1.27.0/dist/DPlayer.min.js\"></script>\n\n<script src=\"https://testingcf.jsdelivr.net/npm/driver.js/dist/driver.min.js\"></script>\n\n<h2 id=\"音乐合集\"><a href=\"#音乐合集\" class=\"headerlink\" title=\"音乐合集\"></a>音乐合集</h2><div id=\"aplayer\"></div>\n\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst ap = new APlayer({\n    container: document.getElementById('aplayer'),\n    autoplay: false,\n    listFolded: false,\n    audio: list\n});\n</script>\n\n<h2 id=\"2009-我爱南京跨年演唱会\"><a href=\"#2009-我爱南京跨年演唱会\" class=\"headerlink\" title=\"2009-我爱南京跨年演唱会\"></a>2009-我爱南京跨年演唱会</h2><div id=\"dplayer1\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp1 = new DPlayer({\n    container: document.getElementById(\"dplayer1\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2009-wanj@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n<h2 id=\"2014-IO-跨年演唱会\"><a href=\"#2014-IO-跨年演唱会\" class=\"headerlink\" title=\"2014-IO 跨年演唱会\"></a>2014-IO 跨年演唱会</h2><div id=\"dplayer2\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp2 = new DPlayer({\n    container: document.getElementById(\"dplayer2\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2014-io@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n<h2 id=\"2015-看见北京站直播实录\"><a href=\"#2015-看见北京站直播实录\" class=\"headerlink\" title=\"2015-看见北京站直播实录\"></a>2015-看见北京站直播实录</h2><div id=\"dplayer3\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp3 = new DPlayer({\n    container: document.getElementById(\"dplayer3\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2015-kj@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n<h2 id=\"2018-洗心革面跨年演唱会\"><a href=\"#2018-洗心革面跨年演唱会\" class=\"headerlink\" title=\"2018-洗心革面跨年演唱会\"></a>2018-洗心革面跨年演唱会</h2><div id=\"dplayer4\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp4 = new DPlayer({\n    container: document.getElementById(\"dplayer4\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2018-xxgm@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n","more":"<link rel=\"stylesheet\" href=\"https://testingcf.jsdelivr.net/npm/aplayer/dist/APlayer.min.css\" />\n<link rel=\"stylesheet\" href=\"https://testingcf.jsdelivr.net/npm/driver.js/dist/driver.min.css\" />\n\n<script src=\"https://testingcf.jsdelivr.net/npm/aplayer/dist/APlayer.min.js\"></script>\n<script src=\"https://testingcf.jsdelivr.net/gh/nj-lizhi/song@main/audio/list-v2.js\"></script>\n\n<script src=\"https://testingcf.jsdelivr.net/npm/hls.js@0.14.4/dist/hls.min.js\"></script>\n<script src=\"https://testingcf.jsdelivr.net/npm/dplayer@1.27.0/dist/DPlayer.min.js\"></script>\n\n<script src=\"https://testingcf.jsdelivr.net/npm/driver.js/dist/driver.min.js\"></script>\n\n<h2 id=\"音乐合集\"><a href=\"#音乐合集\" class=\"headerlink\" title=\"音乐合集\"></a>音乐合集</h2><div id=\"aplayer\"></div>\n\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst ap = new APlayer({\n    container: document.getElementById('aplayer'),\n    autoplay: false,\n    listFolded: false,\n    audio: list\n});\n</script>\n\n<h2 id=\"2009-我爱南京跨年演唱会\"><a href=\"#2009-我爱南京跨年演唱会\" class=\"headerlink\" title=\"2009-我爱南京跨年演唱会\"></a>2009-我爱南京跨年演唱会</h2><div id=\"dplayer1\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp1 = new DPlayer({\n    container: document.getElementById(\"dplayer1\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2009-wanj@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n<h2 id=\"2014-IO-跨年演唱会\"><a href=\"#2014-IO-跨年演唱会\" class=\"headerlink\" title=\"2014-IO 跨年演唱会\"></a>2014-IO 跨年演唱会</h2><div id=\"dplayer2\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp2 = new DPlayer({\n    container: document.getElementById(\"dplayer2\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2014-io@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n<h2 id=\"2015-看见北京站直播实录\"><a href=\"#2015-看见北京站直播实录\" class=\"headerlink\" title=\"2015-看见北京站直播实录\"></a>2015-看见北京站直播实录</h2><div id=\"dplayer3\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp3 = new DPlayer({\n    container: document.getElementById(\"dplayer3\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2015-kj@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n\n<h2 id=\"2018-洗心革面跨年演唱会\"><a href=\"#2018-洗心革面跨年演唱会\" class=\"headerlink\" title=\"2018-洗心革面跨年演唱会\"></a>2018-洗心革面跨年演唱会</h2><div id=\"dplayer4\"></div>\n<script>\n// https://api.i-meto.com/meting/api?server=netease&type=playlist&id=3778678\nconst dp4 = new DPlayer({\n    container: document.getElementById(\"dplayer4\"),\n    video: {\n        url: \"https://testingcf.jsdelivr.net/gh/nj-lizhi/kn-2018-xxgm@main/video/roadmap.js\",\n        type: \"hls\",\n    },\n});\n</script>\n"},{"title":"linux_常用命令记录","_content":"\n\n在日常使用 Linux 过程中，会频繁接触并执行各种命令。然而，由于命令众多且语法各异，难免会有遗忘的情况。为了提高工作效率，避免每次都需要重新查找或记忆，这里特意整理并备份了一些常用的 Linux 命令，方便随时翻阅和查找，以便在需要时快速调用。\n\n## 统计指定软件的内存占用情况\n\n该命令会遍历所有相关进程（如 Chromium），累计其占用的物理内存（RSS），并最终转换为 MB 单位输出。\n\n```shell\nps aux | grep chromium | awk '{sum += $6} END {print sum/1024 \" MB\"}'\n```\n\n## 链接无公网 IP 的 GPU 服务器\n\n近年来，随着 AI 计算的爆发，越来越多的 GPU 服务器投入使用。然而，这些服务器通常位于内网环境，缺少公网 IP，导致无法直接访问。为了解决这个问题，可以使用 SSH 隧道技术，将本地端口映射到远程服务器，从而实现安全稳定的访问。这个命令可用于在本地访问 GPU 服务器上的服务\n\n```shell\nssh -CNg -L 8003:127.0.0.1:8003 root@云主机地址 -p 32382\n```\n\n参数解析：\n\n- -C：开启压缩，提高低带宽环境下的传输效率。\n- -N：不执行远程命令，仅建立隧道。\n- -g：允许外部主机访问本地端口（如果仅需本机访问，可去掉）。\n- -L 8003:127.0.0.1:8003：将本地 8003 端口映射到远程服务器的 127.0.0.1:8003，便于访问 GPU 服务器上的服务。\n- root@云主机地址：远程服务器的登录用户和地址。\n- -p 32382：指定 SSH 连接的端口。\n","source":"_posts/linux/linux_常用命令记录.md","raw":"---\ntitle: linux_常用命令记录\n---\n\n\n在日常使用 Linux 过程中，会频繁接触并执行各种命令。然而，由于命令众多且语法各异，难免会有遗忘的情况。为了提高工作效率，避免每次都需要重新查找或记忆，这里特意整理并备份了一些常用的 Linux 命令，方便随时翻阅和查找，以便在需要时快速调用。\n\n## 统计指定软件的内存占用情况\n\n该命令会遍历所有相关进程（如 Chromium），累计其占用的物理内存（RSS），并最终转换为 MB 单位输出。\n\n```shell\nps aux | grep chromium | awk '{sum += $6} END {print sum/1024 \" MB\"}'\n```\n\n## 链接无公网 IP 的 GPU 服务器\n\n近年来，随着 AI 计算的爆发，越来越多的 GPU 服务器投入使用。然而，这些服务器通常位于内网环境，缺少公网 IP，导致无法直接访问。为了解决这个问题，可以使用 SSH 隧道技术，将本地端口映射到远程服务器，从而实现安全稳定的访问。这个命令可用于在本地访问 GPU 服务器上的服务\n\n```shell\nssh -CNg -L 8003:127.0.0.1:8003 root@云主机地址 -p 32382\n```\n\n参数解析：\n\n- -C：开启压缩，提高低带宽环境下的传输效率。\n- -N：不执行远程命令，仅建立隧道。\n- -g：允许外部主机访问本地端口（如果仅需本机访问，可去掉）。\n- -L 8003:127.0.0.1:8003：将本地 8003 端口映射到远程服务器的 127.0.0.1:8003，便于访问 GPU 服务器上的服务。\n- root@云主机地址：远程服务器的登录用户和地址。\n- -p 32382：指定 SSH 连接的端口。\n","slug":"linux/linux_常用命令记录","published":1,"date":"2025-03-02T13:47:24.652Z","updated":"2025-03-02T13:50:21.920Z","comments":1,"layout":"post","photos":[],"_id":"cm7t27pkv000553jke5tibrw8","content":"<p>在日常使用 Linux 过程中，会频繁接触并执行各种命令。然而，由于命令众多且语法各异，难免会有遗忘的情况。为了提高工作效率，避免每次都需要重新查找或记忆，这里特意整理并备份了一些常用的 Linux 命令，方便随时翻阅和查找，以便在需要时快速调用。</p>\n<h2 id=\"统计指定软件的内存占用情况\"><a href=\"#统计指定软件的内存占用情况\" class=\"headerlink\" title=\"统计指定软件的内存占用情况\"></a>统计指定软件的内存占用情况</h2><p>该命令会遍历所有相关进程（如 Chromium），累计其占用的物理内存（RSS），并最终转换为 MB 单位输出。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux | grep chromium | awk &#x27;&#123;sum += $6&#125; END &#123;print sum/1024 &quot; MB&quot;&#125;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"链接无公网-IP-的-GPU-服务器\"><a href=\"#链接无公网-IP-的-GPU-服务器\" class=\"headerlink\" title=\"链接无公网 IP 的 GPU 服务器\"></a>链接无公网 IP 的 GPU 服务器</h2><p>近年来，随着 AI 计算的爆发，越来越多的 GPU 服务器投入使用。然而，这些服务器通常位于内网环境，缺少公网 IP，导致无法直接访问。为了解决这个问题，可以使用 SSH 隧道技术，将本地端口映射到远程服务器，从而实现安全稳定的访问。这个命令可用于在本地访问 GPU 服务器上的服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -CNg -L 8003:127.0.0.1:8003 root@云主机地址 -p 32382</span><br></pre></td></tr></table></figure>\n\n<p>参数解析：</p>\n<ul>\n<li>-C：开启压缩，提高低带宽环境下的传输效率。</li>\n<li>-N：不执行远程命令，仅建立隧道。</li>\n<li>-g：允许外部主机访问本地端口（如果仅需本机访问，可去掉）。</li>\n<li>-L 8003:127.0.0.1:8003：将本地 8003 端口映射到远程服务器的 127.0.0.1:8003，便于访问 GPU 服务器上的服务。</li>\n<li>root@云主机地址：远程服务器的登录用户和地址。</li>\n<li>-p 32382：指定 SSH 连接的端口。</li>\n</ul>\n","excerpt":"","more":"<p>在日常使用 Linux 过程中，会频繁接触并执行各种命令。然而，由于命令众多且语法各异，难免会有遗忘的情况。为了提高工作效率，避免每次都需要重新查找或记忆，这里特意整理并备份了一些常用的 Linux 命令，方便随时翻阅和查找，以便在需要时快速调用。</p>\n<h2 id=\"统计指定软件的内存占用情况\"><a href=\"#统计指定软件的内存占用情况\" class=\"headerlink\" title=\"统计指定软件的内存占用情况\"></a>统计指定软件的内存占用情况</h2><p>该命令会遍历所有相关进程（如 Chromium），累计其占用的物理内存（RSS），并最终转换为 MB 单位输出。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux | grep chromium | awk &#x27;&#123;sum += $6&#125; END &#123;print sum/1024 &quot; MB&quot;&#125;&#x27;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"链接无公网-IP-的-GPU-服务器\"><a href=\"#链接无公网-IP-的-GPU-服务器\" class=\"headerlink\" title=\"链接无公网 IP 的 GPU 服务器\"></a>链接无公网 IP 的 GPU 服务器</h2><p>近年来，随着 AI 计算的爆发，越来越多的 GPU 服务器投入使用。然而，这些服务器通常位于内网环境，缺少公网 IP，导致无法直接访问。为了解决这个问题，可以使用 SSH 隧道技术，将本地端口映射到远程服务器，从而实现安全稳定的访问。这个命令可用于在本地访问 GPU 服务器上的服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -CNg -L 8003:127.0.0.1:8003 root@云主机地址 -p 32382</span><br></pre></td></tr></table></figure>\n\n<p>参数解析：</p>\n<ul>\n<li>-C：开启压缩，提高低带宽环境下的传输效率。</li>\n<li>-N：不执行远程命令，仅建立隧道。</li>\n<li>-g：允许外部主机访问本地端口（如果仅需本机访问，可去掉）。</li>\n<li>-L 8003:127.0.0.1:8003：将本地 8003 端口映射到远程服务器的 127.0.0.1:8003，便于访问 GPU 服务器上的服务。</li>\n<li>root@云主机地址：远程服务器的登录用户和地址。</li>\n<li>-p 32382：指定 SSH 连接的端口。</li>\n</ul>\n"},{"title":"hexo主题安装","_content":"\n[hexo官网](https://github.com/hexojs/hexo)\n[主题](https://hexo.io/themes/)\n[插件](https://hexo.io/zh-cn/docs/tag-plugins)\n\n## maple主题安装\n\n[官网](https://github.com/xbmlz/hexo-theme-maple)\n\n[例子](https://github.com/xbmlz/xbmlz.github.io)\n\n#### 安装\n\n```shell\ncd your-blog/themes\ngit clone https://github.com/xbmlz/hexo-theme-maple.git themes/maple\n```\n\n## hexo-theme-arknights 主题安装\n\n[github](https://github.com/Yue-plus/hexo-theme-arknights)\n[官网](https://arknights.theme.hexo.yue.zone/)\n[示例](https://arknights.theme.hexo.yue.zone/)\n\n\n\n\n## async\n\n[github](https://github.com/MaLuns/vitepress-theme-async)\n[官网](https://vitepress-theme-async.imalun.com/)\n[示例](https://www.imalun.com/)\n[示例](https://littlefoodiedy.github.io/)\n\n\n\n\n\n## aurora主题\n\n[官网](https://aurora.tridiamond.tech/cn/)\n\n[github](https://github.com/auroral-ui/hexo-theme-aurora)\n\n[例子](https://blog.bennyxguo.com/)\n\n\n## hexo-theme-freemind.386\n\n[](https://github.com/blackshow/hexo-theme-freemind.386)\n[](https://blackshow.me/)\n\n## hexo-theme-indigo\n\n[](https://github.com/yscoder/hexo-theme-indigo)\n[](https://yscoder.github.io/)\n\n## geektutu\n\n[](https://geektutu.com/)\n[]()\n\n\n## hexo-theme-bcxm\n\n[示例](https://www.bcxm.fun/page/3/#content-inner)\n[github](https://github.com/chenxz21/hexo-theme-bcxm)\n\n\n## terminal_theme\n\n[github](https://github.com/lazysheep666/terminal_theme?tab=readme-ov-file)\n[示例](https://lazysheep666.github.io/)\n\n\n## hexo-theme-jsimple\n\n[github](https://github.com/tangkunyin/hexo-theme-jsimple)\n[示例](https://tomartisan.com/)\n\n\n## hexo-theme-flexblock\n\n[github](https://github.com/miiiku/hexo-theme-flexblock)\n[示例](https://kyori.xyz/)\n\n\n## hexo-theme-terminal\n\n[github](https://github.com/tinkink-net/hexo-theme-terminal)\n[示例](https://blog.tinkink.net/)\n","source":"_posts/detail/hexo-them.md","raw":"---\ntitle: hexo主题安装\n---\n\n[hexo官网](https://github.com/hexojs/hexo)\n[主题](https://hexo.io/themes/)\n[插件](https://hexo.io/zh-cn/docs/tag-plugins)\n\n## maple主题安装\n\n[官网](https://github.com/xbmlz/hexo-theme-maple)\n\n[例子](https://github.com/xbmlz/xbmlz.github.io)\n\n#### 安装\n\n```shell\ncd your-blog/themes\ngit clone https://github.com/xbmlz/hexo-theme-maple.git themes/maple\n```\n\n## hexo-theme-arknights 主题安装\n\n[github](https://github.com/Yue-plus/hexo-theme-arknights)\n[官网](https://arknights.theme.hexo.yue.zone/)\n[示例](https://arknights.theme.hexo.yue.zone/)\n\n\n\n\n## async\n\n[github](https://github.com/MaLuns/vitepress-theme-async)\n[官网](https://vitepress-theme-async.imalun.com/)\n[示例](https://www.imalun.com/)\n[示例](https://littlefoodiedy.github.io/)\n\n\n\n\n\n## aurora主题\n\n[官网](https://aurora.tridiamond.tech/cn/)\n\n[github](https://github.com/auroral-ui/hexo-theme-aurora)\n\n[例子](https://blog.bennyxguo.com/)\n\n\n## hexo-theme-freemind.386\n\n[](https://github.com/blackshow/hexo-theme-freemind.386)\n[](https://blackshow.me/)\n\n## hexo-theme-indigo\n\n[](https://github.com/yscoder/hexo-theme-indigo)\n[](https://yscoder.github.io/)\n\n## geektutu\n\n[](https://geektutu.com/)\n[]()\n\n\n## hexo-theme-bcxm\n\n[示例](https://www.bcxm.fun/page/3/#content-inner)\n[github](https://github.com/chenxz21/hexo-theme-bcxm)\n\n\n## terminal_theme\n\n[github](https://github.com/lazysheep666/terminal_theme?tab=readme-ov-file)\n[示例](https://lazysheep666.github.io/)\n\n\n## hexo-theme-jsimple\n\n[github](https://github.com/tangkunyin/hexo-theme-jsimple)\n[示例](https://tomartisan.com/)\n\n\n## hexo-theme-flexblock\n\n[github](https://github.com/miiiku/hexo-theme-flexblock)\n[示例](https://kyori.xyz/)\n\n\n## hexo-theme-terminal\n\n[github](https://github.com/tinkink-net/hexo-theme-terminal)\n[示例](https://blog.tinkink.net/)\n","slug":"detail/hexo-them","published":1,"date":"2025-03-02T12:49:29.533Z","updated":"2025-03-02T15:09:58.918Z","comments":1,"layout":"post","photos":[],"_id":"cm7t27pkw000853jk9eiuhxdw","content":"<p><a href=\"https://github.com/hexojs/hexo\">hexo官网</a><br><a href=\"https://hexo.io/themes/\">主题</a><br><a href=\"https://hexo.io/zh-cn/docs/tag-plugins\">插件</a></p>\n<h2 id=\"maple主题安装\"><a href=\"#maple主题安装\" class=\"headerlink\" title=\"maple主题安装\"></a>maple主题安装</h2><p><a href=\"https://github.com/xbmlz/hexo-theme-maple\">官网</a></p>\n<p><a href=\"https://github.com/xbmlz/xbmlz.github.io\">例子</a></p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd your-blog/themes</span><br><span class=\"line\">git clone https://github.com/xbmlz/hexo-theme-maple.git themes/maple</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hexo-theme-arknights-主题安装\"><a href=\"#hexo-theme-arknights-主题安装\" class=\"headerlink\" title=\"hexo-theme-arknights 主题安装\"></a>hexo-theme-arknights 主题安装</h2><p><a href=\"https://github.com/Yue-plus/hexo-theme-arknights\">github</a><br><a href=\"https://arknights.theme.hexo.yue.zone/\">官网</a><br><a href=\"https://arknights.theme.hexo.yue.zone/\">示例</a></p>\n<h2 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h2><p><a href=\"https://github.com/MaLuns/vitepress-theme-async\">github</a><br><a href=\"https://vitepress-theme-async.imalun.com/\">官网</a><br><a href=\"https://www.imalun.com/\">示例</a><br><a href=\"https://littlefoodiedy.github.io/\">示例</a></p>\n<h2 id=\"aurora主题\"><a href=\"#aurora主题\" class=\"headerlink\" title=\"aurora主题\"></a>aurora主题</h2><p><a href=\"https://aurora.tridiamond.tech/cn/\">官网</a></p>\n<p><a href=\"https://github.com/auroral-ui/hexo-theme-aurora\">github</a></p>\n<p><a href=\"https://blog.bennyxguo.com/\">例子</a></p>\n<h2 id=\"hexo-theme-freemind-386\"><a href=\"#hexo-theme-freemind-386\" class=\"headerlink\" title=\"hexo-theme-freemind.386\"></a>hexo-theme-freemind.386</h2><p><a href=\"https://github.com/blackshow/hexo-theme-freemind.386\"></a><br><a href=\"https://blackshow.me/\"></a></p>\n<h2 id=\"hexo-theme-indigo\"><a href=\"#hexo-theme-indigo\" class=\"headerlink\" title=\"hexo-theme-indigo\"></a>hexo-theme-indigo</h2><p><a href=\"https://github.com/yscoder/hexo-theme-indigo\"></a><br><a href=\"https://yscoder.github.io/\"></a></p>\n<h2 id=\"geektutu\"><a href=\"#geektutu\" class=\"headerlink\" title=\"geektutu\"></a>geektutu</h2><p><a href=\"https://geektutu.com/\"></a><br><a href=\"\"></a></p>\n<h2 id=\"hexo-theme-bcxm\"><a href=\"#hexo-theme-bcxm\" class=\"headerlink\" title=\"hexo-theme-bcxm\"></a>hexo-theme-bcxm</h2><p><a href=\"https://www.bcxm.fun/page/3/#content-inner\">示例</a><br><a href=\"https://github.com/chenxz21/hexo-theme-bcxm\">github</a></p>\n<h2 id=\"terminal-theme\"><a href=\"#terminal-theme\" class=\"headerlink\" title=\"terminal_theme\"></a>terminal_theme</h2><p><a href=\"https://github.com/lazysheep666/terminal_theme?tab=readme-ov-file\">github</a><br><a href=\"https://lazysheep666.github.io/\">示例</a></p>\n<h2 id=\"hexo-theme-jsimple\"><a href=\"#hexo-theme-jsimple\" class=\"headerlink\" title=\"hexo-theme-jsimple\"></a>hexo-theme-jsimple</h2><p><a href=\"https://github.com/tangkunyin/hexo-theme-jsimple\">github</a><br><a href=\"https://tomartisan.com/\">示例</a></p>\n<h2 id=\"hexo-theme-flexblock\"><a href=\"#hexo-theme-flexblock\" class=\"headerlink\" title=\"hexo-theme-flexblock\"></a>hexo-theme-flexblock</h2><p><a href=\"https://github.com/miiiku/hexo-theme-flexblock\">github</a><br><a href=\"https://kyori.xyz/\">示例</a></p>\n<h2 id=\"hexo-theme-terminal\"><a href=\"#hexo-theme-terminal\" class=\"headerlink\" title=\"hexo-theme-terminal\"></a>hexo-theme-terminal</h2><p><a href=\"https://github.com/tinkink-net/hexo-theme-terminal\">github</a><br><a href=\"https://blog.tinkink.net/\">示例</a></p>\n","excerpt":"","more":"<p><a href=\"https://github.com/hexojs/hexo\">hexo官网</a><br><a href=\"https://hexo.io/themes/\">主题</a><br><a href=\"https://hexo.io/zh-cn/docs/tag-plugins\">插件</a></p>\n<h2 id=\"maple主题安装\"><a href=\"#maple主题安装\" class=\"headerlink\" title=\"maple主题安装\"></a>maple主题安装</h2><p><a href=\"https://github.com/xbmlz/hexo-theme-maple\">官网</a></p>\n<p><a href=\"https://github.com/xbmlz/xbmlz.github.io\">例子</a></p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd your-blog/themes</span><br><span class=\"line\">git clone https://github.com/xbmlz/hexo-theme-maple.git themes/maple</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"hexo-theme-arknights-主题安装\"><a href=\"#hexo-theme-arknights-主题安装\" class=\"headerlink\" title=\"hexo-theme-arknights 主题安装\"></a>hexo-theme-arknights 主题安装</h2><p><a href=\"https://github.com/Yue-plus/hexo-theme-arknights\">github</a><br><a href=\"https://arknights.theme.hexo.yue.zone/\">官网</a><br><a href=\"https://arknights.theme.hexo.yue.zone/\">示例</a></p>\n<h2 id=\"async\"><a href=\"#async\" class=\"headerlink\" title=\"async\"></a>async</h2><p><a href=\"https://github.com/MaLuns/vitepress-theme-async\">github</a><br><a href=\"https://vitepress-theme-async.imalun.com/\">官网</a><br><a href=\"https://www.imalun.com/\">示例</a><br><a href=\"https://littlefoodiedy.github.io/\">示例</a></p>\n<h2 id=\"aurora主题\"><a href=\"#aurora主题\" class=\"headerlink\" title=\"aurora主题\"></a>aurora主题</h2><p><a href=\"https://aurora.tridiamond.tech/cn/\">官网</a></p>\n<p><a href=\"https://github.com/auroral-ui/hexo-theme-aurora\">github</a></p>\n<p><a href=\"https://blog.bennyxguo.com/\">例子</a></p>\n<h2 id=\"hexo-theme-freemind-386\"><a href=\"#hexo-theme-freemind-386\" class=\"headerlink\" title=\"hexo-theme-freemind.386\"></a>hexo-theme-freemind.386</h2><p><a href=\"https://github.com/blackshow/hexo-theme-freemind.386\"></a><br><a href=\"https://blackshow.me/\"></a></p>\n<h2 id=\"hexo-theme-indigo\"><a href=\"#hexo-theme-indigo\" class=\"headerlink\" title=\"hexo-theme-indigo\"></a>hexo-theme-indigo</h2><p><a href=\"https://github.com/yscoder/hexo-theme-indigo\"></a><br><a href=\"https://yscoder.github.io/\"></a></p>\n<h2 id=\"geektutu\"><a href=\"#geektutu\" class=\"headerlink\" title=\"geektutu\"></a>geektutu</h2><p><a href=\"https://geektutu.com/\"></a><br><a href=\"\"></a></p>\n<h2 id=\"hexo-theme-bcxm\"><a href=\"#hexo-theme-bcxm\" class=\"headerlink\" title=\"hexo-theme-bcxm\"></a>hexo-theme-bcxm</h2><p><a href=\"https://www.bcxm.fun/page/3/#content-inner\">示例</a><br><a href=\"https://github.com/chenxz21/hexo-theme-bcxm\">github</a></p>\n<h2 id=\"terminal-theme\"><a href=\"#terminal-theme\" class=\"headerlink\" title=\"terminal_theme\"></a>terminal_theme</h2><p><a href=\"https://github.com/lazysheep666/terminal_theme?tab=readme-ov-file\">github</a><br><a href=\"https://lazysheep666.github.io/\">示例</a></p>\n<h2 id=\"hexo-theme-jsimple\"><a href=\"#hexo-theme-jsimple\" class=\"headerlink\" title=\"hexo-theme-jsimple\"></a>hexo-theme-jsimple</h2><p><a href=\"https://github.com/tangkunyin/hexo-theme-jsimple\">github</a><br><a href=\"https://tomartisan.com/\">示例</a></p>\n<h2 id=\"hexo-theme-flexblock\"><a href=\"#hexo-theme-flexblock\" class=\"headerlink\" title=\"hexo-theme-flexblock\"></a>hexo-theme-flexblock</h2><p><a href=\"https://github.com/miiiku/hexo-theme-flexblock\">github</a><br><a href=\"https://kyori.xyz/\">示例</a></p>\n<h2 id=\"hexo-theme-terminal\"><a href=\"#hexo-theme-terminal\" class=\"headerlink\" title=\"hexo-theme-terminal\"></a>hexo-theme-terminal</h2><p><a href=\"https://github.com/tinkink-net/hexo-theme-terminal\">github</a><br><a href=\"https://blog.tinkink.net/\">示例</a></p>\n"},{"title":"构建一个前端框架-响应式，组合式，零依赖","date":"2023-09-20T10:10:46.000Z","excerpt":"构建一个前端框架-响应式，组合式，零依赖","_content":"\n> 原文地址：[https://18alan.space/posts/how-hard-is-it-to-build-a-frontend-framework.html#how-hard-is-it-to-build-a-frontend-framework](https://18alan.space/posts/how-hard-is-it-to-build-a-frontend-framework.html#how-hard-is-it-to-build-a-frontend-framework)\n\n在开始之前设定一些背景，所谓的前端框架是指一个能够让我们**避免**编写传统的HTML和JavaScript代码的框架，例如：\n\n```HTML\n<p id=\"cool-para\"></p>\n<script>\n  const coolPara = 'Lorem ipsum.';\n  const el = document.getElementById('cool-para');\n  el.innerText = coolPara;\n</script>\n```\n\n而是允许我们编写类似这样的神奇HTML和JavaScript代码 ([Vue](https://vuejs.org/guide/scaling-up/sfc.html#introduction)):\n\n```HTML\n<script setup>\n  const coolPara = 'Lorem ipsum.';\n</script>\n<template>\n  <p>{{ coolPara }}</p>\n</template>\n```\n\n或者是([React](https://react.dev/learn/your-first-component#defining-a-component)):\n\n```JSX\nexport default function Para() {\n  const coolPara = 'Lorem ipsum';\n  return <p>{ coolPara }</p>;\n}\n```\n\n这样一个框架的好处是可以理解的。记住像 `document`、`innerText` 和 `getElementById` 这样的单词或短语非常困难，因为它们音节太长了。\n\n好吧，音节太长并不是主要原因。\n\n> 响应式✨\n\n第一个主要原因是，在第二和第三个示例中，我们只需要设置或者更新变量`coolPara`和标记的值，更新`<p>`元素时不需要显式的设置它的`innerText`。\n\n这被称为***响应式***，UI与数据绑定在一起，只需要更改即可更新UI\n\n> 组合式✨\n\n第二个主要原因是可以定一个组件并重用它，而不必在每次需要时都重新定义它，这就是所谓的***组合式***。\n\n默认情况下，普通的HTML+JavaScript没有这个属性。因此，下面的代码并没有做它认为应该做的事情：\n\n```HTML\n<!-- Defining the component -->\n<component name=\"cool-para\">\n  <p>\n    <content />\n  </p>\n</component>\n\n<!-- Using the component -->\n<cool-para>Lorem ipsum.</cool-para>\n```\n\n响应式和组合式时Vue、React等常用的前端框架提供的两个主要特性。\n\n这些抽象并不是没有代价的，人们必须预先在加载一些特定于框架的概念，当事情以令人费解的神奇方式工作时处理它们的漏洞，更不用说，还有一大堆容易失败的依赖关系。\n\n但事实证明，使用现代Web API，实现这两个目标并不难。在大多数情况下，我们实际上可能并不需要传统的框架和它们复杂的混乱…\n\n## 响应式（Reactivity）\n\n一个简单的陈述来解释响应式就是***当数据更新时，自动更新用户界面***。\n\n第一部分是了解***数据何时更新***，不幸的是，这不是一个普通的对象可以做到的事情。我们不能简单的调用一个`ondateupdate`的监听器来监听数据的变化。\n\n幸运的是，JavaScript刚好有一个可以让我们做到这一点的工具，它叫做代理（[`Proxy`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy)）。\n\n### 代理对象（Proxy Objects）\n\n`Proxy`允许我们从一个***普通对象***创建一个***代理对象***：\n\n```JavaScript\nconst user = { name: 'Lin' };\nconst proxy = new Proxy(user, {});\n```\n\n并且这个***代理对象***可以监听到数据变化\n\n在上面的例子中，我们有一个***代理对象***，但是当知道名称已经改变时，它并没有真正做任何事情。\n\n为此，我们需要一个***处理程序***，它是一个对象，告诉***代理对象***在更新数据时应该做什么。\n\n```JavaScript\n// Handler that listens to data assignment operations\nconst handler = {\n  set(user, value, property) {\n    console.log(`${property} is being updated`);\n    return Reflect.set(user, value, property);\n  },\n};\n\n// Creating a proxy with the handler\nconst user = { name: 'Lin' };\nconst proxy = new Proxy(user, handler);\n```\n\n现在，每当我们使用对代理对象更新`name`时，都会收到一条消息，并输出`name is being updated`。\n\n如果你在想，这有什么了不起，我本来可以使用普通的[*setter*](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set)来做到这一点，我来告诉你其中的妙处：\n\n- 代理方法是通用的，并且可以重用。\n- 在代理对象上设置的任何值都可以递归转换为代理。\n- 现在你拥有了这个神奇的对象，它可以对数据更新做出反应，无论嵌套多深。\n\n除此之外，你还可以处理其他访问[事件](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy#handler_functions)，例如当属性被[读取](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get)、[更新](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set)、[删除](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/deleteProperty)等等。\n\n既然我们有能力监听操作，我们就需要以一种有意义的方式对它们作出反应。\n\n### 更新用户界面\n\n如果您还记得，第二部分的***响应式***是***自动更新UI***。为此，我们需要获取要更新的***适当***UI元素。但在此之前，我们需要首先标记一个***适当***的UI元素。\n\n为此，我们将使用[data-attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)，这个特性允许我们在元素上设置任意值。\n\n```HTML\n<div>\n  <!-- Mark the h1 as appropriate for when \"name\" changes -->\n  <h1 data-mark=\"name\"></h1>\n</div>\n```\n\n`data-attributes`的精确性在于，我们现在可以使用以下方法找到所有***适当***的元素。\n\n```JavaScript\ndocument.querySelectorAll('[data-mark=\"name\"]');\n```\n\n现在我们只需要设置所有适当元素的`innerText`:\n\n```JavaScript\nconst handler = {\n  set(user, value, property) {\n    const query = `[data-mark=\"${property}\"]`;\n    const elements = document.querySelectorAll(query);\n\n    for (const el of elements) {\n      el.innerText = value;\n    }\n\n    return Reflect.set(user, value, property);\n  },\n};\n\n// Regular object is omitted cause it's not needed.\nconst user = new Proxy({ name: 'Lin' }, handler);\n```\n\n就是这样，这就是***响应式***的关键！\n\n由于我们处理程序的通用性质，对于用户的任何设置的属性，所有适当的用户界面元素都将被更新。\n\n这就是 JavaScript 代理功能的强大之处，没有任何依赖项，并且经过一些巧妙的处理，它可以为我们提供这些神奇的响应式对象。\n\n现在转向第二个主要内容...\n\n## 组合式（Composibility）\n\n事实证明，浏览器已经有一个专门的功能，称为 [Web Components](https://developer.mozilla.org/en-US/docs/Web/Web_Components)，谁知道呢！\n\n很少有人使用它，因为使用起来有点麻烦（而且大多数人在开始项目时都会默认选择传统的框架，而不考虑项目的范围）。\n\n要实现组件的可组合性，我们首先需要定义这些组件。\n\n### 使用模板和插槽（template 和 slot）来定义组件\n\n`<template>` 标签用于包含浏览器不会渲染的标记。例如，你可以在你的 HTML 中添加以下标记：\n\n```HTML\n<template>\n  <h1>Will not render!</h1>\n</template>\n```\n\n它们不会被渲染。你可以将它们视为组件的隐形容器。\n\n下一个构建块是 `<slot>` 元素，它定义了组件的内容将放置在哪里。这使得组件可以与不同的内容重复使用，即它变得具有可组合性。\n\n例如，这是一个将其文本颜色设为红色的 `<h1>` 元素的示例。\n\n```HTML\n<template>\n  <h1 style=\"color: red\">\n    <slot />\n  </h1>\n</template>\n```\n\n在我们开始使用组件之前，就像上面的红色 `<h1>` 一样，我们需要***注册***它们。\n\n### 注册组件\n\n在注册红色 `<h1>` 组件之前，我们需要一个名称来注册它。我们可以使用 name 属性来实现：\n\n```HTML\n<template name=\"red-h1\">\n  <h1 style=\"color: red\">\n    <slot />\n  </h1>\n</template>\n```\n\n现在，使用一些 JavaScript 代码，我们可以获取组件及其名称：\n\n```JavaScript\nconst template = document.getElementsByTagName('template')[0];\nconst componentName = template.getAttribute('name');\n```\n\n最后，使用 `customElements.define` 来注册它：\n\n```JavaScript\ncustomElements.define(\n  componentName,\n  class extends HTMLElement {\n    constructor() {\n      super();\n      const component = template.content.children[0].cloneNode(true);\n      this.attachShadow({ mode: 'open' }).appendChild(component);\n    }\n  }\n);\n```\n\n上面的代码块中有很多内容：\n\n- 我们调用 `customElements.define` 方法，传递了两个参数。\n- 第一个参数是组件的名称（例如 \"red-h1\"）。\n- 第二个参数是一个类，它将我们的自定义组件定义为 `HTMLElement`。\n\n在类构造函数中，我们使用 `red-h1` 模板的副本来设置阴影 DOM 树。\n\n- 什么是 Shadow DOM?\n\n  阴影 DOM 是设置多个默认元素的样式的方式，例如范围输入（[range input](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range)）或视频元素（[video element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video)）。\n\n  元素的阴影 DOM 默认是隐藏的，这就是为什么我们不能在开发工具控制台中看到它的原因，但在这里，我们将`mode`设置为 `'open'`。\n\n  这允许我们检查元素并看到红色的 `<h1>` 附加到了 [#shadow-root](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot)。\n\n调用 `customElements.define` 将允许我们像使用常规 HTML 元素一样使用定义的组件。\n\n```HTML\n<red-h1>This will render in red!</red-h1>\n```\n\n现在让我们把这两个概念结合起来吧！如果你有任何与这个主题相关的问题或需要进一步的解释，请随时提问。\n\n## 组合式+响应式\n\n简单回顾一下，我们做了两件事:\n\n1. 我们创建了一个响应式数据结构，即***代理对象***，当设置一个值时，它可以更新我们已经标记为***适当***的任何元素。\n2. 我们定义了一个自定义组件 `red-h1`，它会将其内容呈现为红色的 `<h1>`。\n\n现在我们可以将它们组合在一起了：\n\n```HTML\n<div>\n  <red-h1 data-mark=\"name\"></red-h1>\n</div>\n\n<script>\n  const user = new Proxy({}, handler);\n  user.name = 'Lin';\n</script>\n```\n\n然后，我们可以使用自定义组件来呈现我们的数据，并在更改数据时更新用户界面。\n\n## 最后\n\n当然，传统的前端框架不只是这样做，它们有专门的语法，例如Vue中的[模板语法](https://vuejs.org/guide/essentials/template-syntax.html)和React中的[JSX](https://react.dev/learn/writing-markup-with-jsx)，使得编写复杂的前端相对更加简洁。\n\n由于这种专门的语法不是常规的 JavaScript 或 HTML，因此浏览器无法解析它们，所以它们都需要专门的工具将它们编译成常规的 JavaScript、HTML 和 CSS，然后浏览器才能理解它们。因此，[很少有人再手动编写 JavaScript](https://fly.io/blog/js-ecosystem-delightfully-wierd#nobody-writes-javascript-any-more)。\n\n即使没有专门的语法，只要使用 `Proxy` 和 `WebComponents`，你也可以做到与传统的前端框架类似的许多事情，而且代码同样简洁。\n\n这里的代码过于简化，要将其转化为一个框架，你需要进一步完善。以下是我尝试做到这一点的示例，一个名为 [Strawberry](https://18alan.space/strawberry) 的框架。\n\n在开发这个框架时，我计划保持两个硬性约束：\n\n1. 无依赖。\n2. 在使用之前不需要构建步骤。\n\n还有一个轻松的约束是保持代码库的精简。在撰写本文时，它只是一个不到 400 行代码的[单个文件](https://github.com/18alantom/strawberry/blob/52cc4e3c88924d112559d0547c533c1fafa61140/index.ts)，让我们看看它会发展到哪里。\n\n","source":"_posts/build-frontend-framework.md","raw":"---\ntitle: 构建一个前端框架-响应式，组合式，零依赖\ndate: 2023-09-20 18:10:46\ntags:\n- Web\ncategories:\n- Web\nexcerpt: 构建一个前端框架-响应式，组合式，零依赖\n---\n\n> 原文地址：[https://18alan.space/posts/how-hard-is-it-to-build-a-frontend-framework.html#how-hard-is-it-to-build-a-frontend-framework](https://18alan.space/posts/how-hard-is-it-to-build-a-frontend-framework.html#how-hard-is-it-to-build-a-frontend-framework)\n\n在开始之前设定一些背景，所谓的前端框架是指一个能够让我们**避免**编写传统的HTML和JavaScript代码的框架，例如：\n\n```HTML\n<p id=\"cool-para\"></p>\n<script>\n  const coolPara = 'Lorem ipsum.';\n  const el = document.getElementById('cool-para');\n  el.innerText = coolPara;\n</script>\n```\n\n而是允许我们编写类似这样的神奇HTML和JavaScript代码 ([Vue](https://vuejs.org/guide/scaling-up/sfc.html#introduction)):\n\n```HTML\n<script setup>\n  const coolPara = 'Lorem ipsum.';\n</script>\n<template>\n  <p>{{ coolPara }}</p>\n</template>\n```\n\n或者是([React](https://react.dev/learn/your-first-component#defining-a-component)):\n\n```JSX\nexport default function Para() {\n  const coolPara = 'Lorem ipsum';\n  return <p>{ coolPara }</p>;\n}\n```\n\n这样一个框架的好处是可以理解的。记住像 `document`、`innerText` 和 `getElementById` 这样的单词或短语非常困难，因为它们音节太长了。\n\n好吧，音节太长并不是主要原因。\n\n> 响应式✨\n\n第一个主要原因是，在第二和第三个示例中，我们只需要设置或者更新变量`coolPara`和标记的值，更新`<p>`元素时不需要显式的设置它的`innerText`。\n\n这被称为***响应式***，UI与数据绑定在一起，只需要更改即可更新UI\n\n> 组合式✨\n\n第二个主要原因是可以定一个组件并重用它，而不必在每次需要时都重新定义它，这就是所谓的***组合式***。\n\n默认情况下，普通的HTML+JavaScript没有这个属性。因此，下面的代码并没有做它认为应该做的事情：\n\n```HTML\n<!-- Defining the component -->\n<component name=\"cool-para\">\n  <p>\n    <content />\n  </p>\n</component>\n\n<!-- Using the component -->\n<cool-para>Lorem ipsum.</cool-para>\n```\n\n响应式和组合式时Vue、React等常用的前端框架提供的两个主要特性。\n\n这些抽象并不是没有代价的，人们必须预先在加载一些特定于框架的概念，当事情以令人费解的神奇方式工作时处理它们的漏洞，更不用说，还有一大堆容易失败的依赖关系。\n\n但事实证明，使用现代Web API，实现这两个目标并不难。在大多数情况下，我们实际上可能并不需要传统的框架和它们复杂的混乱…\n\n## 响应式（Reactivity）\n\n一个简单的陈述来解释响应式就是***当数据更新时，自动更新用户界面***。\n\n第一部分是了解***数据何时更新***，不幸的是，这不是一个普通的对象可以做到的事情。我们不能简单的调用一个`ondateupdate`的监听器来监听数据的变化。\n\n幸运的是，JavaScript刚好有一个可以让我们做到这一点的工具，它叫做代理（[`Proxy`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy)）。\n\n### 代理对象（Proxy Objects）\n\n`Proxy`允许我们从一个***普通对象***创建一个***代理对象***：\n\n```JavaScript\nconst user = { name: 'Lin' };\nconst proxy = new Proxy(user, {});\n```\n\n并且这个***代理对象***可以监听到数据变化\n\n在上面的例子中，我们有一个***代理对象***，但是当知道名称已经改变时，它并没有真正做任何事情。\n\n为此，我们需要一个***处理程序***，它是一个对象，告诉***代理对象***在更新数据时应该做什么。\n\n```JavaScript\n// Handler that listens to data assignment operations\nconst handler = {\n  set(user, value, property) {\n    console.log(`${property} is being updated`);\n    return Reflect.set(user, value, property);\n  },\n};\n\n// Creating a proxy with the handler\nconst user = { name: 'Lin' };\nconst proxy = new Proxy(user, handler);\n```\n\n现在，每当我们使用对代理对象更新`name`时，都会收到一条消息，并输出`name is being updated`。\n\n如果你在想，这有什么了不起，我本来可以使用普通的[*setter*](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set)来做到这一点，我来告诉你其中的妙处：\n\n- 代理方法是通用的，并且可以重用。\n- 在代理对象上设置的任何值都可以递归转换为代理。\n- 现在你拥有了这个神奇的对象，它可以对数据更新做出反应，无论嵌套多深。\n\n除此之外，你还可以处理其他访问[事件](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy#handler_functions)，例如当属性被[读取](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get)、[更新](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set)、[删除](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/deleteProperty)等等。\n\n既然我们有能力监听操作，我们就需要以一种有意义的方式对它们作出反应。\n\n### 更新用户界面\n\n如果您还记得，第二部分的***响应式***是***自动更新UI***。为此，我们需要获取要更新的***适当***UI元素。但在此之前，我们需要首先标记一个***适当***的UI元素。\n\n为此，我们将使用[data-attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)，这个特性允许我们在元素上设置任意值。\n\n```HTML\n<div>\n  <!-- Mark the h1 as appropriate for when \"name\" changes -->\n  <h1 data-mark=\"name\"></h1>\n</div>\n```\n\n`data-attributes`的精确性在于，我们现在可以使用以下方法找到所有***适当***的元素。\n\n```JavaScript\ndocument.querySelectorAll('[data-mark=\"name\"]');\n```\n\n现在我们只需要设置所有适当元素的`innerText`:\n\n```JavaScript\nconst handler = {\n  set(user, value, property) {\n    const query = `[data-mark=\"${property}\"]`;\n    const elements = document.querySelectorAll(query);\n\n    for (const el of elements) {\n      el.innerText = value;\n    }\n\n    return Reflect.set(user, value, property);\n  },\n};\n\n// Regular object is omitted cause it's not needed.\nconst user = new Proxy({ name: 'Lin' }, handler);\n```\n\n就是这样，这就是***响应式***的关键！\n\n由于我们处理程序的通用性质，对于用户的任何设置的属性，所有适当的用户界面元素都将被更新。\n\n这就是 JavaScript 代理功能的强大之处，没有任何依赖项，并且经过一些巧妙的处理，它可以为我们提供这些神奇的响应式对象。\n\n现在转向第二个主要内容...\n\n## 组合式（Composibility）\n\n事实证明，浏览器已经有一个专门的功能，称为 [Web Components](https://developer.mozilla.org/en-US/docs/Web/Web_Components)，谁知道呢！\n\n很少有人使用它，因为使用起来有点麻烦（而且大多数人在开始项目时都会默认选择传统的框架，而不考虑项目的范围）。\n\n要实现组件的可组合性，我们首先需要定义这些组件。\n\n### 使用模板和插槽（template 和 slot）来定义组件\n\n`<template>` 标签用于包含浏览器不会渲染的标记。例如，你可以在你的 HTML 中添加以下标记：\n\n```HTML\n<template>\n  <h1>Will not render!</h1>\n</template>\n```\n\n它们不会被渲染。你可以将它们视为组件的隐形容器。\n\n下一个构建块是 `<slot>` 元素，它定义了组件的内容将放置在哪里。这使得组件可以与不同的内容重复使用，即它变得具有可组合性。\n\n例如，这是一个将其文本颜色设为红色的 `<h1>` 元素的示例。\n\n```HTML\n<template>\n  <h1 style=\"color: red\">\n    <slot />\n  </h1>\n</template>\n```\n\n在我们开始使用组件之前，就像上面的红色 `<h1>` 一样，我们需要***注册***它们。\n\n### 注册组件\n\n在注册红色 `<h1>` 组件之前，我们需要一个名称来注册它。我们可以使用 name 属性来实现：\n\n```HTML\n<template name=\"red-h1\">\n  <h1 style=\"color: red\">\n    <slot />\n  </h1>\n</template>\n```\n\n现在，使用一些 JavaScript 代码，我们可以获取组件及其名称：\n\n```JavaScript\nconst template = document.getElementsByTagName('template')[0];\nconst componentName = template.getAttribute('name');\n```\n\n最后，使用 `customElements.define` 来注册它：\n\n```JavaScript\ncustomElements.define(\n  componentName,\n  class extends HTMLElement {\n    constructor() {\n      super();\n      const component = template.content.children[0].cloneNode(true);\n      this.attachShadow({ mode: 'open' }).appendChild(component);\n    }\n  }\n);\n```\n\n上面的代码块中有很多内容：\n\n- 我们调用 `customElements.define` 方法，传递了两个参数。\n- 第一个参数是组件的名称（例如 \"red-h1\"）。\n- 第二个参数是一个类，它将我们的自定义组件定义为 `HTMLElement`。\n\n在类构造函数中，我们使用 `red-h1` 模板的副本来设置阴影 DOM 树。\n\n- 什么是 Shadow DOM?\n\n  阴影 DOM 是设置多个默认元素的样式的方式，例如范围输入（[range input](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range)）或视频元素（[video element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video)）。\n\n  元素的阴影 DOM 默认是隐藏的，这就是为什么我们不能在开发工具控制台中看到它的原因，但在这里，我们将`mode`设置为 `'open'`。\n\n  这允许我们检查元素并看到红色的 `<h1>` 附加到了 [#shadow-root](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot)。\n\n调用 `customElements.define` 将允许我们像使用常规 HTML 元素一样使用定义的组件。\n\n```HTML\n<red-h1>This will render in red!</red-h1>\n```\n\n现在让我们把这两个概念结合起来吧！如果你有任何与这个主题相关的问题或需要进一步的解释，请随时提问。\n\n## 组合式+响应式\n\n简单回顾一下，我们做了两件事:\n\n1. 我们创建了一个响应式数据结构，即***代理对象***，当设置一个值时，它可以更新我们已经标记为***适当***的任何元素。\n2. 我们定义了一个自定义组件 `red-h1`，它会将其内容呈现为红色的 `<h1>`。\n\n现在我们可以将它们组合在一起了：\n\n```HTML\n<div>\n  <red-h1 data-mark=\"name\"></red-h1>\n</div>\n\n<script>\n  const user = new Proxy({}, handler);\n  user.name = 'Lin';\n</script>\n```\n\n然后，我们可以使用自定义组件来呈现我们的数据，并在更改数据时更新用户界面。\n\n## 最后\n\n当然，传统的前端框架不只是这样做，它们有专门的语法，例如Vue中的[模板语法](https://vuejs.org/guide/essentials/template-syntax.html)和React中的[JSX](https://react.dev/learn/writing-markup-with-jsx)，使得编写复杂的前端相对更加简洁。\n\n由于这种专门的语法不是常规的 JavaScript 或 HTML，因此浏览器无法解析它们，所以它们都需要专门的工具将它们编译成常规的 JavaScript、HTML 和 CSS，然后浏览器才能理解它们。因此，[很少有人再手动编写 JavaScript](https://fly.io/blog/js-ecosystem-delightfully-wierd#nobody-writes-javascript-any-more)。\n\n即使没有专门的语法，只要使用 `Proxy` 和 `WebComponents`，你也可以做到与传统的前端框架类似的许多事情，而且代码同样简洁。\n\n这里的代码过于简化，要将其转化为一个框架，你需要进一步完善。以下是我尝试做到这一点的示例，一个名为 [Strawberry](https://18alan.space/strawberry) 的框架。\n\n在开发这个框架时，我计划保持两个硬性约束：\n\n1. 无依赖。\n2. 在使用之前不需要构建步骤。\n\n还有一个轻松的约束是保持代码库的精简。在撰写本文时，它只是一个不到 400 行代码的[单个文件](https://github.com/18alantom/strawberry/blob/52cc4e3c88924d112559d0547c533c1fafa61140/index.ts)，让我们看看它会发展到哪里。\n\n","slug":"build-frontend-framework","published":1,"updated":"2024-12-23T08:02:31.000Z","comments":1,"layout":"post","photos":[],"_id":"cm7t4ahdq0000u7jk3ek852vw","content":"<blockquote>\n<p>原文地址：<a href=\"https://18alan.space/posts/how-hard-is-it-to-build-a-frontend-framework.html#how-hard-is-it-to-build-a-frontend-framework\">https://18alan.space/posts/how-hard-is-it-to-build-a-frontend-framework.html#how-hard-is-it-to-build-a-frontend-framework</a></p>\n</blockquote>\n<p>在开始之前设定一些背景，所谓的前端框架是指一个能够让我们<strong>避免</strong>编写传统的HTML和JavaScript代码的框架，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;cool-para&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> coolPara = <span class=\"string\">&#x27;Lorem ipsum.&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> el = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;cool-para&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  el.<span class=\"property\">innerText</span> = coolPara;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>而是允许我们编写类似这样的神奇HTML和JavaScript代码 (<a href=\"https://vuejs.org/guide/scaling-up/sfc.html#introduction\">Vue</a>):</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> coolPara = <span class=\"string\">&#x27;Lorem ipsum.&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; coolPara &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>或者是(<a href=\"https://react.dev/learn/your-first-component#defining-a-component\">React</a>):</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Para</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> coolPara = <span class=\"string\">&#x27;Lorem ipsum&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123; coolPara &#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样一个框架的好处是可以理解的。记住像 <code>document</code>、<code>innerText</code> 和 <code>getElementById</code> 这样的单词或短语非常困难，因为它们音节太长了。</p>\n<p>好吧，音节太长并不是主要原因。</p>\n<blockquote>\n<p>响应式✨</p>\n</blockquote>\n<p>第一个主要原因是，在第二和第三个示例中，我们只需要设置或者更新变量<code>coolPara</code>和标记的值，更新<code>&lt;p&gt;</code>元素时不需要显式的设置它的<code>innerText</code>。</p>\n<p>这被称为<em><strong>响应式</strong></em>，UI与数据绑定在一起，只需要更改即可更新UI</p>\n<blockquote>\n<p>组合式✨</p>\n</blockquote>\n<p>第二个主要原因是可以定一个组件并重用它，而不必在每次需要时都重新定义它，这就是所谓的<em><strong>组合式</strong></em>。</p>\n<p>默认情况下，普通的HTML+JavaScript没有这个属性。因此，下面的代码并没有做它认为应该做的事情：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Defining the component --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;cool-para&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">content</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Using the component --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cool-para</span>&gt;</span>Lorem ipsum.<span class=\"tag\">&lt;/<span class=\"name\">cool-para</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>响应式和组合式时Vue、React等常用的前端框架提供的两个主要特性。</p>\n<p>这些抽象并不是没有代价的，人们必须预先在加载一些特定于框架的概念，当事情以令人费解的神奇方式工作时处理它们的漏洞，更不用说，还有一大堆容易失败的依赖关系。</p>\n<p>但事实证明，使用现代Web API，实现这两个目标并不难。在大多数情况下，我们实际上可能并不需要传统的框架和它们复杂的混乱…</p>\n<h2 id=\"响应式（Reactivity）\"><a href=\"#响应式（Reactivity）\" class=\"headerlink\" title=\"响应式（Reactivity）\"></a>响应式（Reactivity）</h2><p>一个简单的陈述来解释响应式就是<em><strong>当数据更新时，自动更新用户界面</strong></em>。</p>\n<p>第一部分是了解<em><strong>数据何时更新</strong></em>，不幸的是，这不是一个普通的对象可以做到的事情。我们不能简单的调用一个<code>ondateupdate</code>的监听器来监听数据的变化。</p>\n<p>幸运的是，JavaScript刚好有一个可以让我们做到这一点的工具，它叫做代理（<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\"><code>Proxy</code></a>）。</p>\n<h3 id=\"代理对象（Proxy-Objects）\"><a href=\"#代理对象（Proxy-Objects）\" class=\"headerlink\" title=\"代理对象（Proxy Objects）\"></a>代理对象（Proxy Objects）</h3><p><code>Proxy</code>允许我们从一个<em><strong>普通对象</strong></em>创建一个<em><strong>代理对象</strong></em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> user = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Lin&#x27;</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> proxy = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(user, &#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>并且这个<em><strong>代理对象</strong></em>可以监听到数据变化</p>\n<p>在上面的例子中，我们有一个<em><strong>代理对象</strong></em>，但是当知道名称已经改变时，它并没有真正做任何事情。</p>\n<p>为此，我们需要一个<em><strong>处理程序</strong></em>，它是一个对象，告诉<em><strong>代理对象</strong></em>在更新数据时应该做什么。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Handler that listens to data assignment operations</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> handler = &#123;</span><br><span class=\"line\">  <span class=\"title function_\">set</span>(<span class=\"params\">user, value, property</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`<span class=\"subst\">$&#123;property&#125;</span> is being updated`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Reflect</span>.<span class=\"title function_\">set</span>(user, value, property);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Creating a proxy with the handler</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> user = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Lin&#x27;</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> proxy = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(user, handler);</span><br></pre></td></tr></table></figure>\n\n<p>现在，每当我们使用对代理对象更新<code>name</code>时，都会收到一条消息，并输出<code>name is being updated</code>。</p>\n<p>如果你在想，这有什么了不起，我本来可以使用普通的<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set\"><em>setter</em></a>来做到这一点，我来告诉你其中的妙处：</p>\n<ul>\n<li>代理方法是通用的，并且可以重用。</li>\n<li>在代理对象上设置的任何值都可以递归转换为代理。</li>\n<li>现在你拥有了这个神奇的对象，它可以对数据更新做出反应，无论嵌套多深。</li>\n</ul>\n<p>除此之外，你还可以处理其他访问<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy#handler_functions\">事件</a>，例如当属性被<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get\">读取</a>、<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set\">更新</a>、<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/deleteProperty\">删除</a>等等。</p>\n<p>既然我们有能力监听操作，我们就需要以一种有意义的方式对它们作出反应。</p>\n<h3 id=\"更新用户界面\"><a href=\"#更新用户界面\" class=\"headerlink\" title=\"更新用户界面\"></a>更新用户界面</h3><p>如果您还记得，第二部分的<em><strong>响应式</strong></em>是<em><strong>自动更新UI</strong></em>。为此，我们需要获取要更新的<em><strong>适当</strong></em>UI元素。但在此之前，我们需要首先标记一个<em><strong>适当</strong></em>的UI元素。</p>\n<p>为此，我们将使用<a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes\">data-attributes</a>，这个特性允许我们在元素上设置任意值。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- Mark the h1 as appropriate for when &quot;name&quot; changes --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">data-mark</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>data-attributes</code>的精确性在于，我们现在可以使用以下方法找到所有<em><strong>适当</strong></em>的元素。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;[data-mark=&quot;name&quot;]&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>现在我们只需要设置所有适当元素的<code>innerText</code>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> handler = &#123;</span><br><span class=\"line\">  <span class=\"title function_\">set</span>(<span class=\"params\">user, value, property</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> query = <span class=\"string\">`[data-mark=&quot;<span class=\"subst\">$&#123;property&#125;</span>&quot;]`</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> elements = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(query);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> el <span class=\"keyword\">of</span> elements) &#123;</span><br><span class=\"line\">      el.<span class=\"property\">innerText</span> = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Reflect</span>.<span class=\"title function_\">set</span>(user, value, property);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Regular object is omitted cause it&#x27;s not needed.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> user = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Lin&#x27;</span> &#125;, handler);</span><br></pre></td></tr></table></figure>\n\n<p>就是这样，这就是<em><strong>响应式</strong></em>的关键！</p>\n<p>由于我们处理程序的通用性质，对于用户的任何设置的属性，所有适当的用户界面元素都将被更新。</p>\n<p>这就是 JavaScript 代理功能的强大之处，没有任何依赖项，并且经过一些巧妙的处理，它可以为我们提供这些神奇的响应式对象。</p>\n<p>现在转向第二个主要内容…</p>\n<h2 id=\"组合式（Composibility）\"><a href=\"#组合式（Composibility）\" class=\"headerlink\" title=\"组合式（Composibility）\"></a>组合式（Composibility）</h2><p>事实证明，浏览器已经有一个专门的功能，称为 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components\">Web Components</a>，谁知道呢！</p>\n<p>很少有人使用它，因为使用起来有点麻烦（而且大多数人在开始项目时都会默认选择传统的框架，而不考虑项目的范围）。</p>\n<p>要实现组件的可组合性，我们首先需要定义这些组件。</p>\n<h3 id=\"使用模板和插槽（template-和-slot）来定义组件\"><a href=\"#使用模板和插槽（template-和-slot）来定义组件\" class=\"headerlink\" title=\"使用模板和插槽（template 和 slot）来定义组件\"></a>使用模板和插槽（template 和 slot）来定义组件</h3><p><code>&lt;template&gt;</code> 标签用于包含浏览器不会渲染的标记。例如，你可以在你的 HTML 中添加以下标记：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Will not render!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>它们不会被渲染。你可以将它们视为组件的隐形容器。</p>\n<p>下一个构建块是 <code>&lt;slot&gt;</code> 元素，它定义了组件的内容将放置在哪里。这使得组件可以与不同的内容重复使用，即它变得具有可组合性。</p>\n<p>例如，这是一个将其文本颜色设为红色的 <code>&lt;h1&gt;</code> 元素的示例。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">slot</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在我们开始使用组件之前，就像上面的红色 <code>&lt;h1&gt;</code> 一样，我们需要<em><strong>注册</strong></em>它们。</p>\n<h3 id=\"注册组件\"><a href=\"#注册组件\" class=\"headerlink\" title=\"注册组件\"></a>注册组件</h3><p>在注册红色 <code>&lt;h1&gt;</code> 组件之前，我们需要一个名称来注册它。我们可以使用 name 属性来实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;red-h1&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">slot</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>现在，使用一些 JavaScript 代码，我们可以获取组件及其名称：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> template = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;template&#x27;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> componentName = template.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&#x27;name&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>最后，使用 <code>customElements.define</code> 来注册它：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">customElements.<span class=\"title function_\">define</span>(</span><br><span class=\"line\">  componentName,</span><br><span class=\"line\">  <span class=\"keyword\">class</span> <span class=\"title class_\">extends</span> <span class=\"title class_\">HTMLElement</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">super</span>();</span><br><span class=\"line\">      <span class=\"keyword\">const</span> component = template.<span class=\"property\">content</span>.<span class=\"property\">children</span>[<span class=\"number\">0</span>].<span class=\"title function_\">cloneNode</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">attachShadow</span>(&#123; <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;open&#x27;</span> &#125;).<span class=\"title function_\">appendChild</span>(component);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>上面的代码块中有很多内容：</p>\n<ul>\n<li>我们调用 <code>customElements.define</code> 方法，传递了两个参数。</li>\n<li>第一个参数是组件的名称（例如 “red-h1”）。</li>\n<li>第二个参数是一个类，它将我们的自定义组件定义为 <code>HTMLElement</code>。</li>\n</ul>\n<p>在类构造函数中，我们使用 <code>red-h1</code> 模板的副本来设置阴影 DOM 树。</p>\n<ul>\n<li><p>什么是 Shadow DOM?</p>\n<p>阴影 DOM 是设置多个默认元素的样式的方式，例如范围输入（<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\">range input</a>）或视频元素（<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\">video element</a>）。</p>\n<p>元素的阴影 DOM 默认是隐藏的，这就是为什么我们不能在开发工具控制台中看到它的原因，但在这里，我们将<code>mode</code>设置为 <code>&#39;open&#39;</code>。</p>\n<p>这允许我们检查元素并看到红色的 <code>&lt;h1&gt;</code> 附加到了 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot\">#shadow-root</a>。</p>\n</li>\n</ul>\n<p>调用 <code>customElements.define</code> 将允许我们像使用常规 HTML 元素一样使用定义的组件。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">red-h1</span>&gt;</span>This will render in red!<span class=\"tag\">&lt;/<span class=\"name\">red-h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>现在让我们把这两个概念结合起来吧！如果你有任何与这个主题相关的问题或需要进一步的解释，请随时提问。</p>\n<h2 id=\"组合式-响应式\"><a href=\"#组合式-响应式\" class=\"headerlink\" title=\"组合式+响应式\"></a>组合式+响应式</h2><p>简单回顾一下，我们做了两件事:</p>\n<ol>\n<li>我们创建了一个响应式数据结构，即<em><strong>代理对象</strong></em>，当设置一个值时，它可以更新我们已经标记为<em><strong>适当</strong></em>的任何元素。</li>\n<li>我们定义了一个自定义组件 <code>red-h1</code>，它会将其内容呈现为红色的 <code>&lt;h1&gt;</code>。</li>\n</ol>\n<p>现在我们可以将它们组合在一起了：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">red-h1</span> <span class=\"attr\">data-mark</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">red-h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> user = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(&#123;&#125;, handler);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  user.<span class=\"property\">name</span> = <span class=\"string\">&#x27;Lin&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后，我们可以使用自定义组件来呈现我们的数据，并在更改数据时更新用户界面。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>当然，传统的前端框架不只是这样做，它们有专门的语法，例如Vue中的<a href=\"https://vuejs.org/guide/essentials/template-syntax.html\">模板语法</a>和React中的<a href=\"https://react.dev/learn/writing-markup-with-jsx\">JSX</a>，使得编写复杂的前端相对更加简洁。</p>\n<p>由于这种专门的语法不是常规的 JavaScript 或 HTML，因此浏览器无法解析它们，所以它们都需要专门的工具将它们编译成常规的 JavaScript、HTML 和 CSS，然后浏览器才能理解它们。因此，<a href=\"https://fly.io/blog/js-ecosystem-delightfully-wierd#nobody-writes-javascript-any-more\">很少有人再手动编写 JavaScript</a>。</p>\n<p>即使没有专门的语法，只要使用 <code>Proxy</code> 和 <code>WebComponents</code>，你也可以做到与传统的前端框架类似的许多事情，而且代码同样简洁。</p>\n<p>这里的代码过于简化，要将其转化为一个框架，你需要进一步完善。以下是我尝试做到这一点的示例，一个名为 <a href=\"https://18alan.space/strawberry\">Strawberry</a> 的框架。</p>\n<p>在开发这个框架时，我计划保持两个硬性约束：</p>\n<ol>\n<li>无依赖。</li>\n<li>在使用之前不需要构建步骤。</li>\n</ol>\n<p>还有一个轻松的约束是保持代码库的精简。在撰写本文时，它只是一个不到 400 行代码的<a href=\"https://github.com/18alantom/strawberry/blob/52cc4e3c88924d112559d0547c533c1fafa61140/index.ts\">单个文件</a>，让我们看看它会发展到哪里。</p>\n","more":"<blockquote>\n<p>原文地址：<a href=\"https://18alan.space/posts/how-hard-is-it-to-build-a-frontend-framework.html#how-hard-is-it-to-build-a-frontend-framework\">https://18alan.space/posts/how-hard-is-it-to-build-a-frontend-framework.html#how-hard-is-it-to-build-a-frontend-framework</a></p>\n</blockquote>\n<p>在开始之前设定一些背景，所谓的前端框架是指一个能够让我们<strong>避免</strong>编写传统的HTML和JavaScript代码的框架，例如：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;cool-para&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> coolPara = <span class=\"string\">&#x27;Lorem ipsum.&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> el = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;cool-para&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  el.<span class=\"property\">innerText</span> = coolPara;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>而是允许我们编写类似这样的神奇HTML和JavaScript代码 (<a href=\"https://vuejs.org/guide/scaling-up/sfc.html#introduction\">Vue</a>):</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">setup</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> coolPara = <span class=\"string\">&#x27;Lorem ipsum.&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; coolPara &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>或者是(<a href=\"https://react.dev/learn/your-first-component#defining-a-component\">React</a>):</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Para</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> coolPara = <span class=\"string\">&#x27;Lorem ipsum&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123; coolPara &#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样一个框架的好处是可以理解的。记住像 <code>document</code>、<code>innerText</code> 和 <code>getElementById</code> 这样的单词或短语非常困难，因为它们音节太长了。</p>\n<p>好吧，音节太长并不是主要原因。</p>\n<blockquote>\n<p>响应式✨</p>\n</blockquote>\n<p>第一个主要原因是，在第二和第三个示例中，我们只需要设置或者更新变量<code>coolPara</code>和标记的值，更新<code>&lt;p&gt;</code>元素时不需要显式的设置它的<code>innerText</code>。</p>\n<p>这被称为<em><strong>响应式</strong></em>，UI与数据绑定在一起，只需要更改即可更新UI</p>\n<blockquote>\n<p>组合式✨</p>\n</blockquote>\n<p>第二个主要原因是可以定一个组件并重用它，而不必在每次需要时都重新定义它，这就是所谓的<em><strong>组合式</strong></em>。</p>\n<p>默认情况下，普通的HTML+JavaScript没有这个属性。因此，下面的代码并没有做它认为应该做的事情：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Defining the component --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;cool-para&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">content</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">component</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Using the component --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">cool-para</span>&gt;</span>Lorem ipsum.<span class=\"tag\">&lt;/<span class=\"name\">cool-para</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>响应式和组合式时Vue、React等常用的前端框架提供的两个主要特性。</p>\n<p>这些抽象并不是没有代价的，人们必须预先在加载一些特定于框架的概念，当事情以令人费解的神奇方式工作时处理它们的漏洞，更不用说，还有一大堆容易失败的依赖关系。</p>\n<p>但事实证明，使用现代Web API，实现这两个目标并不难。在大多数情况下，我们实际上可能并不需要传统的框架和它们复杂的混乱…</p>\n<h2 id=\"响应式（Reactivity）\"><a href=\"#响应式（Reactivity）\" class=\"headerlink\" title=\"响应式（Reactivity）\"></a>响应式（Reactivity）</h2><p>一个简单的陈述来解释响应式就是<em><strong>当数据更新时，自动更新用户界面</strong></em>。</p>\n<p>第一部分是了解<em><strong>数据何时更新</strong></em>，不幸的是，这不是一个普通的对象可以做到的事情。我们不能简单的调用一个<code>ondateupdate</code>的监听器来监听数据的变化。</p>\n<p>幸运的是，JavaScript刚好有一个可以让我们做到这一点的工具，它叫做代理（<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy\"><code>Proxy</code></a>）。</p>\n<h3 id=\"代理对象（Proxy-Objects）\"><a href=\"#代理对象（Proxy-Objects）\" class=\"headerlink\" title=\"代理对象（Proxy Objects）\"></a>代理对象（Proxy Objects）</h3><p><code>Proxy</code>允许我们从一个<em><strong>普通对象</strong></em>创建一个<em><strong>代理对象</strong></em>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> user = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Lin&#x27;</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> proxy = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(user, &#123;&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>并且这个<em><strong>代理对象</strong></em>可以监听到数据变化</p>\n<p>在上面的例子中，我们有一个<em><strong>代理对象</strong></em>，但是当知道名称已经改变时，它并没有真正做任何事情。</p>\n<p>为此，我们需要一个<em><strong>处理程序</strong></em>，它是一个对象，告诉<em><strong>代理对象</strong></em>在更新数据时应该做什么。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Handler that listens to data assignment operations</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> handler = &#123;</span><br><span class=\"line\">  <span class=\"title function_\">set</span>(<span class=\"params\">user, value, property</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`<span class=\"subst\">$&#123;property&#125;</span> is being updated`</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Reflect</span>.<span class=\"title function_\">set</span>(user, value, property);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Creating a proxy with the handler</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> user = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Lin&#x27;</span> &#125;;</span><br><span class=\"line\"><span class=\"keyword\">const</span> proxy = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(user, handler);</span><br></pre></td></tr></table></figure>\n\n<p>现在，每当我们使用对代理对象更新<code>name</code>时，都会收到一条消息，并输出<code>name is being updated</code>。</p>\n<p>如果你在想，这有什么了不起，我本来可以使用普通的<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set\"><em>setter</em></a>来做到这一点，我来告诉你其中的妙处：</p>\n<ul>\n<li>代理方法是通用的，并且可以重用。</li>\n<li>在代理对象上设置的任何值都可以递归转换为代理。</li>\n<li>现在你拥有了这个神奇的对象，它可以对数据更新做出反应，无论嵌套多深。</li>\n</ul>\n<p>除此之外，你还可以处理其他访问<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy#handler_functions\">事件</a>，例如当属性被<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/get\">读取</a>、<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/set\">更新</a>、<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/deleteProperty\">删除</a>等等。</p>\n<p>既然我们有能力监听操作，我们就需要以一种有意义的方式对它们作出反应。</p>\n<h3 id=\"更新用户界面\"><a href=\"#更新用户界面\" class=\"headerlink\" title=\"更新用户界面\"></a>更新用户界面</h3><p>如果您还记得，第二部分的<em><strong>响应式</strong></em>是<em><strong>自动更新UI</strong></em>。为此，我们需要获取要更新的<em><strong>适当</strong></em>UI元素。但在此之前，我们需要首先标记一个<em><strong>适当</strong></em>的UI元素。</p>\n<p>为此，我们将使用<a href=\"https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes\">data-attributes</a>，这个特性允许我们在元素上设置任意值。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- Mark the h1 as appropriate for when &quot;name&quot; changes --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">data-mark</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>data-attributes</code>的精确性在于，我们现在可以使用以下方法找到所有<em><strong>适当</strong></em>的元素。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;[data-mark=&quot;name&quot;]&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>现在我们只需要设置所有适当元素的<code>innerText</code>:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> handler = &#123;</span><br><span class=\"line\">  <span class=\"title function_\">set</span>(<span class=\"params\">user, value, property</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> query = <span class=\"string\">`[data-mark=&quot;<span class=\"subst\">$&#123;property&#125;</span>&quot;]`</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> elements = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(query);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> el <span class=\"keyword\">of</span> elements) &#123;</span><br><span class=\"line\">      el.<span class=\"property\">innerText</span> = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title class_\">Reflect</span>.<span class=\"title function_\">set</span>(user, value, property);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Regular object is omitted cause it&#x27;s not needed.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> user = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Lin&#x27;</span> &#125;, handler);</span><br></pre></td></tr></table></figure>\n\n<p>就是这样，这就是<em><strong>响应式</strong></em>的关键！</p>\n<p>由于我们处理程序的通用性质，对于用户的任何设置的属性，所有适当的用户界面元素都将被更新。</p>\n<p>这就是 JavaScript 代理功能的强大之处，没有任何依赖项，并且经过一些巧妙的处理，它可以为我们提供这些神奇的响应式对象。</p>\n<p>现在转向第二个主要内容…</p>\n<h2 id=\"组合式（Composibility）\"><a href=\"#组合式（Composibility）\" class=\"headerlink\" title=\"组合式（Composibility）\"></a>组合式（Composibility）</h2><p>事实证明，浏览器已经有一个专门的功能，称为 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components\">Web Components</a>，谁知道呢！</p>\n<p>很少有人使用它，因为使用起来有点麻烦（而且大多数人在开始项目时都会默认选择传统的框架，而不考虑项目的范围）。</p>\n<p>要实现组件的可组合性，我们首先需要定义这些组件。</p>\n<h3 id=\"使用模板和插槽（template-和-slot）来定义组件\"><a href=\"#使用模板和插槽（template-和-slot）来定义组件\" class=\"headerlink\" title=\"使用模板和插槽（template 和 slot）来定义组件\"></a>使用模板和插槽（template 和 slot）来定义组件</h3><p><code>&lt;template&gt;</code> 标签用于包含浏览器不会渲染的标记。例如，你可以在你的 HTML 中添加以下标记：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Will not render!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>它们不会被渲染。你可以将它们视为组件的隐形容器。</p>\n<p>下一个构建块是 <code>&lt;slot&gt;</code> 元素，它定义了组件的内容将放置在哪里。这使得组件可以与不同的内容重复使用，即它变得具有可组合性。</p>\n<p>例如，这是一个将其文本颜色设为红色的 <code>&lt;h1&gt;</code> 元素的示例。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">slot</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>在我们开始使用组件之前，就像上面的红色 <code>&lt;h1&gt;</code> 一样，我们需要<em><strong>注册</strong></em>它们。</p>\n<h3 id=\"注册组件\"><a href=\"#注册组件\" class=\"headerlink\" title=\"注册组件\"></a>注册组件</h3><p>在注册红色 <code>&lt;h1&gt;</code> 组件之前，我们需要一个名称来注册它。我们可以使用 name 属性来实现：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;red-h1&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color: red&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">slot</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>现在，使用一些 JavaScript 代码，我们可以获取组件及其名称：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> template = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByTagName</span>(<span class=\"string\">&#x27;template&#x27;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> componentName = template.<span class=\"title function_\">getAttribute</span>(<span class=\"string\">&#x27;name&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>最后，使用 <code>customElements.define</code> 来注册它：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">customElements.<span class=\"title function_\">define</span>(</span><br><span class=\"line\">  componentName,</span><br><span class=\"line\">  <span class=\"keyword\">class</span> <span class=\"title class_\">extends</span> <span class=\"title class_\">HTMLElement</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">super</span>();</span><br><span class=\"line\">      <span class=\"keyword\">const</span> component = template.<span class=\"property\">content</span>.<span class=\"property\">children</span>[<span class=\"number\">0</span>].<span class=\"title function_\">cloneNode</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">      <span class=\"variable language_\">this</span>.<span class=\"title function_\">attachShadow</span>(&#123; <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;open&#x27;</span> &#125;).<span class=\"title function_\">appendChild</span>(component);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>上面的代码块中有很多内容：</p>\n<ul>\n<li>我们调用 <code>customElements.define</code> 方法，传递了两个参数。</li>\n<li>第一个参数是组件的名称（例如 “red-h1”）。</li>\n<li>第二个参数是一个类，它将我们的自定义组件定义为 <code>HTMLElement</code>。</li>\n</ul>\n<p>在类构造函数中，我们使用 <code>red-h1</code> 模板的副本来设置阴影 DOM 树。</p>\n<ul>\n<li><p>什么是 Shadow DOM?</p>\n<p>阴影 DOM 是设置多个默认元素的样式的方式，例如范围输入（<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\">range input</a>）或视频元素（<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\">video element</a>）。</p>\n<p>元素的阴影 DOM 默认是隐藏的，这就是为什么我们不能在开发工具控制台中看到它的原因，但在这里，我们将<code>mode</code>设置为 <code>&#39;open&#39;</code>。</p>\n<p>这允许我们检查元素并看到红色的 <code>&lt;h1&gt;</code> 附加到了 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot\">#shadow-root</a>。</p>\n</li>\n</ul>\n<p>调用 <code>customElements.define</code> 将允许我们像使用常规 HTML 元素一样使用定义的组件。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">red-h1</span>&gt;</span>This will render in red!<span class=\"tag\">&lt;/<span class=\"name\">red-h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>现在让我们把这两个概念结合起来吧！如果你有任何与这个主题相关的问题或需要进一步的解释，请随时提问。</p>\n<h2 id=\"组合式-响应式\"><a href=\"#组合式-响应式\" class=\"headerlink\" title=\"组合式+响应式\"></a>组合式+响应式</h2><p>简单回顾一下，我们做了两件事:</p>\n<ol>\n<li>我们创建了一个响应式数据结构，即<em><strong>代理对象</strong></em>，当设置一个值时，它可以更新我们已经标记为<em><strong>适当</strong></em>的任何元素。</li>\n<li>我们定义了一个自定义组件 <code>red-h1</code>，它会将其内容呈现为红色的 <code>&lt;h1&gt;</code>。</li>\n</ol>\n<p>现在我们可以将它们组合在一起了：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">red-h1</span> <span class=\"attr\">data-mark</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">red-h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">const</span> user = <span class=\"keyword\">new</span> <span class=\"title class_\">Proxy</span>(&#123;&#125;, handler);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  user.<span class=\"property\">name</span> = <span class=\"string\">&#x27;Lin&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>然后，我们可以使用自定义组件来呈现我们的数据，并在更改数据时更新用户界面。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>当然，传统的前端框架不只是这样做，它们有专门的语法，例如Vue中的<a href=\"https://vuejs.org/guide/essentials/template-syntax.html\">模板语法</a>和React中的<a href=\"https://react.dev/learn/writing-markup-with-jsx\">JSX</a>，使得编写复杂的前端相对更加简洁。</p>\n<p>由于这种专门的语法不是常规的 JavaScript 或 HTML，因此浏览器无法解析它们，所以它们都需要专门的工具将它们编译成常规的 JavaScript、HTML 和 CSS，然后浏览器才能理解它们。因此，<a href=\"https://fly.io/blog/js-ecosystem-delightfully-wierd#nobody-writes-javascript-any-more\">很少有人再手动编写 JavaScript</a>。</p>\n<p>即使没有专门的语法，只要使用 <code>Proxy</code> 和 <code>WebComponents</code>，你也可以做到与传统的前端框架类似的许多事情，而且代码同样简洁。</p>\n<p>这里的代码过于简化，要将其转化为一个框架，你需要进一步完善。以下是我尝试做到这一点的示例，一个名为 <a href=\"https://18alan.space/strawberry\">Strawberry</a> 的框架。</p>\n<p>在开发这个框架时，我计划保持两个硬性约束：</p>\n<ol>\n<li>无依赖。</li>\n<li>在使用之前不需要构建步骤。</li>\n</ol>\n<p>还有一个轻松的约束是保持代码库的精简。在撰写本文时，它只是一个不到 400 行代码的<a href=\"https://github.com/18alantom/strawberry/blob/52cc4e3c88924d112559d0547c533c1fafa61140/index.ts\">单个文件</a>，让我们看看它会发展到哪里。</p>\n"},{"title":"CentOS 更换国内源","date":"2023-07-18T07:18:22.000Z","_content":"\n## 查看版本\n\n```Bash\ncat /etc/redhat-release\n\n```\n\n## 修改源\n\n### 阿里\n\n```Bash\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n\n# 对于 CentOS 7\ncurl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n\n# 对于 CentOS 8\ncurl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo\n\n```\n\n### 清华\n\n```Bash\n# 对于 CentOS 7\nsed -e 's|^mirrorlist=|#mirrorlist=|g' \\\n    -e 's|^#baseurl=http://mirror.centos.org/centos|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos|g' \\\n    -i.bak \\\n    /etc/yum.repos.d/CentOS-*.repo\n\n# 对于 CentOS 8\nsed -e 's|^mirrorlist=|#mirrorlist=|g' \\\n    -e 's|^#baseurl=http://mirror.centos.org/$contentdir|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos|g' \\\n    -i.bak \\\n    /etc/yum.repos.d/CentOS-*.repo\n```\n\n## 更新软件源缓存\n\n```Bash\nyum makecache\n```","source":"_posts/centos-china-mirrors.md","raw":"---\ntitle: CentOS 更换国内源\ndate: 2023-07-18 15:18:22\ntags:\n- centos\n- mirror\ncategories:\n- devops\n---\n\n## 查看版本\n\n```Bash\ncat /etc/redhat-release\n\n```\n\n## 修改源\n\n### 阿里\n\n```Bash\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup\n\n# 对于 CentOS 7\ncurl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n\n# 对于 CentOS 8\ncurl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo\n\n```\n\n### 清华\n\n```Bash\n# 对于 CentOS 7\nsed -e 's|^mirrorlist=|#mirrorlist=|g' \\\n    -e 's|^#baseurl=http://mirror.centos.org/centos|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos|g' \\\n    -i.bak \\\n    /etc/yum.repos.d/CentOS-*.repo\n\n# 对于 CentOS 8\nsed -e 's|^mirrorlist=|#mirrorlist=|g' \\\n    -e 's|^#baseurl=http://mirror.centos.org/$contentdir|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos|g' \\\n    -i.bak \\\n    /etc/yum.repos.d/CentOS-*.repo\n```\n\n## 更新软件源缓存\n\n```Bash\nyum makecache\n```","slug":"centos-china-mirrors","published":1,"updated":"2024-12-23T08:02:31.000Z","comments":1,"layout":"post","photos":[],"_id":"cm7t4ahdr0001u7jk72jc3saz","content":"<h2 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /etc/redhat-release</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改源\"><a href=\"#修改源\" class=\"headerlink\" title=\"修改源\"></a>修改源</h2><h3 id=\"阿里\"><a href=\"#阿里\" class=\"headerlink\" title=\"阿里\"></a>阿里</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对于 CentOS 7</span></span><br><span class=\"line\">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对于 CentOS 8</span></span><br><span class=\"line\">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"清华\"><a href=\"#清华\" class=\"headerlink\" title=\"清华\"></a>清华</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 对于 CentOS 7</span></span><br><span class=\"line\">sed -e <span class=\"string\">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">&#x27;s|^#baseurl=http://mirror.centos.org/centos|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos|g&#x27;</span> \\</span><br><span class=\"line\">    -i.bak \\</span><br><span class=\"line\">    /etc/yum.repos.d/CentOS-*.repo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对于 CentOS 8</span></span><br><span class=\"line\">sed -e <span class=\"string\">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">&#x27;s|^#baseurl=http://mirror.centos.org/$contentdir|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos|g&#x27;</span> \\</span><br><span class=\"line\">    -i.bak \\</span><br><span class=\"line\">    /etc/yum.repos.d/CentOS-*.repo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更新软件源缓存\"><a href=\"#更新软件源缓存\" class=\"headerlink\" title=\"更新软件源缓存\"></a>更新软件源缓存</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"查看版本\"><a href=\"#查看版本\" class=\"headerlink\" title=\"查看版本\"></a>查看版本</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> /etc/redhat-release</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改源\"><a href=\"#修改源\" class=\"headerlink\" title=\"修改源\"></a>修改源</h2><h3 id=\"阿里\"><a href=\"#阿里\" class=\"headerlink\" title=\"阿里\"></a>阿里</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对于 CentOS 7</span></span><br><span class=\"line\">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对于 CentOS 8</span></span><br><span class=\"line\">curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"清华\"><a href=\"#清华\" class=\"headerlink\" title=\"清华\"></a>清华</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 对于 CentOS 7</span></span><br><span class=\"line\">sed -e <span class=\"string\">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">&#x27;s|^#baseurl=http://mirror.centos.org/centos|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos|g&#x27;</span> \\</span><br><span class=\"line\">    -i.bak \\</span><br><span class=\"line\">    /etc/yum.repos.d/CentOS-*.repo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对于 CentOS 8</span></span><br><span class=\"line\">sed -e <span class=\"string\">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">&#x27;s|^#baseurl=http://mirror.centos.org/$contentdir|baseurl=https://mirrors.tuna.tsinghua.edu.cn/centos|g&#x27;</span> \\</span><br><span class=\"line\">    -i.bak \\</span><br><span class=\"line\">    /etc/yum.repos.d/CentOS-*.repo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"更新软件源缓存\"><a href=\"#更新软件源缓存\" class=\"headerlink\" title=\"更新软件源缓存\"></a>更新软件源缓存</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum makecache</span><br></pre></td></tr></table></figure>"},{"title":"CentOS 7 升级 glibc 到 2.31","date":"2023-03-18T01:33:11.000Z","_content":"\n## 升级目标\n\nlibc 2.17 → libc 2.31\n\n## 当前版本\n\n```Bash\n[root@localhost gmp-6.1.0]# ldd --version\nldd (GNU libc) 2.17\nCopyright (C) 2012 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n由 Roland McGrath 和 Ulrich Drepper 编写。\n\n[root@localhost gmp-6.1.0]# gcc -v\n使用内建 specs。\nCOLLECT_GCC=gcc\nCOLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper\n目标：x86_64-redhat-linux\n配置为：../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux\n线程模型：posix\ngcc 版本 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) \n\n[root@localhost gmp-6.1.0]# make -v\nGNU Make 3.82\nBuilt for x86_64-redhat-linux-gnu\nCopyright (C) 2010  Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n```\n\n### 安装依赖\n\n```Bash\nyum install -y m4 gmp-devel.x86_64 mpfr-devel.x86_64 zlib-devel.x86_64 gcc-c++ python3 bison\n```\n\n## 升级 gcc\n\n```Bash\ncd /opt\nwget https://mirrors.aliyun.com/gnu/gcc/gcc-9.3.0/gcc-9.3.0.tar.gz\ntar -zxf gcc-9.3.0.tar.gz\ncd gcc-9.3.0/\n\n./contrib/download_prerequisites # ftp://gcc.gnu.org/pub/gcc/infrastructure/\n\nmkdir build\ncd build\n../configure --enable-checking=release --enable-language=c,c++ --disable-multilib --prefix=/usr\n\nmake -j6\nmake install\n\n```\n\n验证安装\n\n```Bash\n[root@localhost build]# gcc --version\ngcc (GCC) 9.3.0\nCopyright © 2019 Free Software Foundation, Inc.\n本程序是自由软件；请参看源代码的版权声明。本软件没有任何担保；\n包括没有适销性和某一专用目的下的适用性担保。\n```\n\n## 升级 make\n\n```Bash\ncd /opt\nwget https://mirrors.aliyun.com/gnu/make/make-4.3.tar.gz\ntar -zxf make-4.3.tar.gz\ncd make-4.3\nmkdir build\ncd build\n../configure --prefix=/usr\nmake && make install\n\n```\n\n验证安装\n\n```Bash\n[root@localhost build]# make --version\nGNU Make 4.3\n为 x86_64-pc-linux-gnu 编译\nCopyright (C) 1988-2020 Free Software Foundation, Inc.\n许可证：GPLv3+：GNU 通用公共许可证第 3 版或更新版本<http://gnu.org/licenses/gpl.html>。\n本软件是自由软件：您可以自由修改和重新发布它。\n在法律允许的范围内没有其他保证。\n```\n\n## 升级glibc\n\n```Bash\ncd /opt\nwget https://mirrors.aliyun.com/gnu/glibc/glibc-2.31.tar.gz\ntar -zxf glibc-2.31.tar.gz\ncd glibc-2.31\n\nmkdir build\ncd build\n../configure  --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin --disable-sanity-checks --disable-werror\n\nmake -j6\nmake install\nmake localedata/install-locales\n```\n\n如出现如下错误可以忽略\n\n```Bash\nLD_SO=ld-linux-x86-64.so.2 CC=\"gcc -B/usr/bin/\" /usr/bin/perl scripts/test-installation.pl /opt/glibc-2.31/build/\n/usr/bin/ld: cannot find -lnss_test2\ncollect2: error: ld returned 1 exit status\nExecution of gcc -B/usr/bin/ failed!\nThe script has found some problems with your installation!\nPlease read the FAQ and the README file and check the following:\n- Did you change the gcc specs file (necessary after upgrading from\n  Linux libc5)?\n- Are there any symbolic links of the form libXXX.so to old libraries?\n  Links like libm.so -> libm.so.5 (where libm.so.5 is an old library) are wrong,\n  libm.so should point to the newly installed glibc file - and there should be\n  only one such link (check e.g. /lib and /usr/lib)\nYou should restart this script from your build directory after you've\nfixed all problems!\nBtw. the script doesn't work if you're installing GNU libc not as your\nprimary library!\nmake[1]: *** [Makefile:120: install] Error 1\nmake[1]: Leaving directory '/opt/glibc-2.31'\nmake: *** [Makefile:12：install] 错误 2\n```\n\n验证libc安装\n\n```Bash\n[root@localhost build]# ll /lib64/libc.so*\n-rw-r--r--. 1 root root 253 3月  14 19:11 /lib64/libc.so\nlrwxrwxrwx. 1 root root  12 3月  14 19:11 /lib64/libc.so.6 -> libc-2.31.so\n\n```","source":"_posts/centos7-upgrade-glibc.md","raw":"---\ntitle: CentOS 7 升级 glibc 到 2.31\ndate: 2023-03-18 09:33:11\ntags:\n- centos7\n- glibc\n- devops\ncategories:\n- devops\n---\n\n## 升级目标\n\nlibc 2.17 → libc 2.31\n\n## 当前版本\n\n```Bash\n[root@localhost gmp-6.1.0]# ldd --version\nldd (GNU libc) 2.17\nCopyright (C) 2012 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n由 Roland McGrath 和 Ulrich Drepper 编写。\n\n[root@localhost gmp-6.1.0]# gcc -v\n使用内建 specs。\nCOLLECT_GCC=gcc\nCOLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper\n目标：x86_64-redhat-linux\n配置为：../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux\n线程模型：posix\ngcc 版本 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) \n\n[root@localhost gmp-6.1.0]# make -v\nGNU Make 3.82\nBuilt for x86_64-redhat-linux-gnu\nCopyright (C) 2010  Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n```\n\n### 安装依赖\n\n```Bash\nyum install -y m4 gmp-devel.x86_64 mpfr-devel.x86_64 zlib-devel.x86_64 gcc-c++ python3 bison\n```\n\n## 升级 gcc\n\n```Bash\ncd /opt\nwget https://mirrors.aliyun.com/gnu/gcc/gcc-9.3.0/gcc-9.3.0.tar.gz\ntar -zxf gcc-9.3.0.tar.gz\ncd gcc-9.3.0/\n\n./contrib/download_prerequisites # ftp://gcc.gnu.org/pub/gcc/infrastructure/\n\nmkdir build\ncd build\n../configure --enable-checking=release --enable-language=c,c++ --disable-multilib --prefix=/usr\n\nmake -j6\nmake install\n\n```\n\n验证安装\n\n```Bash\n[root@localhost build]# gcc --version\ngcc (GCC) 9.3.0\nCopyright © 2019 Free Software Foundation, Inc.\n本程序是自由软件；请参看源代码的版权声明。本软件没有任何担保；\n包括没有适销性和某一专用目的下的适用性担保。\n```\n\n## 升级 make\n\n```Bash\ncd /opt\nwget https://mirrors.aliyun.com/gnu/make/make-4.3.tar.gz\ntar -zxf make-4.3.tar.gz\ncd make-4.3\nmkdir build\ncd build\n../configure --prefix=/usr\nmake && make install\n\n```\n\n验证安装\n\n```Bash\n[root@localhost build]# make --version\nGNU Make 4.3\n为 x86_64-pc-linux-gnu 编译\nCopyright (C) 1988-2020 Free Software Foundation, Inc.\n许可证：GPLv3+：GNU 通用公共许可证第 3 版或更新版本<http://gnu.org/licenses/gpl.html>。\n本软件是自由软件：您可以自由修改和重新发布它。\n在法律允许的范围内没有其他保证。\n```\n\n## 升级glibc\n\n```Bash\ncd /opt\nwget https://mirrors.aliyun.com/gnu/glibc/glibc-2.31.tar.gz\ntar -zxf glibc-2.31.tar.gz\ncd glibc-2.31\n\nmkdir build\ncd build\n../configure  --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin --disable-sanity-checks --disable-werror\n\nmake -j6\nmake install\nmake localedata/install-locales\n```\n\n如出现如下错误可以忽略\n\n```Bash\nLD_SO=ld-linux-x86-64.so.2 CC=\"gcc -B/usr/bin/\" /usr/bin/perl scripts/test-installation.pl /opt/glibc-2.31/build/\n/usr/bin/ld: cannot find -lnss_test2\ncollect2: error: ld returned 1 exit status\nExecution of gcc -B/usr/bin/ failed!\nThe script has found some problems with your installation!\nPlease read the FAQ and the README file and check the following:\n- Did you change the gcc specs file (necessary after upgrading from\n  Linux libc5)?\n- Are there any symbolic links of the form libXXX.so to old libraries?\n  Links like libm.so -> libm.so.5 (where libm.so.5 is an old library) are wrong,\n  libm.so should point to the newly installed glibc file - and there should be\n  only one such link (check e.g. /lib and /usr/lib)\nYou should restart this script from your build directory after you've\nfixed all problems!\nBtw. the script doesn't work if you're installing GNU libc not as your\nprimary library!\nmake[1]: *** [Makefile:120: install] Error 1\nmake[1]: Leaving directory '/opt/glibc-2.31'\nmake: *** [Makefile:12：install] 错误 2\n```\n\n验证libc安装\n\n```Bash\n[root@localhost build]# ll /lib64/libc.so*\n-rw-r--r--. 1 root root 253 3月  14 19:11 /lib64/libc.so\nlrwxrwxrwx. 1 root root  12 3月  14 19:11 /lib64/libc.so.6 -> libc-2.31.so\n\n```","slug":"centos7-upgrade-glibc","published":1,"updated":"2024-12-23T08:02:31.000Z","comments":1,"layout":"post","photos":[],"_id":"cm7t4ahdt0004u7jk1lni6u9j","content":"<h2 id=\"升级目标\"><a href=\"#升级目标\" class=\"headerlink\" title=\"升级目标\"></a>升级目标</h2><p>libc 2.17 → libc 2.31</p>\n<h2 id=\"当前版本\"><a href=\"#当前版本\" class=\"headerlink\" title=\"当前版本\"></a>当前版本</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost gmp-6.1.0]# ldd --version</span><br><span class=\"line\">ldd (GNU libc) 2.17</span><br><span class=\"line\">Copyright (C) 2012 Free Software Foundation, Inc.</span><br><span class=\"line\">This is free software; see the <span class=\"built_in\">source</span> <span class=\"keyword\">for</span> copying conditions.  There is NO</span><br><span class=\"line\">warranty; not even <span class=\"keyword\">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br><span class=\"line\">由 Roland McGrath 和 Ulrich Drepper 编写。</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost gmp-6.1.0]# gcc -v</span><br><span class=\"line\">使用内建 specs。</span><br><span class=\"line\">COLLECT_GCC=gcc</span><br><span class=\"line\">COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper</span><br><span class=\"line\">目标：x86_64-redhat-linux</span><br><span class=\"line\">配置为：../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux</span><br><span class=\"line\">线程模型：posix</span><br><span class=\"line\">gcc 版本 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) </span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost gmp-6.1.0]# make -v</span><br><span class=\"line\">GNU Make 3.82</span><br><span class=\"line\">Built <span class=\"keyword\">for</span> x86_64-redhat-linux-gnu</span><br><span class=\"line\">Copyright (C) 2010  Free Software Foundation, Inc.</span><br><span class=\"line\">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class=\"line\">This is free software: you are free to change and redistribute it.</span><br><span class=\"line\">There is NO WARRANTY, to the extent permitted by law.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y m4 gmp-devel.x86_64 mpfr-devel.x86_64 zlib-devel.x86_64 gcc-c++ python3 bison</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"升级-gcc\"><a href=\"#升级-gcc\" class=\"headerlink\" title=\"升级 gcc\"></a>升级 gcc</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /opt</span><br><span class=\"line\">wget https://mirrors.aliyun.com/gnu/gcc/gcc-9.3.0/gcc-9.3.0.tar.gz</span><br><span class=\"line\">tar -zxf gcc-9.3.0.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> gcc-9.3.0/</span><br><span class=\"line\"></span><br><span class=\"line\">./contrib/download_prerequisites <span class=\"comment\"># ftp://gcc.gnu.org/pub/gcc/infrastructure/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\">../configure --enable-checking=release --enable-language=c,c++ --disable-multilib --prefix=/usr</span><br><span class=\"line\"></span><br><span class=\"line\">make -j6</span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>验证安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost build]# gcc --version</span><br><span class=\"line\">gcc (GCC) 9.3.0</span><br><span class=\"line\">Copyright © 2019 Free Software Foundation, Inc.</span><br><span class=\"line\">本程序是自由软件；请参看源代码的版权声明。本软件没有任何担保；</span><br><span class=\"line\">包括没有适销性和某一专用目的下的适用性担保。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"升级-make\"><a href=\"#升级-make\" class=\"headerlink\" title=\"升级 make\"></a>升级 make</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /opt</span><br><span class=\"line\">wget https://mirrors.aliyun.com/gnu/make/make-4.3.tar.gz</span><br><span class=\"line\">tar -zxf make-4.3.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> make-4.3</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\">../configure --prefix=/usr</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>验证安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost build]# make --version</span><br><span class=\"line\">GNU Make 4.3</span><br><span class=\"line\">为 x86_64-pc-linux-gnu 编译</span><br><span class=\"line\">Copyright (C) 1988-2020 Free Software Foundation, Inc.</span><br><span class=\"line\">许可证：GPLv3+：GNU 通用公共许可证第 3 版或更新版本&lt;http://gnu.org/licenses/gpl.html&gt;。</span><br><span class=\"line\">本软件是自由软件：您可以自由修改和重新发布它。</span><br><span class=\"line\">在法律允许的范围内没有其他保证。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"升级glibc\"><a href=\"#升级glibc\" class=\"headerlink\" title=\"升级glibc\"></a>升级glibc</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /opt</span><br><span class=\"line\">wget https://mirrors.aliyun.com/gnu/glibc/glibc-2.31.tar.gz</span><br><span class=\"line\">tar -zxf glibc-2.31.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> glibc-2.31</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\">../configure  --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin --disable-sanity-checks --disable-werror</span><br><span class=\"line\"></span><br><span class=\"line\">make -j6</span><br><span class=\"line\">make install</span><br><span class=\"line\">make localedata/install-locales</span><br></pre></td></tr></table></figure>\n\n<p>如出现如下错误可以忽略</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LD_SO=ld-linux-x86-64.so.2 CC=<span class=\"string\">&quot;gcc -B/usr/bin/&quot;</span> /usr/bin/perl scripts/test-installation.pl /opt/glibc-2.31/build/</span><br><span class=\"line\">/usr/bin/ld: cannot find -lnss_test2</span><br><span class=\"line\">collect2: error: ld returned 1 <span class=\"built_in\">exit</span> status</span><br><span class=\"line\">Execution of gcc -B/usr/bin/ failed!</span><br><span class=\"line\">The script has found some problems with your installation!</span><br><span class=\"line\">Please <span class=\"built_in\">read</span> the FAQ and the README file and check the following:</span><br><span class=\"line\">- Did you change the gcc specs file (necessary after upgrading from</span><br><span class=\"line\">  Linux libc5)?</span><br><span class=\"line\">- Are there any symbolic links of the form libXXX.so to old libraries?</span><br><span class=\"line\">  Links like libm.so -&gt; libm.so.5 (<span class=\"built_in\">where</span> libm.so.5 is an old library) are wrong,</span><br><span class=\"line\">  libm.so should point to the newly installed glibc file - and there should be</span><br><span class=\"line\">  only one such <span class=\"built_in\">link</span> (check e.g. /lib and /usr/lib)</span><br><span class=\"line\">You should restart this script from your build directory after you<span class=\"string\">&#x27;ve</span></span><br><span class=\"line\"><span class=\"string\">fixed all problems!</span></span><br><span class=\"line\"><span class=\"string\">Btw. the script doesn&#x27;</span>t work <span class=\"keyword\">if</span> you<span class=\"string\">&#x27;re installing GNU libc not as your</span></span><br><span class=\"line\"><span class=\"string\">primary library!</span></span><br><span class=\"line\"><span class=\"string\">make[1]: *** [Makefile:120: install] Error 1</span></span><br><span class=\"line\"><span class=\"string\">make[1]: Leaving directory &#x27;</span>/opt/glibc-2.31<span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">make: *** [Makefile:12：install] 错误 2</span></span><br></pre></td></tr></table></figure>\n\n<p>验证libc安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost build]# ll /lib64/libc.so*</span><br><span class=\"line\">-rw-r--r--. 1 root root 253 3月  14 19:11 /lib64/libc.so</span><br><span class=\"line\">lrwxrwxrwx. 1 root root  12 3月  14 19:11 /lib64/libc.so.6 -&gt; libc-2.31.so</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"升级目标\"><a href=\"#升级目标\" class=\"headerlink\" title=\"升级目标\"></a>升级目标</h2><p>libc 2.17 → libc 2.31</p>\n<h2 id=\"当前版本\"><a href=\"#当前版本\" class=\"headerlink\" title=\"当前版本\"></a>当前版本</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost gmp-6.1.0]# ldd --version</span><br><span class=\"line\">ldd (GNU libc) 2.17</span><br><span class=\"line\">Copyright (C) 2012 Free Software Foundation, Inc.</span><br><span class=\"line\">This is free software; see the <span class=\"built_in\">source</span> <span class=\"keyword\">for</span> copying conditions.  There is NO</span><br><span class=\"line\">warranty; not even <span class=\"keyword\">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span><br><span class=\"line\">由 Roland McGrath 和 Ulrich Drepper 编写。</span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost gmp-6.1.0]# gcc -v</span><br><span class=\"line\">使用内建 specs。</span><br><span class=\"line\">COLLECT_GCC=gcc</span><br><span class=\"line\">COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper</span><br><span class=\"line\">目标：x86_64-redhat-linux</span><br><span class=\"line\">配置为：../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux</span><br><span class=\"line\">线程模型：posix</span><br><span class=\"line\">gcc 版本 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) </span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost gmp-6.1.0]# make -v</span><br><span class=\"line\">GNU Make 3.82</span><br><span class=\"line\">Built <span class=\"keyword\">for</span> x86_64-redhat-linux-gnu</span><br><span class=\"line\">Copyright (C) 2010  Free Software Foundation, Inc.</span><br><span class=\"line\">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class=\"line\">This is free software: you are free to change and redistribute it.</span><br><span class=\"line\">There is NO WARRANTY, to the extent permitted by law.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y m4 gmp-devel.x86_64 mpfr-devel.x86_64 zlib-devel.x86_64 gcc-c++ python3 bison</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"升级-gcc\"><a href=\"#升级-gcc\" class=\"headerlink\" title=\"升级 gcc\"></a>升级 gcc</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /opt</span><br><span class=\"line\">wget https://mirrors.aliyun.com/gnu/gcc/gcc-9.3.0/gcc-9.3.0.tar.gz</span><br><span class=\"line\">tar -zxf gcc-9.3.0.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> gcc-9.3.0/</span><br><span class=\"line\"></span><br><span class=\"line\">./contrib/download_prerequisites <span class=\"comment\"># ftp://gcc.gnu.org/pub/gcc/infrastructure/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\">../configure --enable-checking=release --enable-language=c,c++ --disable-multilib --prefix=/usr</span><br><span class=\"line\"></span><br><span class=\"line\">make -j6</span><br><span class=\"line\">make install</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>验证安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost build]# gcc --version</span><br><span class=\"line\">gcc (GCC) 9.3.0</span><br><span class=\"line\">Copyright © 2019 Free Software Foundation, Inc.</span><br><span class=\"line\">本程序是自由软件；请参看源代码的版权声明。本软件没有任何担保；</span><br><span class=\"line\">包括没有适销性和某一专用目的下的适用性担保。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"升级-make\"><a href=\"#升级-make\" class=\"headerlink\" title=\"升级 make\"></a>升级 make</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /opt</span><br><span class=\"line\">wget https://mirrors.aliyun.com/gnu/make/make-4.3.tar.gz</span><br><span class=\"line\">tar -zxf make-4.3.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> make-4.3</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\">../configure --prefix=/usr</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>验证安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost build]# make --version</span><br><span class=\"line\">GNU Make 4.3</span><br><span class=\"line\">为 x86_64-pc-linux-gnu 编译</span><br><span class=\"line\">Copyright (C) 1988-2020 Free Software Foundation, Inc.</span><br><span class=\"line\">许可证：GPLv3+：GNU 通用公共许可证第 3 版或更新版本&lt;http://gnu.org/licenses/gpl.html&gt;。</span><br><span class=\"line\">本软件是自由软件：您可以自由修改和重新发布它。</span><br><span class=\"line\">在法律允许的范围内没有其他保证。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"升级glibc\"><a href=\"#升级glibc\" class=\"headerlink\" title=\"升级glibc\"></a>升级glibc</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /opt</span><br><span class=\"line\">wget https://mirrors.aliyun.com/gnu/glibc/glibc-2.31.tar.gz</span><br><span class=\"line\">tar -zxf glibc-2.31.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> glibc-2.31</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> build</span><br><span class=\"line\"><span class=\"built_in\">cd</span> build</span><br><span class=\"line\">../configure  --prefix=/usr --disable-profile --enable-add-ons --with-headers=/usr/include --with-binutils=/usr/bin --disable-sanity-checks --disable-werror</span><br><span class=\"line\"></span><br><span class=\"line\">make -j6</span><br><span class=\"line\">make install</span><br><span class=\"line\">make localedata/install-locales</span><br></pre></td></tr></table></figure>\n\n<p>如出现如下错误可以忽略</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LD_SO=ld-linux-x86-64.so.2 CC=<span class=\"string\">&quot;gcc -B/usr/bin/&quot;</span> /usr/bin/perl scripts/test-installation.pl /opt/glibc-2.31/build/</span><br><span class=\"line\">/usr/bin/ld: cannot find -lnss_test2</span><br><span class=\"line\">collect2: error: ld returned 1 <span class=\"built_in\">exit</span> status</span><br><span class=\"line\">Execution of gcc -B/usr/bin/ failed!</span><br><span class=\"line\">The script has found some problems with your installation!</span><br><span class=\"line\">Please <span class=\"built_in\">read</span> the FAQ and the README file and check the following:</span><br><span class=\"line\">- Did you change the gcc specs file (necessary after upgrading from</span><br><span class=\"line\">  Linux libc5)?</span><br><span class=\"line\">- Are there any symbolic links of the form libXXX.so to old libraries?</span><br><span class=\"line\">  Links like libm.so -&gt; libm.so.5 (<span class=\"built_in\">where</span> libm.so.5 is an old library) are wrong,</span><br><span class=\"line\">  libm.so should point to the newly installed glibc file - and there should be</span><br><span class=\"line\">  only one such <span class=\"built_in\">link</span> (check e.g. /lib and /usr/lib)</span><br><span class=\"line\">You should restart this script from your build directory after you<span class=\"string\">&#x27;ve</span></span><br><span class=\"line\"><span class=\"string\">fixed all problems!</span></span><br><span class=\"line\"><span class=\"string\">Btw. the script doesn&#x27;</span>t work <span class=\"keyword\">if</span> you<span class=\"string\">&#x27;re installing GNU libc not as your</span></span><br><span class=\"line\"><span class=\"string\">primary library!</span></span><br><span class=\"line\"><span class=\"string\">make[1]: *** [Makefile:120: install] Error 1</span></span><br><span class=\"line\"><span class=\"string\">make[1]: Leaving directory &#x27;</span>/opt/glibc-2.31<span class=\"string\">&#x27;</span></span><br><span class=\"line\"><span class=\"string\">make: *** [Makefile:12：install] 错误 2</span></span><br></pre></td></tr></table></figure>\n\n<p>验证libc安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost build]# ll /lib64/libc.so*</span><br><span class=\"line\">-rw-r--r--. 1 root root 253 3月  14 19:11 /lib64/libc.so</span><br><span class=\"line\">lrwxrwxrwx. 1 root root  12 3月  14 19:11 /lib64/libc.so.6 -&gt; libc-2.31.so</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"Echarts Test","date":"2022-07-25T06:00:50.000Z","excerpt":"测试Echarts语法","_content":"## 折线图\n\n{% echarts 400 '85%' %}\n{\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      data: [150, 230, 224, 218, 135, 147, 260],\n      type: 'line'\n    }\n  ]\n}\n{% endecharts %}\n\n## 柱状图\n\n{% echarts 400 '85%' %}\n{\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      data: [120, 200, 150, 80, 70, 110, 130],\n      type: 'bar',\n      showBackground: true,\n      backgroundStyle: {\n        color: 'rgba(180, 180, 180, 0.2)'\n      }\n    }\n  ]\n}\n{% endecharts %}\n\n## 饼图\n\n{% echarts 400 '85%' %}\n{\n  title: {\n    text: 'Referer of a Website',\n    subtext: 'Fake Data',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left'\n  },\n  series: [\n    {\n      name: 'Access From',\n      type: 'pie',\n      radius: '50%',\n      data: [\n        { value: 1048, name: 'Search Engine' },\n        { value: 735, name: 'Direct' },\n        { value: 580, name: 'Email' },\n        { value: 484, name: 'Union Ads' },\n        { value: 300, name: 'Video Ads' }\n      ],\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }\n  ]\n}\n{% endecharts %}\n\n## 散点图\n\n{% echarts 400 '85%' %}\n{\n  xAxis: {},\n  yAxis: {},\n  series: [\n    {\n      symbolSize: 20,\n      data: [\n        [10.0, 8.04],\n        [8.07, 6.95],\n        [13.0, 7.58],\n        [9.05, 8.81],\n        [11.0, 8.33],\n        [14.0, 7.66],\n        [13.4, 6.81],\n        [10.0, 6.33],\n        [14.0, 8.96],\n        [12.5, 6.82],\n        [9.15, 7.2],\n        [11.5, 7.2],\n        [3.03, 4.23],\n        [12.2, 7.83],\n        [2.02, 4.47],\n        [1.05, 3.33],\n        [4.05, 4.96],\n        [6.03, 7.24],\n        [12.0, 6.26],\n        [12.0, 8.84],\n        [7.08, 5.82],\n        [5.02, 5.68]\n      ],\n      type: 'scatter'\n    }\n  ]\n}\n{% endecharts %}\n\n## 雷达图\n{% echarts 400 '85%' %}\n{\n  title: {\n    text: 'Basic Radar Chart'\n  },\n  legend: {\n    data: ['Allocated Budget', 'Actual Spending']\n  },\n  radar: {\n    // shape: 'circle',\n    indicator: [\n      { name: 'Sales', max: 6500 },\n      { name: 'Administration', max: 16000 },\n      { name: 'Information Technology', max: 30000 },\n      { name: 'Customer Support', max: 38000 },\n      { name: 'Development', max: 52000 },\n      { name: 'Marketing', max: 25000 }\n    ]\n  },\n  series: [\n    {\n      name: 'Budget vs spending',\n      type: 'radar',\n      data: [\n        {\n          value: [4200, 3000, 20000, 35000, 50000, 18000],\n          name: 'Allocated Budget'\n        },\n        {\n          value: [5000, 14000, 28000, 26000, 42000, 21000],\n          name: 'Actual Spending'\n        }\n      ]\n    }\n  ]\n}\n{% endecharts %}\n\n## 盒须图\n\n{% echarts 400 '85%' %}\n{\n  title: [\n    {\n      text: 'Michelson-Morley Experiment',\n      left: 'center'\n    },\n    {\n      text: 'upper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR',\n      borderColor: '#999',\n      borderWidth: 1,\n      textStyle: {\n        fontWeight: 'normal',\n        fontSize: 14,\n        lineHeight: 20\n      },\n      left: '10%',\n      top: '90%'\n    }\n  ],\n  dataset: [\n    {\n      // prettier-ignore\n      source: [\n                [850, 740, 900, 1070, 930, 850, 950, 980, 980, 880, 1000, 980, 930, 650, 760, 810, 1000, 1000, 960, 960],\n                [960, 940, 960, 940, 880, 800, 850, 880, 900, 840, 830, 790, 810, 880, 880, 830, 800, 790, 760, 800],\n                [880, 880, 880, 860, 720, 720, 620, 860, 970, 950, 880, 910, 850, 870, 840, 840, 850, 840, 840, 840],\n                [890, 810, 810, 820, 800, 770, 760, 740, 750, 760, 910, 920, 890, 860, 880, 720, 840, 850, 850, 780],\n                [890, 840, 780, 810, 760, 810, 790, 810, 820, 850, 870, 870, 810, 740, 810, 940, 950, 800, 810, 870]\n            ]\n    },\n    {\n      transform: {\n        type: 'boxplot',\n        config: { itemNameFormatter: 'expr {value}' }\n      }\n    },\n    {\n      fromDatasetIndex: 1,\n      fromTransformResult: 1\n    }\n  ],\n  tooltip: {\n    trigger: 'item',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  grid: {\n    left: '10%',\n    right: '10%',\n    bottom: '15%'\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: true,\n    nameGap: 30,\n    splitArea: {\n      show: false\n    },\n    splitLine: {\n      show: false\n    }\n  },\n  yAxis: {\n    type: 'value',\n    name: 'km/s minus 299,000',\n    splitArea: {\n      show: true\n    }\n  },\n  series: [\n    {\n      name: 'boxplot',\n      type: 'boxplot',\n      datasetIndex: 1\n    },\n    {\n      name: 'outlier',\n      type: 'scatter',\n      datasetIndex: 2\n    }\n  ]\n}\n{% endecharts %}","source":"_posts/echarts-test.md","raw":"---\ntitle: Echarts Test\ndate: 2022-07-25 14:00:50\ntags: Test\ncategories: Test\nexcerpt: 测试Echarts语法\n---\n## 折线图\n\n{% echarts 400 '85%' %}\n{\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      data: [150, 230, 224, 218, 135, 147, 260],\n      type: 'line'\n    }\n  ]\n}\n{% endecharts %}\n\n## 柱状图\n\n{% echarts 400 '85%' %}\n{\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      data: [120, 200, 150, 80, 70, 110, 130],\n      type: 'bar',\n      showBackground: true,\n      backgroundStyle: {\n        color: 'rgba(180, 180, 180, 0.2)'\n      }\n    }\n  ]\n}\n{% endecharts %}\n\n## 饼图\n\n{% echarts 400 '85%' %}\n{\n  title: {\n    text: 'Referer of a Website',\n    subtext: 'Fake Data',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left'\n  },\n  series: [\n    {\n      name: 'Access From',\n      type: 'pie',\n      radius: '50%',\n      data: [\n        { value: 1048, name: 'Search Engine' },\n        { value: 735, name: 'Direct' },\n        { value: 580, name: 'Email' },\n        { value: 484, name: 'Union Ads' },\n        { value: 300, name: 'Video Ads' }\n      ],\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }\n  ]\n}\n{% endecharts %}\n\n## 散点图\n\n{% echarts 400 '85%' %}\n{\n  xAxis: {},\n  yAxis: {},\n  series: [\n    {\n      symbolSize: 20,\n      data: [\n        [10.0, 8.04],\n        [8.07, 6.95],\n        [13.0, 7.58],\n        [9.05, 8.81],\n        [11.0, 8.33],\n        [14.0, 7.66],\n        [13.4, 6.81],\n        [10.0, 6.33],\n        [14.0, 8.96],\n        [12.5, 6.82],\n        [9.15, 7.2],\n        [11.5, 7.2],\n        [3.03, 4.23],\n        [12.2, 7.83],\n        [2.02, 4.47],\n        [1.05, 3.33],\n        [4.05, 4.96],\n        [6.03, 7.24],\n        [12.0, 6.26],\n        [12.0, 8.84],\n        [7.08, 5.82],\n        [5.02, 5.68]\n      ],\n      type: 'scatter'\n    }\n  ]\n}\n{% endecharts %}\n\n## 雷达图\n{% echarts 400 '85%' %}\n{\n  title: {\n    text: 'Basic Radar Chart'\n  },\n  legend: {\n    data: ['Allocated Budget', 'Actual Spending']\n  },\n  radar: {\n    // shape: 'circle',\n    indicator: [\n      { name: 'Sales', max: 6500 },\n      { name: 'Administration', max: 16000 },\n      { name: 'Information Technology', max: 30000 },\n      { name: 'Customer Support', max: 38000 },\n      { name: 'Development', max: 52000 },\n      { name: 'Marketing', max: 25000 }\n    ]\n  },\n  series: [\n    {\n      name: 'Budget vs spending',\n      type: 'radar',\n      data: [\n        {\n          value: [4200, 3000, 20000, 35000, 50000, 18000],\n          name: 'Allocated Budget'\n        },\n        {\n          value: [5000, 14000, 28000, 26000, 42000, 21000],\n          name: 'Actual Spending'\n        }\n      ]\n    }\n  ]\n}\n{% endecharts %}\n\n## 盒须图\n\n{% echarts 400 '85%' %}\n{\n  title: [\n    {\n      text: 'Michelson-Morley Experiment',\n      left: 'center'\n    },\n    {\n      text: 'upper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR',\n      borderColor: '#999',\n      borderWidth: 1,\n      textStyle: {\n        fontWeight: 'normal',\n        fontSize: 14,\n        lineHeight: 20\n      },\n      left: '10%',\n      top: '90%'\n    }\n  ],\n  dataset: [\n    {\n      // prettier-ignore\n      source: [\n                [850, 740, 900, 1070, 930, 850, 950, 980, 980, 880, 1000, 980, 930, 650, 760, 810, 1000, 1000, 960, 960],\n                [960, 940, 960, 940, 880, 800, 850, 880, 900, 840, 830, 790, 810, 880, 880, 830, 800, 790, 760, 800],\n                [880, 880, 880, 860, 720, 720, 620, 860, 970, 950, 880, 910, 850, 870, 840, 840, 850, 840, 840, 840],\n                [890, 810, 810, 820, 800, 770, 760, 740, 750, 760, 910, 920, 890, 860, 880, 720, 840, 850, 850, 780],\n                [890, 840, 780, 810, 760, 810, 790, 810, 820, 850, 870, 870, 810, 740, 810, 940, 950, 800, 810, 870]\n            ]\n    },\n    {\n      transform: {\n        type: 'boxplot',\n        config: { itemNameFormatter: 'expr {value}' }\n      }\n    },\n    {\n      fromDatasetIndex: 1,\n      fromTransformResult: 1\n    }\n  ],\n  tooltip: {\n    trigger: 'item',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  grid: {\n    left: '10%',\n    right: '10%',\n    bottom: '15%'\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: true,\n    nameGap: 30,\n    splitArea: {\n      show: false\n    },\n    splitLine: {\n      show: false\n    }\n  },\n  yAxis: {\n    type: 'value',\n    name: 'km/s minus 299,000',\n    splitArea: {\n      show: true\n    }\n  },\n  series: [\n    {\n      name: 'boxplot',\n      type: 'boxplot',\n      datasetIndex: 1\n    },\n    {\n      name: 'outlier',\n      type: 'scatter',\n      datasetIndex: 2\n    }\n  ]\n}\n{% endecharts %}","slug":"echarts-test","published":1,"updated":"2024-12-23T08:02:31.000Z","comments":1,"layout":"post","photos":[],"_id":"cm7t4ahdt0005u7jkb7yagzgi","content":"<h2 id=\"折线图\"><a href=\"#折线图\" class=\"headerlink\" title=\"折线图\"></a>折线图</h2>\n  <div id=\"echarts-6847\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-6847'));\n    var option = {\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      data: [150, 230, 224, 218, 135, 147, 260],\n      type: 'line'\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  \n\n<h2 id=\"柱状图\"><a href=\"#柱状图\" class=\"headerlink\" title=\"柱状图\"></a>柱状图</h2>\n  <div id=\"echarts-842\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-842'));\n    var option = {\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      data: [120, 200, 150, 80, 70, 110, 130],\n      type: 'bar',\n      showBackground: true,\n      backgroundStyle: {\n        color: 'rgba(180, 180, 180, 0.2)'\n      }\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  \n\n<h2 id=\"饼图\"><a href=\"#饼图\" class=\"headerlink\" title=\"饼图\"></a>饼图</h2>\n  <div id=\"echarts-2102\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-2102'));\n    var option = {\n  title: {\n    text: 'Referer of a Website',\n    subtext: 'Fake Data',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left'\n  },\n  series: [\n    {\n      name: 'Access From',\n      type: 'pie',\n      radius: '50%',\n      data: [\n        { value: 1048, name: 'Search Engine' },\n        { value: 735, name: 'Direct' },\n        { value: 580, name: 'Email' },\n        { value: 484, name: 'Union Ads' },\n        { value: 300, name: 'Video Ads' }\n      ],\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  \n\n<h2 id=\"散点图\"><a href=\"#散点图\" class=\"headerlink\" title=\"散点图\"></a>散点图</h2>\n  <div id=\"echarts-9746\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-9746'));\n    var option = {\n  xAxis: {},\n  yAxis: {},\n  series: [\n    {\n      symbolSize: 20,\n      data: [\n        [10.0, 8.04],\n        [8.07, 6.95],\n        [13.0, 7.58],\n        [9.05, 8.81],\n        [11.0, 8.33],\n        [14.0, 7.66],\n        [13.4, 6.81],\n        [10.0, 6.33],\n        [14.0, 8.96],\n        [12.5, 6.82],\n        [9.15, 7.2],\n        [11.5, 7.2],\n        [3.03, 4.23],\n        [12.2, 7.83],\n        [2.02, 4.47],\n        [1.05, 3.33],\n        [4.05, 4.96],\n        [6.03, 7.24],\n        [12.0, 6.26],\n        [12.0, 8.84],\n        [7.08, 5.82],\n        [5.02, 5.68]\n      ],\n      type: 'scatter'\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  \n\n<h2 id=\"雷达图\"><a href=\"#雷达图\" class=\"headerlink\" title=\"雷达图\"></a>雷达图</h2>\n  <div id=\"echarts-6759\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-6759'));\n    var option = {\n  title: {\n    text: 'Basic Radar Chart'\n  },\n  legend: {\n    data: ['Allocated Budget', 'Actual Spending']\n  },\n  radar: {\n    // shape: 'circle',\n    indicator: [\n      { name: 'Sales', max: 6500 },\n      { name: 'Administration', max: 16000 },\n      { name: 'Information Technology', max: 30000 },\n      { name: 'Customer Support', max: 38000 },\n      { name: 'Development', max: 52000 },\n      { name: 'Marketing', max: 25000 }\n    ]\n  },\n  series: [\n    {\n      name: 'Budget vs spending',\n      type: 'radar',\n      data: [\n        {\n          value: [4200, 3000, 20000, 35000, 50000, 18000],\n          name: 'Allocated Budget'\n        },\n        {\n          value: [5000, 14000, 28000, 26000, 42000, 21000],\n          name: 'Actual Spending'\n        }\n      ]\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  \n\n<h2 id=\"盒须图\"><a href=\"#盒须图\" class=\"headerlink\" title=\"盒须图\"></a>盒须图</h2>\n  <div id=\"echarts-5883\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-5883'));\n    var option = {\n  title: [\n    {\n      text: 'Michelson-Morley Experiment',\n      left: 'center'\n    },\n    {\n      text: 'upper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR',\n      borderColor: '#999',\n      borderWidth: 1,\n      textStyle: {\n        fontWeight: 'normal',\n        fontSize: 14,\n        lineHeight: 20\n      },\n      left: '10%',\n      top: '90%'\n    }\n  ],\n  dataset: [\n    {\n      // prettier-ignore\n      source: [\n                [850, 740, 900, 1070, 930, 850, 950, 980, 980, 880, 1000, 980, 930, 650, 760, 810, 1000, 1000, 960, 960],\n                [960, 940, 960, 940, 880, 800, 850, 880, 900, 840, 830, 790, 810, 880, 880, 830, 800, 790, 760, 800],\n                [880, 880, 880, 860, 720, 720, 620, 860, 970, 950, 880, 910, 850, 870, 840, 840, 850, 840, 840, 840],\n                [890, 810, 810, 820, 800, 770, 760, 740, 750, 760, 910, 920, 890, 860, 880, 720, 840, 850, 850, 780],\n                [890, 840, 780, 810, 760, 810, 790, 810, 820, 850, 870, 870, 810, 740, 810, 940, 950, 800, 810, 870]\n            ]\n    },\n    {\n      transform: {\n        type: 'boxplot',\n        config: { itemNameFormatter: 'expr {value}' }\n      }\n    },\n    {\n      fromDatasetIndex: 1,\n      fromTransformResult: 1\n    }\n  ],\n  tooltip: {\n    trigger: 'item',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  grid: {\n    left: '10%',\n    right: '10%',\n    bottom: '15%'\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: true,\n    nameGap: 30,\n    splitArea: {\n      show: false\n    },\n    splitLine: {\n      show: false\n    }\n  },\n  yAxis: {\n    type: 'value',\n    name: 'km/s minus 299,000',\n    splitArea: {\n      show: true\n    }\n  },\n  series: [\n    {\n      name: 'boxplot',\n      type: 'boxplot',\n      datasetIndex: 1\n    },\n    {\n      name: 'outlier',\n      type: 'scatter',\n      datasetIndex: 2\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  ","more":"<h2 id=\"折线图\"><a href=\"#折线图\" class=\"headerlink\" title=\"折线图\"></a>折线图</h2>\n  <div id=\"echarts-6847\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-6847'));\n    var option = {\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      data: [150, 230, 224, 218, 135, 147, 260],\n      type: 'line'\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  \n\n<h2 id=\"柱状图\"><a href=\"#柱状图\" class=\"headerlink\" title=\"柱状图\"></a>柱状图</h2>\n  <div id=\"echarts-842\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-842'));\n    var option = {\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      data: [120, 200, 150, 80, 70, 110, 130],\n      type: 'bar',\n      showBackground: true,\n      backgroundStyle: {\n        color: 'rgba(180, 180, 180, 0.2)'\n      }\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  \n\n<h2 id=\"饼图\"><a href=\"#饼图\" class=\"headerlink\" title=\"饼图\"></a>饼图</h2>\n  <div id=\"echarts-2102\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-2102'));\n    var option = {\n  title: {\n    text: 'Referer of a Website',\n    subtext: 'Fake Data',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left'\n  },\n  series: [\n    {\n      name: 'Access From',\n      type: 'pie',\n      radius: '50%',\n      data: [\n        { value: 1048, name: 'Search Engine' },\n        { value: 735, name: 'Direct' },\n        { value: 580, name: 'Email' },\n        { value: 484, name: 'Union Ads' },\n        { value: 300, name: 'Video Ads' }\n      ],\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  \n\n<h2 id=\"散点图\"><a href=\"#散点图\" class=\"headerlink\" title=\"散点图\"></a>散点图</h2>\n  <div id=\"echarts-9746\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-9746'));\n    var option = {\n  xAxis: {},\n  yAxis: {},\n  series: [\n    {\n      symbolSize: 20,\n      data: [\n        [10.0, 8.04],\n        [8.07, 6.95],\n        [13.0, 7.58],\n        [9.05, 8.81],\n        [11.0, 8.33],\n        [14.0, 7.66],\n        [13.4, 6.81],\n        [10.0, 6.33],\n        [14.0, 8.96],\n        [12.5, 6.82],\n        [9.15, 7.2],\n        [11.5, 7.2],\n        [3.03, 4.23],\n        [12.2, 7.83],\n        [2.02, 4.47],\n        [1.05, 3.33],\n        [4.05, 4.96],\n        [6.03, 7.24],\n        [12.0, 6.26],\n        [12.0, 8.84],\n        [7.08, 5.82],\n        [5.02, 5.68]\n      ],\n      type: 'scatter'\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  \n\n<h2 id=\"雷达图\"><a href=\"#雷达图\" class=\"headerlink\" title=\"雷达图\"></a>雷达图</h2>\n  <div id=\"echarts-6759\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-6759'));\n    var option = {\n  title: {\n    text: 'Basic Radar Chart'\n  },\n  legend: {\n    data: ['Allocated Budget', 'Actual Spending']\n  },\n  radar: {\n    // shape: 'circle',\n    indicator: [\n      { name: 'Sales', max: 6500 },\n      { name: 'Administration', max: 16000 },\n      { name: 'Information Technology', max: 30000 },\n      { name: 'Customer Support', max: 38000 },\n      { name: 'Development', max: 52000 },\n      { name: 'Marketing', max: 25000 }\n    ]\n  },\n  series: [\n    {\n      name: 'Budget vs spending',\n      type: 'radar',\n      data: [\n        {\n          value: [4200, 3000, 20000, 35000, 50000, 18000],\n          name: 'Allocated Budget'\n        },\n        {\n          value: [5000, 14000, 28000, 26000, 42000, 21000],\n          name: 'Actual Spending'\n        }\n      ]\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  \n\n<h2 id=\"盒须图\"><a href=\"#盒须图\" class=\"headerlink\" title=\"盒须图\"></a>盒须图</h2>\n  <div id=\"echarts-5883\" style=\"width: 85%; height: 400px; margin: 0 auto\"></div>\n  <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.3.3/dist/echarts.min.js\"></script>\n  <script>\n    var myChart = echarts.init(document.getElementById('echarts-5883'));\n    var option = {\n  title: [\n    {\n      text: 'Michelson-Morley Experiment',\n      left: 'center'\n    },\n    {\n      text: 'upper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR',\n      borderColor: '#999',\n      borderWidth: 1,\n      textStyle: {\n        fontWeight: 'normal',\n        fontSize: 14,\n        lineHeight: 20\n      },\n      left: '10%',\n      top: '90%'\n    }\n  ],\n  dataset: [\n    {\n      // prettier-ignore\n      source: [\n                [850, 740, 900, 1070, 930, 850, 950, 980, 980, 880, 1000, 980, 930, 650, 760, 810, 1000, 1000, 960, 960],\n                [960, 940, 960, 940, 880, 800, 850, 880, 900, 840, 830, 790, 810, 880, 880, 830, 800, 790, 760, 800],\n                [880, 880, 880, 860, 720, 720, 620, 860, 970, 950, 880, 910, 850, 870, 840, 840, 850, 840, 840, 840],\n                [890, 810, 810, 820, 800, 770, 760, 740, 750, 760, 910, 920, 890, 860, 880, 720, 840, 850, 850, 780],\n                [890, 840, 780, 810, 760, 810, 790, 810, 820, 850, 870, 870, 810, 740, 810, 940, 950, 800, 810, 870]\n            ]\n    },\n    {\n      transform: {\n        type: 'boxplot',\n        config: { itemNameFormatter: 'expr {value}' }\n      }\n    },\n    {\n      fromDatasetIndex: 1,\n      fromTransformResult: 1\n    }\n  ],\n  tooltip: {\n    trigger: 'item',\n    axisPointer: {\n      type: 'shadow'\n    }\n  },\n  grid: {\n    left: '10%',\n    right: '10%',\n    bottom: '15%'\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: true,\n    nameGap: 30,\n    splitArea: {\n      show: false\n    },\n    splitLine: {\n      show: false\n    }\n  },\n  yAxis: {\n    type: 'value',\n    name: 'km/s minus 299,000',\n    splitArea: {\n      show: true\n    }\n  },\n  series: [\n    {\n      name: 'boxplot',\n      type: 'boxplot',\n      datasetIndex: 1\n    },\n    {\n      name: 'outlier',\n      type: 'scatter',\n      datasetIndex: 2\n    }\n  ]\n};\n    myChart.setOption(option);\n  </script>\n  "},{"title":"linux 下使用 Clash","date":"2023-01-18T03:08:55.000Z","_content":"\n\n### 下载 Clash\n\n[Clash Download)](https://www.clash.la/releases/)\n\n新建安装目录\n\n```bash\nmkdir -p /opt/clash\n```\n\n下载clash\n\n> 无法直接用命令下载，需要先下载到本地，再上传到服务器 `/opt/clash/` 目录下\n\n```bash\ncurl -o /opt/clash/clash-linux-amd64-v1.18.0.gz https://down.clash.la/Clash/Core/Releases/clash-linux-amd64-v1.18.0.gz\n```\n\n解压\n\n```bash\ngunzip /opt/clash/clash-linux-amd64-v1.18.0.gz\n\n```\n\n重命名\n\n```bash\nmv /opt/clash/clash-linux-amd64-v1.18.0 /opt/clash/clash\n```\n\n### 配置并运行Clash\n\n下载配置文件\n\n```bash\nwget -O /opt/clash/config.yaml [订阅链接]\n```\n\n授权clash\n\n```Bash\nchmod +x clash\n```\n\n启动clash\n\n```bash\nsudo ./clash -d .\n```\n\n### 启动系统代理\n\n> 以下命令适用于Gnome桌面环境\n\n```bash\ngsettings set org.gnome.system.proxy mode 'manual'\ngsettings set org.gnome.system.proxy.http port 7890\ngsettings set org.gnome.system.proxy.http host '127.0.0.1'\ngsettings set org.gnome.system.proxy.socks port 7891\ngsettings set org.gnome.system.proxy.socks host '127.0.0.1'\ngsettings set org.gnome.system.proxy ignore-hosts \"['localhost', '127.0.0.0/8', '::1']\"\n\n```\n\n### 配置开机启动\n\n新建系统服务文件\n\n```bash\ncat > /etc/systemd/system/clash.service <<EOF\n[Unit]\nDescription=clash daemon\n\n[Service]\nType=simple\nUser=root\nExecStart=/opt/clash/clash -d /opt/clash/\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\nEOF\n```\n\n重载配置\n\n```bash\nsystemctl daemon-reload\n```\n\n启动Clash\n\n```bash\nsystemctl start clash.service\n```\n\n配置开机启动\n\n```bash\nsystemctl enable clash.service\n```\n\n### 配置订阅定时更新\n\n```bash\ncrontab -e\n```\n\n填入以下内容\n\n```bash\n29 6    * * *   root    pgrep clash | xargs kill -s 9 \n30 6    * * *   root    mv /opt/clash/config.yaml /opt/clash/configbackup.yaml \n31 6    * * *   root    wget -P /opt/clash/ -O config.yaml https://mojie.best/api/v1/client/subscribe?token=e4510668985ed132db4668feda6ba318&flag=clash\n32 6    * * *   root    nohup /opt/clash/clash -d /opt/clash/\n```\n\n重启定时任务使之生效\n\n```bash\nsystemctl restart crond.service\n```\n\n```Bash\nhttps://sub.back2me.cn/sub?target=clash&url=https%3A%2F%2Fmojie.best%2Fapi%2Fv1%2Fclient%2Fsubscribe%3Ftoken%3De4510668985ed132db4668feda6ba318&insert=false\n```\n\n### 检查环境变量\n\n```Bash\nenv | grep -E 'http_proxy|https_proxy'\n```\n\n### 使用代理\n\n```Bash\nexport https_proxy=http://127.0.0.1:7890;export http_proxy=http://127.0.0.1:7890;export all_proxy=socks5://127.0.0.1:7890\n```","source":"_posts/linux-clash.md","raw":"---\ntitle: linux 下使用 Clash\ndate: 2023-01-18 11:08:55\ntags:\n- linux\n- clash\ncategories:\n- devops\n---\n\n\n### 下载 Clash\n\n[Clash Download)](https://www.clash.la/releases/)\n\n新建安装目录\n\n```bash\nmkdir -p /opt/clash\n```\n\n下载clash\n\n> 无法直接用命令下载，需要先下载到本地，再上传到服务器 `/opt/clash/` 目录下\n\n```bash\ncurl -o /opt/clash/clash-linux-amd64-v1.18.0.gz https://down.clash.la/Clash/Core/Releases/clash-linux-amd64-v1.18.0.gz\n```\n\n解压\n\n```bash\ngunzip /opt/clash/clash-linux-amd64-v1.18.0.gz\n\n```\n\n重命名\n\n```bash\nmv /opt/clash/clash-linux-amd64-v1.18.0 /opt/clash/clash\n```\n\n### 配置并运行Clash\n\n下载配置文件\n\n```bash\nwget -O /opt/clash/config.yaml [订阅链接]\n```\n\n授权clash\n\n```Bash\nchmod +x clash\n```\n\n启动clash\n\n```bash\nsudo ./clash -d .\n```\n\n### 启动系统代理\n\n> 以下命令适用于Gnome桌面环境\n\n```bash\ngsettings set org.gnome.system.proxy mode 'manual'\ngsettings set org.gnome.system.proxy.http port 7890\ngsettings set org.gnome.system.proxy.http host '127.0.0.1'\ngsettings set org.gnome.system.proxy.socks port 7891\ngsettings set org.gnome.system.proxy.socks host '127.0.0.1'\ngsettings set org.gnome.system.proxy ignore-hosts \"['localhost', '127.0.0.0/8', '::1']\"\n\n```\n\n### 配置开机启动\n\n新建系统服务文件\n\n```bash\ncat > /etc/systemd/system/clash.service <<EOF\n[Unit]\nDescription=clash daemon\n\n[Service]\nType=simple\nUser=root\nExecStart=/opt/clash/clash -d /opt/clash/\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\nEOF\n```\n\n重载配置\n\n```bash\nsystemctl daemon-reload\n```\n\n启动Clash\n\n```bash\nsystemctl start clash.service\n```\n\n配置开机启动\n\n```bash\nsystemctl enable clash.service\n```\n\n### 配置订阅定时更新\n\n```bash\ncrontab -e\n```\n\n填入以下内容\n\n```bash\n29 6    * * *   root    pgrep clash | xargs kill -s 9 \n30 6    * * *   root    mv /opt/clash/config.yaml /opt/clash/configbackup.yaml \n31 6    * * *   root    wget -P /opt/clash/ -O config.yaml https://mojie.best/api/v1/client/subscribe?token=e4510668985ed132db4668feda6ba318&flag=clash\n32 6    * * *   root    nohup /opt/clash/clash -d /opt/clash/\n```\n\n重启定时任务使之生效\n\n```bash\nsystemctl restart crond.service\n```\n\n```Bash\nhttps://sub.back2me.cn/sub?target=clash&url=https%3A%2F%2Fmojie.best%2Fapi%2Fv1%2Fclient%2Fsubscribe%3Ftoken%3De4510668985ed132db4668feda6ba318&insert=false\n```\n\n### 检查环境变量\n\n```Bash\nenv | grep -E 'http_proxy|https_proxy'\n```\n\n### 使用代理\n\n```Bash\nexport https_proxy=http://127.0.0.1:7890;export http_proxy=http://127.0.0.1:7890;export all_proxy=socks5://127.0.0.1:7890\n```","slug":"linux-clash","published":1,"updated":"2024-12-23T08:02:31.000Z","comments":1,"layout":"post","photos":[],"_id":"cm7t4ahdu0006u7jk0i1p8y2g","content":"<h3 id=\"下载-Clash\"><a href=\"#下载-Clash\" class=\"headerlink\" title=\"下载 Clash\"></a>下载 Clash</h3><p><a href=\"https://www.clash.la/releases/\">Clash Download)</a></p>\n<p>新建安装目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /opt/clash</span><br></pre></td></tr></table></figure>\n\n<p>下载clash</p>\n<blockquote>\n<p>无法直接用命令下载，需要先下载到本地，再上传到服务器 <code>/opt/clash/</code> 目录下</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o /opt/clash/clash-linux-amd64-v1.18.0.gz https://down.clash.la/Clash/Core/Releases/clash-linux-amd64-v1.18.0.gz</span><br></pre></td></tr></table></figure>\n\n<p>解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip /opt/clash/clash-linux-amd64-v1.18.0.gz</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>重命名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /opt/clash/clash-linux-amd64-v1.18.0 /opt/clash/clash</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置并运行Clash\"><a href=\"#配置并运行Clash\" class=\"headerlink\" title=\"配置并运行Clash\"></a>配置并运行Clash</h3><p>下载配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O /opt/clash/config.yaml [订阅链接]</span><br></pre></td></tr></table></figure>\n\n<p>授权clash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> +x clash</span><br></pre></td></tr></table></figure>\n\n<p>启动clash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> ./clash -d .</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动系统代理\"><a href=\"#启动系统代理\" class=\"headerlink\" title=\"启动系统代理\"></a>启动系统代理</h3><blockquote>\n<p>以下命令适用于Gnome桌面环境</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy mode <span class=\"string\">&#x27;manual&#x27;</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy.http port 7890</span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy.http host <span class=\"string\">&#x27;127.0.0.1&#x27;</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy.socks port 7891</span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy.socks host <span class=\"string\">&#x27;127.0.0.1&#x27;</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy ignore-hosts <span class=\"string\">&quot;[&#x27;localhost&#x27;, &#x27;127.0.0.0/8&#x27;, &#x27;::1&#x27;]&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置开机启动\"><a href=\"#配置开机启动\" class=\"headerlink\" title=\"配置开机启动\"></a>配置开机启动</h3><p>新建系统服务文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &gt; /etc/systemd/system/clash.service &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">[Unit]</span></span><br><span class=\"line\"><span class=\"string\">Description=clash daemon</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[Service]</span></span><br><span class=\"line\"><span class=\"string\">Type=simple</span></span><br><span class=\"line\"><span class=\"string\">User=root</span></span><br><span class=\"line\"><span class=\"string\">ExecStart=/opt/clash/clash -d /opt/clash/</span></span><br><span class=\"line\"><span class=\"string\">Restart=on-failure</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[Install]</span></span><br><span class=\"line\"><span class=\"string\">WantedBy=multi-user.target</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<p>重载配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n\n<p>启动Clash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start clash.service</span><br></pre></td></tr></table></figure>\n\n<p>配置开机启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> clash.service</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置订阅定时更新\"><a href=\"#配置订阅定时更新\" class=\"headerlink\" title=\"配置订阅定时更新\"></a>配置订阅定时更新</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -e</span><br></pre></td></tr></table></figure>\n\n<p>填入以下内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">29 6    * * *   root    pgrep clash | xargs <span class=\"built_in\">kill</span> -s 9 </span><br><span class=\"line\">30 6    * * *   root    <span class=\"built_in\">mv</span> /opt/clash/config.yaml /opt/clash/configbackup.yaml </span><br><span class=\"line\">31 6    * * *   root    wget -P /opt/clash/ -O config.yaml https://mojie.best/api/v1/client/subscribe?token=e4510668985ed132db4668feda6ba318&amp;flag=clash</span><br><span class=\"line\">32 6    * * *   root    <span class=\"built_in\">nohup</span> /opt/clash/clash -d /opt/clash/</span><br></pre></td></tr></table></figure>\n\n<p>重启定时任务使之生效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart crond.service</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://sub.back2me.cn/sub?target=clash&amp;url=https%3A%2F%2Fmojie.best%2Fapi%2Fv1%2Fclient%2Fsubscribe%3Ftoken%3De4510668985ed132db4668feda6ba318&amp;insert=<span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"检查环境变量\"><a href=\"#检查环境变量\" class=\"headerlink\" title=\"检查环境变量\"></a>检查环境变量</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">env</span> | grep -E <span class=\"string\">&#x27;http_proxy|https_proxy&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用代理\"><a href=\"#使用代理\" class=\"headerlink\" title=\"使用代理\"></a>使用代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=http://127.0.0.1:7890;<span class=\"built_in\">export</span> http_proxy=http://127.0.0.1:7890;<span class=\"built_in\">export</span> all_proxy=socks5://127.0.0.1:7890</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h3 id=\"下载-Clash\"><a href=\"#下载-Clash\" class=\"headerlink\" title=\"下载 Clash\"></a>下载 Clash</h3><p><a href=\"https://www.clash.la/releases/\">Clash Download)</a></p>\n<p>新建安装目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /opt/clash</span><br></pre></td></tr></table></figure>\n\n<p>下载clash</p>\n<blockquote>\n<p>无法直接用命令下载，需要先下载到本地，再上传到服务器 <code>/opt/clash/</code> 目录下</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o /opt/clash/clash-linux-amd64-v1.18.0.gz https://down.clash.la/Clash/Core/Releases/clash-linux-amd64-v1.18.0.gz</span><br></pre></td></tr></table></figure>\n\n<p>解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip /opt/clash/clash-linux-amd64-v1.18.0.gz</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>重命名</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> /opt/clash/clash-linux-amd64-v1.18.0 /opt/clash/clash</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置并运行Clash\"><a href=\"#配置并运行Clash\" class=\"headerlink\" title=\"配置并运行Clash\"></a>配置并运行Clash</h3><p>下载配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -O /opt/clash/config.yaml [订阅链接]</span><br></pre></td></tr></table></figure>\n\n<p>授权clash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chmod</span> +x clash</span><br></pre></td></tr></table></figure>\n\n<p>启动clash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">sudo</span> ./clash -d .</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启动系统代理\"><a href=\"#启动系统代理\" class=\"headerlink\" title=\"启动系统代理\"></a>启动系统代理</h3><blockquote>\n<p>以下命令适用于Gnome桌面环境</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy mode <span class=\"string\">&#x27;manual&#x27;</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy.http port 7890</span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy.http host <span class=\"string\">&#x27;127.0.0.1&#x27;</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy.socks port 7891</span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy.socks host <span class=\"string\">&#x27;127.0.0.1&#x27;</span></span><br><span class=\"line\">gsettings <span class=\"built_in\">set</span> org.gnome.system.proxy ignore-hosts <span class=\"string\">&quot;[&#x27;localhost&#x27;, &#x27;127.0.0.0/8&#x27;, &#x27;::1&#x27;]&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置开机启动\"><a href=\"#配置开机启动\" class=\"headerlink\" title=\"配置开机启动\"></a>配置开机启动</h3><p>新建系统服务文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cat</span> &gt; /etc/systemd/system/clash.service &lt;&lt;<span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\">[Unit]</span></span><br><span class=\"line\"><span class=\"string\">Description=clash daemon</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[Service]</span></span><br><span class=\"line\"><span class=\"string\">Type=simple</span></span><br><span class=\"line\"><span class=\"string\">User=root</span></span><br><span class=\"line\"><span class=\"string\">ExecStart=/opt/clash/clash -d /opt/clash/</span></span><br><span class=\"line\"><span class=\"string\">Restart=on-failure</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[Install]</span></span><br><span class=\"line\"><span class=\"string\">WantedBy=multi-user.target</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n\n<p>重载配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n\n<p>启动Clash</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start clash.service</span><br></pre></td></tr></table></figure>\n\n<p>配置开机启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">enable</span> clash.service</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置订阅定时更新\"><a href=\"#配置订阅定时更新\" class=\"headerlink\" title=\"配置订阅定时更新\"></a>配置订阅定时更新</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">crontab -e</span><br></pre></td></tr></table></figure>\n\n<p>填入以下内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">29 6    * * *   root    pgrep clash | xargs <span class=\"built_in\">kill</span> -s 9 </span><br><span class=\"line\">30 6    * * *   root    <span class=\"built_in\">mv</span> /opt/clash/config.yaml /opt/clash/configbackup.yaml </span><br><span class=\"line\">31 6    * * *   root    wget -P /opt/clash/ -O config.yaml https://mojie.best/api/v1/client/subscribe?token=e4510668985ed132db4668feda6ba318&amp;flag=clash</span><br><span class=\"line\">32 6    * * *   root    <span class=\"built_in\">nohup</span> /opt/clash/clash -d /opt/clash/</span><br></pre></td></tr></table></figure>\n\n<p>重启定时任务使之生效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart crond.service</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://sub.back2me.cn/sub?target=clash&amp;url=https%3A%2F%2Fmojie.best%2Fapi%2Fv1%2Fclient%2Fsubscribe%3Ftoken%3De4510668985ed132db4668feda6ba318&amp;insert=<span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"检查环境变量\"><a href=\"#检查环境变量\" class=\"headerlink\" title=\"检查环境变量\"></a>检查环境变量</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">env</span> | grep -E <span class=\"string\">&#x27;http_proxy|https_proxy&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用代理\"><a href=\"#使用代理\" class=\"headerlink\" title=\"使用代理\"></a>使用代理</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=http://127.0.0.1:7890;<span class=\"built_in\">export</span> http_proxy=http://127.0.0.1:7890;<span class=\"built_in\">export</span> all_proxy=socks5://127.0.0.1:7890</span><br></pre></td></tr></table></figure>"},{"title":"Markdown Test","date":"2022-07-20T06:23:37.000Z","excerpt":"测试markdown语法","_content":"\n## 标题\n\n不同数量的`#`可以完成不同的标题，如下：\n\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n## 字体\n\n粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：\n\n**这个是粗体**\n\n*这个是斜体*\n\n***这个是粗体加斜体***\n\n~~这里想用删除线~~\n\n注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。\n\n## 无序列表\n\n无序列表的使用，在符号`-`后加空格使用。如下：\n\n- 无序列表 1\n- 无序列表 2\n- 无序列表 3\n\n如果要控制列表的层级，则需要在符号`-`前使用空格。如下：\n\n- 无序列表 1\n- 无序列表 2\n  - 无序列表 2.1\n  - 无序列表 2.2\n    - 无序列表 2.1.1\n    - 无序列表 2.1.2\n\n## 有序列表\n\n有序列表的使用，在数字及符号`.`后加空格后输入内容，如下：\n\n1. 有序列表 1\n2. 有序列表 2\n3. 有序列表 3\n \n## 引用\n\n引用的格式是在符号`>`后面书写文字。如下：\n\n> 读一本好书，就是在和高尚的人谈话。 ——歌德\n\n> 雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰\n\n## 链接\n\n微信公众号仅支持公众号文章链接，即域名为`https://mp.weixin.qq.com/`的合法链接。使用方法如下所示：\n\n对于该论述，欢迎读者查阅之前发过的文章，[你是《未来世界的幸存者》么？](https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA)\n<a id=\"jump_8\"></a>\n\n## 图片\n\n插入图片，格式如下：\n\n![这里写图片描述](https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg)\n\n支持 jpg、png、gif、svg 等图片格式，**其中 svg 文件仅可在微信公众平台中使用**，svg 文件示例如下：\n\n![](https://markdown.com.cn/images/i-am-svg.svg)\n\n支持图片**拖拽和截图粘贴**到编辑器中。\n\n注：支持图片 ***拖拽和截图粘贴*** 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。\n\n## 分割线\n\n可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：\n\n---\n\n## 表格\n\n可以使用冒号来定义表格的对齐方式，如下：\n\n| 姓名   | 年龄 |     工作 |\n| :----- | :--: | -------: |\n| 小可爱 |  18  | 吃可爱多 |\n| 小小勇敢 |  20  | 爬棵勇敢树 |\n| 小小小机智 |  22  | 看一本机智书 |\n\n## 代码块\n\n> 支持平台：微信代码主题仅支持微信公众号！其他主题无限制。\n\n如果在一个行内需要引用代码，只要用反引号引起来就好，如下：\n\nUse the `printf()` function.\n\n在需要高亮的代码块的前一行及后一行使用三个反引号，同时**第一行反引号后面表示代码块所使用的语言**，如下：\n\n```java\n// FileName: HelloWorld.java\npublic class HelloWorld {\n  // Java 入口程序，程序从此入口\n  public static void main(String[] args) {\n    System.out.println(\"Hello,World!\"); // 向控制台打印一条语句\n  }\n}\n```\n","source":"_posts/markdown-test.md","raw":"---\ntitle: Markdown Test\ndate: 2022-07-20 14:23:37\ntags:\n- Test\ncategories:\n- Test\nexcerpt: 测试markdown语法\n---\n\n## 标题\n\n不同数量的`#`可以完成不同的标题，如下：\n\n# 一级标题\n\n## 二级标题\n\n### 三级标题\n\n## 字体\n\n粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：\n\n**这个是粗体**\n\n*这个是斜体*\n\n***这个是粗体加斜体***\n\n~~这里想用删除线~~\n\n注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。\n\n## 无序列表\n\n无序列表的使用，在符号`-`后加空格使用。如下：\n\n- 无序列表 1\n- 无序列表 2\n- 无序列表 3\n\n如果要控制列表的层级，则需要在符号`-`前使用空格。如下：\n\n- 无序列表 1\n- 无序列表 2\n  - 无序列表 2.1\n  - 无序列表 2.2\n    - 无序列表 2.1.1\n    - 无序列表 2.1.2\n\n## 有序列表\n\n有序列表的使用，在数字及符号`.`后加空格后输入内容，如下：\n\n1. 有序列表 1\n2. 有序列表 2\n3. 有序列表 3\n \n## 引用\n\n引用的格式是在符号`>`后面书写文字。如下：\n\n> 读一本好书，就是在和高尚的人谈话。 ——歌德\n\n> 雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰\n\n## 链接\n\n微信公众号仅支持公众号文章链接，即域名为`https://mp.weixin.qq.com/`的合法链接。使用方法如下所示：\n\n对于该论述，欢迎读者查阅之前发过的文章，[你是《未来世界的幸存者》么？](https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA)\n<a id=\"jump_8\"></a>\n\n## 图片\n\n插入图片，格式如下：\n\n![这里写图片描述](https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg)\n\n支持 jpg、png、gif、svg 等图片格式，**其中 svg 文件仅可在微信公众平台中使用**，svg 文件示例如下：\n\n![](https://markdown.com.cn/images/i-am-svg.svg)\n\n支持图片**拖拽和截图粘贴**到编辑器中。\n\n注：支持图片 ***拖拽和截图粘贴*** 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。\n\n## 分割线\n\n可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：\n\n---\n\n## 表格\n\n可以使用冒号来定义表格的对齐方式，如下：\n\n| 姓名   | 年龄 |     工作 |\n| :----- | :--: | -------: |\n| 小可爱 |  18  | 吃可爱多 |\n| 小小勇敢 |  20  | 爬棵勇敢树 |\n| 小小小机智 |  22  | 看一本机智书 |\n\n## 代码块\n\n> 支持平台：微信代码主题仅支持微信公众号！其他主题无限制。\n\n如果在一个行内需要引用代码，只要用反引号引起来就好，如下：\n\nUse the `printf()` function.\n\n在需要高亮的代码块的前一行及后一行使用三个反引号，同时**第一行反引号后面表示代码块所使用的语言**，如下：\n\n```java\n// FileName: HelloWorld.java\npublic class HelloWorld {\n  // Java 入口程序，程序从此入口\n  public static void main(String[] args) {\n    System.out.println(\"Hello,World!\"); // 向控制台打印一条语句\n  }\n}\n```\n","slug":"markdown-test","published":1,"updated":"2024-12-23T08:02:31.000Z","comments":1,"layout":"post","photos":[],"_id":"cm7t4ahdu000au7jkd3807i9v","content":"<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><p>不同数量的<code>#</code>可以完成不同的标题，如下：</p>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h2 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h2><p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p>\n<p><strong>这个是粗体</strong></p>\n<p><em>这个是斜体</em></p>\n<p><em><strong>这个是粗体加斜体</strong></em></p>\n<p><del>这里想用删除线</del></p>\n<p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p>\n<h2 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h2><p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p>\n<ul>\n<li>无序列表 1</li>\n<li>无序列表 2</li>\n<li>无序列表 3</li>\n</ul>\n<p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p>\n<ul>\n<li>无序列表 1</li>\n<li>无序列表 2<ul>\n<li>无序列表 2.1</li>\n<li>无序列表 2.2<ul>\n<li>无序列表 2.1.1</li>\n<li>无序列表 2.1.2</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h2><p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p>\n<ol>\n<li>有序列表 1</li>\n<li>有序列表 2</li>\n<li>有序列表 3</li>\n</ol>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p>\n<blockquote>\n<p>读一本好书，就是在和高尚的人谈话。 ——歌德</p>\n</blockquote>\n<blockquote>\n<p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p>\n</blockquote>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p>\n<p>对于该论述，欢迎读者查阅之前发过的文章，<a href=\"https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA\">你是《未来世界的幸存者》么？</a><br><a id=\"jump_8\"></a></p>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p>插入图片，格式如下：</p>\n<p><img src=\"https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg\" alt=\"这里写图片描述\"></p>\n<p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p>\n<p><img src=\"https://markdown.com.cn/images/i-am-svg.svg\"></p>\n<p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p>\n<p>注：支持图片 <em><strong>拖拽和截图粘贴</strong></em> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p>\n<h2 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h2><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p>\n<hr>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p>可以使用冒号来定义表格的对齐方式，如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">姓名</th>\n<th align=\"center\">年龄</th>\n<th align=\"right\">工作</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">小可爱</td>\n<td align=\"center\">18</td>\n<td align=\"right\">吃可爱多</td>\n</tr>\n<tr>\n<td align=\"left\">小小勇敢</td>\n<td align=\"center\">20</td>\n<td align=\"right\">爬棵勇敢树</td>\n</tr>\n<tr>\n<td align=\"left\">小小小机智</td>\n<td align=\"center\">22</td>\n<td align=\"right\">看一本机智书</td>\n</tr>\n</tbody></table>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><blockquote>\n<p>支持平台：微信代码主题仅支持微信公众号！其他主题无限制。</p>\n</blockquote>\n<p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p>\n<p>Use the <code>printf()</code> function.</p>\n<p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// FileName: HelloWorld.java</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Java 入口程序，程序从此入口</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Hello,World!&quot;</span>); <span class=\"comment\">// 向控制台打印一条语句</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","more":"<h2 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h2><p>不同数量的<code>#</code>可以完成不同的标题，如下：</p>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h2 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h2><p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p>\n<p><strong>这个是粗体</strong></p>\n<p><em>这个是斜体</em></p>\n<p><em><strong>这个是粗体加斜体</strong></em></p>\n<p><del>这里想用删除线</del></p>\n<p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p>\n<h2 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h2><p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p>\n<ul>\n<li>无序列表 1</li>\n<li>无序列表 2</li>\n<li>无序列表 3</li>\n</ul>\n<p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p>\n<ul>\n<li>无序列表 1</li>\n<li>无序列表 2<ul>\n<li>无序列表 2.1</li>\n<li>无序列表 2.2<ul>\n<li>无序列表 2.1.1</li>\n<li>无序列表 2.1.2</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h2><p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p>\n<ol>\n<li>有序列表 1</li>\n<li>有序列表 2</li>\n<li>有序列表 3</li>\n</ol>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p>\n<blockquote>\n<p>读一本好书，就是在和高尚的人谈话。 ——歌德</p>\n</blockquote>\n<blockquote>\n<p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p>\n</blockquote>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p>\n<p>对于该论述，欢迎读者查阅之前发过的文章，<a href=\"https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA\">你是《未来世界的幸存者》么？</a><br><a id=\"jump_8\"></a></p>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p>插入图片，格式如下：</p>\n<p><img src=\"https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg\" alt=\"这里写图片描述\"></p>\n<p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p>\n<p><img src=\"https://markdown.com.cn/images/i-am-svg.svg\"></p>\n<p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p>\n<p>注：支持图片 <em><strong>拖拽和截图粘贴</strong></em> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p>\n<h2 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h2><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p>\n<hr>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p>可以使用冒号来定义表格的对齐方式，如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">姓名</th>\n<th align=\"center\">年龄</th>\n<th align=\"right\">工作</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">小可爱</td>\n<td align=\"center\">18</td>\n<td align=\"right\">吃可爱多</td>\n</tr>\n<tr>\n<td align=\"left\">小小勇敢</td>\n<td align=\"center\">20</td>\n<td align=\"right\">爬棵勇敢树</td>\n</tr>\n<tr>\n<td align=\"left\">小小小机智</td>\n<td align=\"center\">22</td>\n<td align=\"right\">看一本机智书</td>\n</tr>\n</tbody></table>\n<h2 id=\"代码块\"><a href=\"#代码块\" class=\"headerlink\" title=\"代码块\"></a>代码块</h2><blockquote>\n<p>支持平台：微信代码主题仅支持微信公众号！其他主题无限制。</p>\n</blockquote>\n<p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p>\n<p>Use the <code>printf()</code> function.</p>\n<p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// FileName: HelloWorld.java</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Java 入口程序，程序从此入口</span></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;Hello,World!&quot;</span>); <span class=\"comment\">// 向控制台打印一条语句</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"MathJax Test","date":"2022-07-21T00:53:56.000Z","excerpt":"测试MathJax语法","_content":"\n## 行内公式与块公式\n\n```markdown\n$f(x)=ax+b$ 这是行内公式.\n$$f(x)=ax+b$$ 这是块公式，单独占一行.\n```\n$f(x)=ax+b$ 这是行内公式.\n$$f(x)=ax+b$$ 这是块公式，单独占一行.\n\n## 上标与下标\n\n使用 ^ 表示上标，使用 _ 表示下标，如果上下标的内容多于一个字符，可以使用大括号括起来：\n\n```markdown\n$$f(x) = a_1x^n + a_2x^{n-1} + a_3x^{n-2}$$\n```\n\n显示效果：\n\n$$f(x) = a_1x^n + a_2x^{n-1} + a_3x^{n-2}$$\n\n如果左右两边都有上下标可以使用 \\sideset 语法：\n\n```markdown\n$$\\sideset{^n_k}{^x_y}a$$\n```\n\n显示效果：\n\n$$\\sideset{^n_k}{^x_y}a$$\n\n## 括号\n\n在 markdown 语法中，\\, $, {, }, _都是有特殊含义的，所以需要加\\转义。小括号与方括号可以使用原始的() [] 大括号需要转义\\也可以使用\\lbrace和 \\rbrace\n\n```markdown\n$$ \\\\{x*y\\\\} $$  --注：大括号在markdown中已有一次转义，在mathjax中还要再转一次，所以为两个斜杠\n\n$$\\lbrace x*y \\rbrace$$\n```\n\n显示效果：\n\n$$ \\\\{x*y\\\\} $$\n\n$$\\lbrace x*y \\rbrace$$\n\n原始符号不会随着公式大小自动缩放，需要使用 \\left 和 \\right 来实现自动缩放：\n\n```markdown\n$$\\left \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9} \\right \\rbrace$$\n```\n\n显示效果：\n\n$$\\left \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9} \\right \\rbrace$$\n\n不使用\\left 和 \\right的效果：\n\n```markdown\n$$ \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$\n```\n\n显示效果：\n\n$$ \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$\n\n## 分数与开方\n\n可以使用\\frac 或者 \\over 实现分数的显示：\n\n```markdown\n$\\frac xy$\n$ x+3 \\over y+5 $\n```\n\n显示为 $\\frac xy$ 和 $ x+3 \\over y+5 $\n\n开方使用\\sqrt:\n\n```markdown\n$ \\sqrt{x^5} $\n$ \\sqrt[3]{\\frac xy} $\n```\n\n显示为 $ \\sqrt{x^5} $ 和 $ \\sqrt[3]{\\frac xy} $\n\n## 求和与积分\n\n求和使用\\sum,可加上下标，积分使用\\int可加上下限，双重积分用\\iint\n\n```markdown\n$ \\sum_{i=0}^n $\n$ \\int_1^\\infty $\n$ \\iint_1^\\infty $\n```\n\n显示为 $ \\sum_{i=0}^n $ 和 $ \\int_1^\\infty $ 以及 $ \\iint_1^\\infty $\n\n## 极限\n\n极限使用\\lim:\n\n```markdown\n$ \\lim_{x \\to 0} $\n```\n\n显示为: $ \\lim_{x \\to 0} $\n\n## 表格与矩阵\n\n表格样式lcr表示居中，|加入一条竖线，\\hline表示行间横线，列之间用&分隔，行之间用\\分隔：\n\n```markdown\n$$\\begin{array}{c|lcr}\nn & \\text{Left} & \\text{Center} & \\text{Right} \\\\\\\\\n\\hline\n1 & 1.97 & 5 & 12 \\\\\\\\\n2 & -11 & 19 & -80 \\\\\\\\\n3 & 70 & 209 & 1+i \\\\\\\\\n\\end{array}$$\n```\n\n显示效果：\n\n$$\\begin{array}{c|lcr}\nn & \\text{Left} & \\text{Center} & \\text{Right} \\\\\\\\\n\\hline\n1 & 1.97 & 5 & 12 \\\\\\\\\n2 & -11 & 19 & -80 \\\\\\\\\n3 & 70 & 209 & 1+i \\\\\\\\\n\\end{array}$$\n\n## 矩阵\n\n```markdown\n$$\\left[\n\\begin{matrix}\nV_A \\\\\\\\\nV_B \\\\\\\\\nV_C \\\\\\\\\n\\end{matrix}\n\\right] =\n\\left[\n\\begin{matrix}\n1 & 0 & L \\\\\\\\\n-cosψ & sinψ & L \\\\\\\\\n-cosψ & -sinψ & L\n\\end{matrix}\n\\right]\n\\left[\n\\begin{matrix}\nV_x \\\\\\\\\nV_y \\\\\\\\\nW \\\\\\\\\n\\end{matrix}\n\\right] $$\n```\n\n显示效果:\n\n$$\\left[\n\\begin{matrix}\nV_A \\\\\\\\\nV_B \\\\\\\\\nV_C \\\\\\\\\n\\end{matrix}\n\\right] =\n\\left[\n\\begin{matrix}\n1 & 0 & L \\\\\\\\\n-cosψ & sinψ & L \\\\\\\\\n-cosψ & -sinψ & L\n\\end{matrix}\n\\right]\n\\left[\n\\begin{matrix}\nV_x \\\\\\\\\nV_y \\\\\\\\\nW \\\\\\\\\n\\end{matrix}\n\\right] $$\n\n<hr>\n\n综合测试：\n\n```markdown\n$$\\frac{\\partial u}{\\partial t}\n= h^2 \\left( \\frac{\\partial^2 u}{\\partial x^2} +\n\\frac{\\partial^2 u}{\\partial y^2} +\n\\frac{\\partial^2 u}{\\partial z^2}\\right)$$\n\n$$ \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$\n```\n显示效果:\n\n$$\\frac{\\partial u}{\\partial t}\n= h^2 \\left( \\frac{\\partial^2 u}{\\partial x^2} +\n\\frac{\\partial^2 u}{\\partial y^2} +\n\\frac{\\partial^2 u}{\\partial z^2}\\right)$$\n\n$$ \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$","source":"_posts/math-jax-test.md","raw":"---\ntitle: MathJax Test\ndate: 2022-07-21 08:53:56\ntags:\n- Test\ncategories:\n- Test\nexcerpt: 测试MathJax语法\n---\n\n## 行内公式与块公式\n\n```markdown\n$f(x)=ax+b$ 这是行内公式.\n$$f(x)=ax+b$$ 这是块公式，单独占一行.\n```\n$f(x)=ax+b$ 这是行内公式.\n$$f(x)=ax+b$$ 这是块公式，单独占一行.\n\n## 上标与下标\n\n使用 ^ 表示上标，使用 _ 表示下标，如果上下标的内容多于一个字符，可以使用大括号括起来：\n\n```markdown\n$$f(x) = a_1x^n + a_2x^{n-1} + a_3x^{n-2}$$\n```\n\n显示效果：\n\n$$f(x) = a_1x^n + a_2x^{n-1} + a_3x^{n-2}$$\n\n如果左右两边都有上下标可以使用 \\sideset 语法：\n\n```markdown\n$$\\sideset{^n_k}{^x_y}a$$\n```\n\n显示效果：\n\n$$\\sideset{^n_k}{^x_y}a$$\n\n## 括号\n\n在 markdown 语法中，\\, $, {, }, _都是有特殊含义的，所以需要加\\转义。小括号与方括号可以使用原始的() [] 大括号需要转义\\也可以使用\\lbrace和 \\rbrace\n\n```markdown\n$$ \\\\{x*y\\\\} $$  --注：大括号在markdown中已有一次转义，在mathjax中还要再转一次，所以为两个斜杠\n\n$$\\lbrace x*y \\rbrace$$\n```\n\n显示效果：\n\n$$ \\\\{x*y\\\\} $$\n\n$$\\lbrace x*y \\rbrace$$\n\n原始符号不会随着公式大小自动缩放，需要使用 \\left 和 \\right 来实现自动缩放：\n\n```markdown\n$$\\left \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9} \\right \\rbrace$$\n```\n\n显示效果：\n\n$$\\left \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9} \\right \\rbrace$$\n\n不使用\\left 和 \\right的效果：\n\n```markdown\n$$ \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$\n```\n\n显示效果：\n\n$$ \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$\n\n## 分数与开方\n\n可以使用\\frac 或者 \\over 实现分数的显示：\n\n```markdown\n$\\frac xy$\n$ x+3 \\over y+5 $\n```\n\n显示为 $\\frac xy$ 和 $ x+3 \\over y+5 $\n\n开方使用\\sqrt:\n\n```markdown\n$ \\sqrt{x^5} $\n$ \\sqrt[3]{\\frac xy} $\n```\n\n显示为 $ \\sqrt{x^5} $ 和 $ \\sqrt[3]{\\frac xy} $\n\n## 求和与积分\n\n求和使用\\sum,可加上下标，积分使用\\int可加上下限，双重积分用\\iint\n\n```markdown\n$ \\sum_{i=0}^n $\n$ \\int_1^\\infty $\n$ \\iint_1^\\infty $\n```\n\n显示为 $ \\sum_{i=0}^n $ 和 $ \\int_1^\\infty $ 以及 $ \\iint_1^\\infty $\n\n## 极限\n\n极限使用\\lim:\n\n```markdown\n$ \\lim_{x \\to 0} $\n```\n\n显示为: $ \\lim_{x \\to 0} $\n\n## 表格与矩阵\n\n表格样式lcr表示居中，|加入一条竖线，\\hline表示行间横线，列之间用&分隔，行之间用\\分隔：\n\n```markdown\n$$\\begin{array}{c|lcr}\nn & \\text{Left} & \\text{Center} & \\text{Right} \\\\\\\\\n\\hline\n1 & 1.97 & 5 & 12 \\\\\\\\\n2 & -11 & 19 & -80 \\\\\\\\\n3 & 70 & 209 & 1+i \\\\\\\\\n\\end{array}$$\n```\n\n显示效果：\n\n$$\\begin{array}{c|lcr}\nn & \\text{Left} & \\text{Center} & \\text{Right} \\\\\\\\\n\\hline\n1 & 1.97 & 5 & 12 \\\\\\\\\n2 & -11 & 19 & -80 \\\\\\\\\n3 & 70 & 209 & 1+i \\\\\\\\\n\\end{array}$$\n\n## 矩阵\n\n```markdown\n$$\\left[\n\\begin{matrix}\nV_A \\\\\\\\\nV_B \\\\\\\\\nV_C \\\\\\\\\n\\end{matrix}\n\\right] =\n\\left[\n\\begin{matrix}\n1 & 0 & L \\\\\\\\\n-cosψ & sinψ & L \\\\\\\\\n-cosψ & -sinψ & L\n\\end{matrix}\n\\right]\n\\left[\n\\begin{matrix}\nV_x \\\\\\\\\nV_y \\\\\\\\\nW \\\\\\\\\n\\end{matrix}\n\\right] $$\n```\n\n显示效果:\n\n$$\\left[\n\\begin{matrix}\nV_A \\\\\\\\\nV_B \\\\\\\\\nV_C \\\\\\\\\n\\end{matrix}\n\\right] =\n\\left[\n\\begin{matrix}\n1 & 0 & L \\\\\\\\\n-cosψ & sinψ & L \\\\\\\\\n-cosψ & -sinψ & L\n\\end{matrix}\n\\right]\n\\left[\n\\begin{matrix}\nV_x \\\\\\\\\nV_y \\\\\\\\\nW \\\\\\\\\n\\end{matrix}\n\\right] $$\n\n<hr>\n\n综合测试：\n\n```markdown\n$$\\frac{\\partial u}{\\partial t}\n= h^2 \\left( \\frac{\\partial^2 u}{\\partial x^2} +\n\\frac{\\partial^2 u}{\\partial y^2} +\n\\frac{\\partial^2 u}{\\partial z^2}\\right)$$\n\n$$ \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$\n```\n显示效果:\n\n$$\\frac{\\partial u}{\\partial t}\n= h^2 \\left( \\frac{\\partial^2 u}{\\partial x^2} +\n\\frac{\\partial^2 u}{\\partial y^2} +\n\\frac{\\partial^2 u}{\\partial z^2}\\right)$$\n\n$$ \\lbrace \\sum_{i=0}^n i^3 = \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$","slug":"math-jax-test","published":1,"updated":"2024-12-23T08:02:31.000Z","comments":1,"layout":"post","photos":[],"_id":"cm7t4ahdv000bu7jk3tdw4dws","content":"<h2 id=\"行内公式与块公式\"><a href=\"#行内公式与块公式\" class=\"headerlink\" title=\"行内公式与块公式\"></a>行内公式与块公式</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$f(x)=ax+b$ 这是行内公式.</span><br><span class=\"line\">$$f(x)=ax+b$$ 这是块公式，单独占一行.</span><br></pre></td></tr></table></figure>\n<p>$f(x)&#x3D;ax+b$ 这是行内公式.<br>$$f(x)&#x3D;ax+b$$ 这是块公式，单独占一行.</p>\n<h2 id=\"上标与下标\"><a href=\"#上标与下标\" class=\"headerlink\" title=\"上标与下标\"></a>上标与下标</h2><p>使用 ^ 表示上标，使用 _ 表示下标，如果上下标的内容多于一个字符，可以使用大括号括起来：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$f(x) = a<span class=\"emphasis\">_1x^n + a_</span>2x^&#123;n-1&#125; + a<span class=\"emphasis\">_3x^&#123;n-2&#125;$$</span></span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$f(x) &#x3D; a_1x^n + a_2x^{n-1} + a_3x^{n-2}$$</p>\n<p>如果左右两边都有上下标可以使用 \\sideset 语法：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\sideset&#123;^n<span class=\"emphasis\">_k&#125;&#123;^x_</span>y&#125;a$$</span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$\\sideset{^n_k}{^x_y}a$$</p>\n<h2 id=\"括号\"><a href=\"#括号\" class=\"headerlink\" title=\"括号\"></a>括号</h2><p>在 markdown 语法中，, $, {, }, _都是有特殊含义的，所以需要加\\转义。小括号与方括号可以使用原始的() [] 大括号需要转义\\也可以使用\\lbrace和 \\rbrace</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$ \\\\&#123;x<span class=\"emphasis\">*y\\\\&#125; $$  --注：大括号在markdown中已有一次转义，在mathjax中还要再转一次，所以为两个斜杠</span></span><br><span class=\"line\"><span class=\"emphasis\"></span></span><br><span class=\"line\"><span class=\"emphasis\">$$\\lbrace x*</span>y \\rbrace$$</span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$ \\{x*y\\} $$</p>\n<p>$$\\lbrace x*y \\rbrace$$</p>\n<p>原始符号不会随着公式大小自动缩放，需要使用 \\left 和 \\right 来实现自动缩放：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\left \\lbrace \\sum<span class=\"emphasis\">_&#123;i=0&#125;^n i^3 = \\frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125; \\right \\rbrace$$</span></span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$\\left \\lbrace \\sum_{i&#x3D;0}^n i^3 &#x3D; \\frac{(n^2+n)(n+6)}{9} \\right \\rbrace$$</p>\n<p>不使用\\left 和 \\right的效果：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$ \\lbrace \\sum<span class=\"emphasis\">_&#123;i=0&#125;^n i^3 = \\frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125;  \\rbrace$$</span></span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$ \\lbrace \\sum_{i&#x3D;0}^n i^3 &#x3D; \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$</p>\n<h2 id=\"分数与开方\"><a href=\"#分数与开方\" class=\"headerlink\" title=\"分数与开方\"></a>分数与开方</h2><p>可以使用\\frac 或者 \\over 实现分数的显示：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$\\frac xy$</span><br><span class=\"line\">$ x+3 \\over y+5 $</span><br></pre></td></tr></table></figure>\n\n<p>显示为 $\\frac xy$ 和 $ x+3 \\over y+5 $</p>\n<p>开方使用\\sqrt:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\sqrt&#123;x^5&#125; $</span><br><span class=\"line\">$ \\sqrt[3]&#123;\\frac xy&#125; $</span><br></pre></td></tr></table></figure>\n\n<p>显示为 $ \\sqrt{x^5} $ 和 $ \\sqrt[3]{\\frac xy} $</p>\n<h2 id=\"求和与积分\"><a href=\"#求和与积分\" class=\"headerlink\" title=\"求和与积分\"></a>求和与积分</h2><p>求和使用\\sum,可加上下标，积分使用\\int可加上下限，双重积分用\\iint</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\sum<span class=\"emphasis\">_&#123;i=0&#125;^n $</span></span><br><span class=\"line\"><span class=\"emphasis\">$ \\int_</span>1^\\infty $</span><br><span class=\"line\">$ \\iint<span class=\"emphasis\">_1^\\infty $</span></span><br></pre></td></tr></table></figure>\n\n<p>显示为 $ \\sum_{i&#x3D;0}^n $ 和 $ \\int_1^\\infty $ 以及 $ \\iint_1^\\infty $</p>\n<h2 id=\"极限\"><a href=\"#极限\" class=\"headerlink\" title=\"极限\"></a>极限</h2><p>极限使用\\lim:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\lim<span class=\"emphasis\">_&#123;x \\to 0&#125; $</span></span><br></pre></td></tr></table></figure>\n\n<p>显示为: $ \\lim_{x \\to 0} $</p>\n<h2 id=\"表格与矩阵\"><a href=\"#表格与矩阵\" class=\"headerlink\" title=\"表格与矩阵\"></a>表格与矩阵</h2><p>表格样式lcr表示居中，|加入一条竖线，\\hline表示行间横线，列之间用&amp;分隔，行之间用\\分隔：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class=\"line\">n &amp; \\text&#123;Left&#125; &amp; \\text&#123;Center&#125; &amp; \\text&#123;Right&#125; \\\\\\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">1 &amp; 1.97 &amp; 5 &amp; 12 \\\\\\\\</span><br><span class=\"line\">2 &amp; -11 &amp; 19 &amp; -80 \\\\\\\\</span><br><span class=\"line\">3 &amp; 70 &amp; 209 &amp; 1+i \\\\\\\\</span><br><span class=\"line\">\\end&#123;array&#125;$$</span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$\\begin{array}{c|lcr}<br>n &amp; \\text{Left} &amp; \\text{Center} &amp; \\text{Right} \\\\<br>\\hline<br>1 &amp; 1.97 &amp; 5 &amp; 12 \\\\<br>2 &amp; -11 &amp; 19 &amp; -80 \\\\<br>3 &amp; 70 &amp; 209 &amp; 1+i \\\\<br>\\end{array}$$</p>\n<h2 id=\"矩阵\"><a href=\"#矩阵\" class=\"headerlink\" title=\"矩阵\"></a>矩阵</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\left[</span><br><span class=\"line\">\\begin&#123;matrix&#125;</span><br><span class=\"line\">V<span class=\"emphasis\">_A \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">V_</span>B \\\\\\\\</span><br><span class=\"line\">V<span class=\"emphasis\">_C \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">\\end&#123;matrix&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\">\\right] =</span></span><br><span class=\"line\"><span class=\"emphasis\">\\left[</span></span><br><span class=\"line\"><span class=\"emphasis\">\\begin&#123;matrix&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\">1 &amp; 0 &amp; L \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">-cosψ &amp; sinψ &amp; L \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">-cosψ &amp; -sinψ &amp; L</span></span><br><span class=\"line\"><span class=\"emphasis\">\\end&#123;matrix&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\">\\right]</span></span><br><span class=\"line\"><span class=\"emphasis\">\\left[</span></span><br><span class=\"line\"><span class=\"emphasis\">\\begin&#123;matrix&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\">V_</span>x \\\\\\\\</span><br><span class=\"line\">V<span class=\"emphasis\">_y \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">W \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">\\end&#123;matrix&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\">\\right] $$</span></span><br></pre></td></tr></table></figure>\n\n<p>显示效果:</p>\n<p>$$\\left[<br>\\begin{matrix}<br>V_A \\\\<br>V_B \\\\<br>V_C \\\\<br>\\end{matrix}<br>\\right] &#x3D;<br>\\left[<br>\\begin{matrix}<br>1 &amp; 0 &amp; L \\\\<br>-cosψ &amp; sinψ &amp; L \\\\<br>-cosψ &amp; -sinψ &amp; L<br>\\end{matrix}<br>\\right]<br>\\left[<br>\\begin{matrix}<br>V_x \\\\<br>V_y \\\\<br>W \\\\<br>\\end{matrix}<br>\\right] $$</p>\n<hr>\n\n<p>综合测试：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\frac&#123;\\partial u&#125;&#123;\\partial t&#125;</span><br><span class=\"line\">= h^2 \\left( \\frac&#123;\\partial^2 u&#125;&#123;\\partial x^2&#125; +</span><br><span class=\"line\">\\frac&#123;\\partial^2 u&#125;&#123;\\partial y^2&#125; +</span><br><span class=\"line\">\\frac&#123;\\partial^2 u&#125;&#123;\\partial z^2&#125;\\right)$$</span><br><span class=\"line\"></span><br><span class=\"line\">$$ \\lbrace \\sum<span class=\"emphasis\">_&#123;i=0&#125;^n i^3 = \\frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125;  \\rbrace$$</span></span><br></pre></td></tr></table></figure>\n<p>显示效果:</p>\n<p>$$\\frac{\\partial u}{\\partial t}<br>&#x3D; h^2 \\left( \\frac{\\partial^2 u}{\\partial x^2} +<br>\\frac{\\partial^2 u}{\\partial y^2} +<br>\\frac{\\partial^2 u}{\\partial z^2}\\right)$$</p>\n<p>$$ \\lbrace \\sum_{i&#x3D;0}^n i^3 &#x3D; \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$</p>\n","more":"<h2 id=\"行内公式与块公式\"><a href=\"#行内公式与块公式\" class=\"headerlink\" title=\"行内公式与块公式\"></a>行内公式与块公式</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$f(x)=ax+b$ 这是行内公式.</span><br><span class=\"line\">$$f(x)=ax+b$$ 这是块公式，单独占一行.</span><br></pre></td></tr></table></figure>\n<p>$f(x)&#x3D;ax+b$ 这是行内公式.<br>$$f(x)&#x3D;ax+b$$ 这是块公式，单独占一行.</p>\n<h2 id=\"上标与下标\"><a href=\"#上标与下标\" class=\"headerlink\" title=\"上标与下标\"></a>上标与下标</h2><p>使用 ^ 表示上标，使用 _ 表示下标，如果上下标的内容多于一个字符，可以使用大括号括起来：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$f(x) = a<span class=\"emphasis\">_1x^n + a_</span>2x^&#123;n-1&#125; + a<span class=\"emphasis\">_3x^&#123;n-2&#125;$$</span></span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$f(x) &#x3D; a_1x^n + a_2x^{n-1} + a_3x^{n-2}$$</p>\n<p>如果左右两边都有上下标可以使用 \\sideset 语法：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\sideset&#123;^n<span class=\"emphasis\">_k&#125;&#123;^x_</span>y&#125;a$$</span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$\\sideset{^n_k}{^x_y}a$$</p>\n<h2 id=\"括号\"><a href=\"#括号\" class=\"headerlink\" title=\"括号\"></a>括号</h2><p>在 markdown 语法中，, $, {, }, _都是有特殊含义的，所以需要加\\转义。小括号与方括号可以使用原始的() [] 大括号需要转义\\也可以使用\\lbrace和 \\rbrace</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$ \\\\&#123;x<span class=\"emphasis\">*y\\\\&#125; $$  --注：大括号在markdown中已有一次转义，在mathjax中还要再转一次，所以为两个斜杠</span></span><br><span class=\"line\"><span class=\"emphasis\"></span></span><br><span class=\"line\"><span class=\"emphasis\">$$\\lbrace x*</span>y \\rbrace$$</span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$ \\{x*y\\} $$</p>\n<p>$$\\lbrace x*y \\rbrace$$</p>\n<p>原始符号不会随着公式大小自动缩放，需要使用 \\left 和 \\right 来实现自动缩放：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\left \\lbrace \\sum<span class=\"emphasis\">_&#123;i=0&#125;^n i^3 = \\frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125; \\right \\rbrace$$</span></span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$\\left \\lbrace \\sum_{i&#x3D;0}^n i^3 &#x3D; \\frac{(n^2+n)(n+6)}{9} \\right \\rbrace$$</p>\n<p>不使用\\left 和 \\right的效果：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$ \\lbrace \\sum<span class=\"emphasis\">_&#123;i=0&#125;^n i^3 = \\frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125;  \\rbrace$$</span></span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$ \\lbrace \\sum_{i&#x3D;0}^n i^3 &#x3D; \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$</p>\n<h2 id=\"分数与开方\"><a href=\"#分数与开方\" class=\"headerlink\" title=\"分数与开方\"></a>分数与开方</h2><p>可以使用\\frac 或者 \\over 实现分数的显示：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$\\frac xy$</span><br><span class=\"line\">$ x+3 \\over y+5 $</span><br></pre></td></tr></table></figure>\n\n<p>显示为 $\\frac xy$ 和 $ x+3 \\over y+5 $</p>\n<p>开方使用\\sqrt:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\sqrt&#123;x^5&#125; $</span><br><span class=\"line\">$ \\sqrt[3]&#123;\\frac xy&#125; $</span><br></pre></td></tr></table></figure>\n\n<p>显示为 $ \\sqrt{x^5} $ 和 $ \\sqrt[3]{\\frac xy} $</p>\n<h2 id=\"求和与积分\"><a href=\"#求和与积分\" class=\"headerlink\" title=\"求和与积分\"></a>求和与积分</h2><p>求和使用\\sum,可加上下标，积分使用\\int可加上下限，双重积分用\\iint</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\sum<span class=\"emphasis\">_&#123;i=0&#125;^n $</span></span><br><span class=\"line\"><span class=\"emphasis\">$ \\int_</span>1^\\infty $</span><br><span class=\"line\">$ \\iint<span class=\"emphasis\">_1^\\infty $</span></span><br></pre></td></tr></table></figure>\n\n<p>显示为 $ \\sum_{i&#x3D;0}^n $ 和 $ \\int_1^\\infty $ 以及 $ \\iint_1^\\infty $</p>\n<h2 id=\"极限\"><a href=\"#极限\" class=\"headerlink\" title=\"极限\"></a>极限</h2><p>极限使用\\lim:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ \\lim<span class=\"emphasis\">_&#123;x \\to 0&#125; $</span></span><br></pre></td></tr></table></figure>\n\n<p>显示为: $ \\lim_{x \\to 0} $</p>\n<h2 id=\"表格与矩阵\"><a href=\"#表格与矩阵\" class=\"headerlink\" title=\"表格与矩阵\"></a>表格与矩阵</h2><p>表格样式lcr表示居中，|加入一条竖线，\\hline表示行间横线，列之间用&amp;分隔，行之间用\\分隔：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\begin&#123;array&#125;&#123;c|lcr&#125;</span><br><span class=\"line\">n &amp; \\text&#123;Left&#125; &amp; \\text&#123;Center&#125; &amp; \\text&#123;Right&#125; \\\\\\\\</span><br><span class=\"line\">\\hline</span><br><span class=\"line\">1 &amp; 1.97 &amp; 5 &amp; 12 \\\\\\\\</span><br><span class=\"line\">2 &amp; -11 &amp; 19 &amp; -80 \\\\\\\\</span><br><span class=\"line\">3 &amp; 70 &amp; 209 &amp; 1+i \\\\\\\\</span><br><span class=\"line\">\\end&#123;array&#125;$$</span><br></pre></td></tr></table></figure>\n\n<p>显示效果：</p>\n<p>$$\\begin{array}{c|lcr}<br>n &amp; \\text{Left} &amp; \\text{Center} &amp; \\text{Right} \\\\<br>\\hline<br>1 &amp; 1.97 &amp; 5 &amp; 12 \\\\<br>2 &amp; -11 &amp; 19 &amp; -80 \\\\<br>3 &amp; 70 &amp; 209 &amp; 1+i \\\\<br>\\end{array}$$</p>\n<h2 id=\"矩阵\"><a href=\"#矩阵\" class=\"headerlink\" title=\"矩阵\"></a>矩阵</h2><figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\left[</span><br><span class=\"line\">\\begin&#123;matrix&#125;</span><br><span class=\"line\">V<span class=\"emphasis\">_A \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">V_</span>B \\\\\\\\</span><br><span class=\"line\">V<span class=\"emphasis\">_C \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">\\end&#123;matrix&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\">\\right] =</span></span><br><span class=\"line\"><span class=\"emphasis\">\\left[</span></span><br><span class=\"line\"><span class=\"emphasis\">\\begin&#123;matrix&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\">1 &amp; 0 &amp; L \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">-cosψ &amp; sinψ &amp; L \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">-cosψ &amp; -sinψ &amp; L</span></span><br><span class=\"line\"><span class=\"emphasis\">\\end&#123;matrix&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\">\\right]</span></span><br><span class=\"line\"><span class=\"emphasis\">\\left[</span></span><br><span class=\"line\"><span class=\"emphasis\">\\begin&#123;matrix&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\">V_</span>x \\\\\\\\</span><br><span class=\"line\">V<span class=\"emphasis\">_y \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">W \\\\\\\\</span></span><br><span class=\"line\"><span class=\"emphasis\">\\end&#123;matrix&#125;</span></span><br><span class=\"line\"><span class=\"emphasis\">\\right] $$</span></span><br></pre></td></tr></table></figure>\n\n<p>显示效果:</p>\n<p>$$\\left[<br>\\begin{matrix}<br>V_A \\\\<br>V_B \\\\<br>V_C \\\\<br>\\end{matrix}<br>\\right] &#x3D;<br>\\left[<br>\\begin{matrix}<br>1 &amp; 0 &amp; L \\\\<br>-cosψ &amp; sinψ &amp; L \\\\<br>-cosψ &amp; -sinψ &amp; L<br>\\end{matrix}<br>\\right]<br>\\left[<br>\\begin{matrix}<br>V_x \\\\<br>V_y \\\\<br>W \\\\<br>\\end{matrix}<br>\\right] $$</p>\n<hr>\n\n<p>综合测试：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$$\\frac&#123;\\partial u&#125;&#123;\\partial t&#125;</span><br><span class=\"line\">= h^2 \\left( \\frac&#123;\\partial^2 u&#125;&#123;\\partial x^2&#125; +</span><br><span class=\"line\">\\frac&#123;\\partial^2 u&#125;&#123;\\partial y^2&#125; +</span><br><span class=\"line\">\\frac&#123;\\partial^2 u&#125;&#123;\\partial z^2&#125;\\right)$$</span><br><span class=\"line\"></span><br><span class=\"line\">$$ \\lbrace \\sum<span class=\"emphasis\">_&#123;i=0&#125;^n i^3 = \\frac&#123;(n^2+n)(n+6)&#125;&#123;9&#125;  \\rbrace$$</span></span><br></pre></td></tr></table></figure>\n<p>显示效果:</p>\n<p>$$\\frac{\\partial u}{\\partial t}<br>&#x3D; h^2 \\left( \\frac{\\partial^2 u}{\\partial x^2} +<br>\\frac{\\partial^2 u}{\\partial y^2} +<br>\\frac{\\partial^2 u}{\\partial z^2}\\right)$$</p>\n<p>$$ \\lbrace \\sum_{i&#x3D;0}^n i^3 &#x3D; \\frac{(n^2+n)(n+6)}{9}  \\rbrace$$</p>\n"},{"title":"MySQL 面试题总结","date":"2024-04-15T14:29:37.000Z","_content":"\n## 如何定位慢查询？\n\n- 开源工具\n    - 调试工具：Arthas\n    - 运维工具：Promethus、Skywalking\n- MySQL自带慢日志\n\n```Ini\n# 开启MySQL慢日志查询开关\nslow_query_log=1\n# 设置慢日志时间为2s\nlong_query_time=2\n# 慢日志位置\n# /var/lib/mysql/localhost-slow.log\n```\n\n## 一条SQL语句执行很慢，如何分析？\n\n可以使用`EXPLAIN`或者`DESC`命令获取MySQL如何执行SELECT语句信息\n\n- possible_keys 当前sql可能会使用到的索引\n- key 当前sql实际命中的索引\n- key_len 索引占用的大小\n- Extra 额外的优化建议\n\n    `Using where; Using Index`查找使用了索引，需要的数据都在索引列中能找到，不需要回表查询\n\n    `Using index condition`查找使用了索引，但是需要回表查询数据\n- type 这条sql的连接的类型，性能由好到差为NULL、system、const、eq_ref、ref、range、index、all\n    - system 查询系统的表\n    - const 根据主键查询\n    - eq_ref 根据主键或者唯一索引\n    - ref 索引查询\n    - range 范围查询\n    - index 索引树扫描\n    - all 全表扫描\n\n## 什么是索引？\n\n- 索引（index）是帮助MySQL高效获取数据的数据结构（有序）\n- 提高数据的检索效率，减低数据库的IO成本（不需要全表扫描）\n- 通过索引列对数据进行排序，降低数据排序的成本，降低了CPU的消耗\n\n## B树与B+树对比？\n\nMySQL的InnoDB引擎采用的B+树的数据结构来存储索引\n\n- 阶数更多，路径更短\n- 磁盘读写代价B+树更低，非叶子节点只存储指针，叶子阶段存储数据\n- B+树便于扫库和区间查询，叶子节点是一个双向链表\n\n## 什么是聚簇索引什么是非聚簇索引？\n\n- 聚簇索引（聚集索引）：数据与索引放到一起，B+树的叶子节点保存了整行数据，有且只有一个\n- 非聚簇索引（二级索引）：数据与索引分开存储，B+树的叶子节点保存的是对应的主键，可以有多个\n\n## 什么是回表查询？\n\n通过二级索引找到对应的主键值，到聚集索引中查找整行数据，这个过程就是回表\n\n## 什么是覆盖索引？\n\n覆盖索引是指查询使用了索引，返回的列，必须在索引中全部找到\n\n- 使用id查询，直接走聚集索引查询，一次索引扫描，直接返回数据，性能高\n- 如果返回的列中没有创建索引，有可能出发回表查询，尽量避免使用select *\n\n## MySQL超大分页怎么处理？\n\n**问题：**在数据量较大时，使用limit分页查询，需要对数据进行排序，效率低\n\n**解决方案：**覆盖索引+子查询\n\n## 索引创建的原则有哪些？\n\n- 数据量较大，且查询比较频繁的表（10w+）\n- 常作为查询、排序、分组的字段\n- 字段内容区分度高\n- 内容较长，使用前缀索引\n- 尽量使用联合索引（覆盖索引）\n- 要控制索引的数量\n- 如果索引列不能存储NULL值，在创建表的时候用NOT NULL约束\n\n## 什么情况下索引会失效？\n\n- 违反最左前缀法则\n- 范围查询右边的列，不能使用索引\n- 不能在索引列进行运算操作\n- 字符串条件不佳单引号（类型转换）\n- 以%开头的Like模糊查询\n\n## SQL优化方法？\n\n- 表设计优化（参考阿里开发手册《嵩山版》）\n    - 设置合适的数值（tinyint、int、bigint）\n    - 设置合适的字符串类型（char、varchar），char定长效率高，varchar可变长、效率低\n- SQL语句优化\n    - SELECT 语句必须指明字段名称\n    - SQL避免索引失效写法\n    - 尽量使用union all 代替 union ，union会多一次过滤，效率低\n    - 避免在where子句中进行表达式操作\n    - join能用inner join 就不用left join，right join，如必须使用，以小表驱动大表，内连接会动两个表进行优化，优先把小表放到外面，把大表放到里面。left join或right join，不会重新调整顺序\n- 主从复制、读写分离\n- 分库分表\n\n## 事务的特性是什么？\n\n- 原子性（**A**tomicity）事务是不可分割的最小操作单元，要么全部成功，要么全部失败\n- 一致性（**C**onsistency）事务完成时，必须使的所有的数据都保持一致的状态\n- 隔离性（**I**solation）数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行\n- 持久性（**D**urability）事务一旦提交或者回滚，它对数据库的数据改变是永久的\n\n## 并发事务带来什么问题？\n\n- 脏读：一个事务读取到另外一个事务还没有提交的数据\n- 不可重复读：一个事务先后读取同一条数据，但两次读取的结果不同\n- 幻读：一个事务按照条件查询数据时，没有对应的数据行，但是在插入时，又发现这行数据已经存在，好像出现了“幻觉”\n\n## MySQL的隔离级别？\n\n默认为REPEATABLE READ 可重复读取 （无法解决 幻读）\n\n- READ UNCOMMITTED 未提交读  （无法解决 脏读、不可重复读、幻读）\n- READ COMMITTED 读已提交 （无法解决 不可重复 幻读）\n- REPEATABLE READ 可重复读取 （无法解决 幻读）\n- SERIALIZABLE 串行化\n\n## undo log 和 redo log的区别？\n\n- redo log: 记录的是数据页的物理变化，服务宕机可以用来同步数据\n- undo log: 记录的是逻辑日志，当事务回滚时，通过逆操作恢复原来的数据\n- redo log 保证了事务的持久性，undo log 保证了事务的原子性和一致性\n\n## 事务的隔离性是如何保证的？\n\n**锁机制：**\n  - 数据库系统使用锁来控制并发访问，确保事务在读取和修改数据时的一致性。\n  - 行级锁和表级锁是常见的锁类型，用于控制对数据行或表的访问。\n\n**MVCC：**MySQL中的多版本并发控制。指维护一个数据的多个版本，使得读写操作没有冲突\n  - 隐藏字段：\n      - trx_id（事务id）,记录每一次操作的事务id，是自增的\n      - roll_pointer（回滚指针），指向上一个版本的事务版本记录地址\n  - undo log:\n      - 回滚日志，存储老版日志\n      - 版本链：多个事务并行操作某一行记录，记录不同事务修改数据的版本，通过roll_pointer指针形成一个链表\n  - readView 解决的是一个事务查询选择版本的问题\n      - 根据readView匹配规则和当前事务id判断应该访问哪个版本的数据\n      - 不同的隔离级别快照读是不一样的，最终访问的结果也不同\n          - RC：每一次执行快照读时生成ReadView\n          - RR：仅在事务中第一次执行快照读时生成ReadView，后续复用\n\n## MySQL 主从同步原理\n\nMySQL主从复制的核心就是二进制日志binlog（DDL（数据定义语言）语句和DML（数据操纵）语句）\n\n1. 主库在事务提交时，会把数据变更记录在二进制文件binlog中\n2. 从库读取主库的二进制文件binlog，写入从库的中继日志Relay Log\n3. 从库重做中继日志中的时间，将改变反映到它自己的数据\n\n## MySQL分库分表\n\n**拆分前提：**\n\n- 请求数多或者业务累积大\n- 单表1000w+或者20G+\n\n**拆分策略：**\n\n- 水平分库，将一个库的数据拆分到多个库中，解决海量数据存储和高并发问题\n- 水平分表，解决单表存储和性能问题\n- 垂直分库，根据业务进行拆分，高并发下提高磁盘IO和网络连接数\n- 垂直分表，冷热数据分离，多表互不影响\n\n> 水平拆分需要用到 `sharding-sphere`或者`mycat`等中间件，用于解决分布式事务一致性问题、跨节点关联查询、挂节点分页、主键避重等问题。","source":"_posts/mysql-interview.md","raw":"---\ntitle: MySQL 面试题总结\ndate: 2024-04-15 22:29:37\ntags:\n- 面试\ncategories:\n- 面试\n---\n\n## 如何定位慢查询？\n\n- 开源工具\n    - 调试工具：Arthas\n    - 运维工具：Promethus、Skywalking\n- MySQL自带慢日志\n\n```Ini\n# 开启MySQL慢日志查询开关\nslow_query_log=1\n# 设置慢日志时间为2s\nlong_query_time=2\n# 慢日志位置\n# /var/lib/mysql/localhost-slow.log\n```\n\n## 一条SQL语句执行很慢，如何分析？\n\n可以使用`EXPLAIN`或者`DESC`命令获取MySQL如何执行SELECT语句信息\n\n- possible_keys 当前sql可能会使用到的索引\n- key 当前sql实际命中的索引\n- key_len 索引占用的大小\n- Extra 额外的优化建议\n\n    `Using where; Using Index`查找使用了索引，需要的数据都在索引列中能找到，不需要回表查询\n\n    `Using index condition`查找使用了索引，但是需要回表查询数据\n- type 这条sql的连接的类型，性能由好到差为NULL、system、const、eq_ref、ref、range、index、all\n    - system 查询系统的表\n    - const 根据主键查询\n    - eq_ref 根据主键或者唯一索引\n    - ref 索引查询\n    - range 范围查询\n    - index 索引树扫描\n    - all 全表扫描\n\n## 什么是索引？\n\n- 索引（index）是帮助MySQL高效获取数据的数据结构（有序）\n- 提高数据的检索效率，减低数据库的IO成本（不需要全表扫描）\n- 通过索引列对数据进行排序，降低数据排序的成本，降低了CPU的消耗\n\n## B树与B+树对比？\n\nMySQL的InnoDB引擎采用的B+树的数据结构来存储索引\n\n- 阶数更多，路径更短\n- 磁盘读写代价B+树更低，非叶子节点只存储指针，叶子阶段存储数据\n- B+树便于扫库和区间查询，叶子节点是一个双向链表\n\n## 什么是聚簇索引什么是非聚簇索引？\n\n- 聚簇索引（聚集索引）：数据与索引放到一起，B+树的叶子节点保存了整行数据，有且只有一个\n- 非聚簇索引（二级索引）：数据与索引分开存储，B+树的叶子节点保存的是对应的主键，可以有多个\n\n## 什么是回表查询？\n\n通过二级索引找到对应的主键值，到聚集索引中查找整行数据，这个过程就是回表\n\n## 什么是覆盖索引？\n\n覆盖索引是指查询使用了索引，返回的列，必须在索引中全部找到\n\n- 使用id查询，直接走聚集索引查询，一次索引扫描，直接返回数据，性能高\n- 如果返回的列中没有创建索引，有可能出发回表查询，尽量避免使用select *\n\n## MySQL超大分页怎么处理？\n\n**问题：**在数据量较大时，使用limit分页查询，需要对数据进行排序，效率低\n\n**解决方案：**覆盖索引+子查询\n\n## 索引创建的原则有哪些？\n\n- 数据量较大，且查询比较频繁的表（10w+）\n- 常作为查询、排序、分组的字段\n- 字段内容区分度高\n- 内容较长，使用前缀索引\n- 尽量使用联合索引（覆盖索引）\n- 要控制索引的数量\n- 如果索引列不能存储NULL值，在创建表的时候用NOT NULL约束\n\n## 什么情况下索引会失效？\n\n- 违反最左前缀法则\n- 范围查询右边的列，不能使用索引\n- 不能在索引列进行运算操作\n- 字符串条件不佳单引号（类型转换）\n- 以%开头的Like模糊查询\n\n## SQL优化方法？\n\n- 表设计优化（参考阿里开发手册《嵩山版》）\n    - 设置合适的数值（tinyint、int、bigint）\n    - 设置合适的字符串类型（char、varchar），char定长效率高，varchar可变长、效率低\n- SQL语句优化\n    - SELECT 语句必须指明字段名称\n    - SQL避免索引失效写法\n    - 尽量使用union all 代替 union ，union会多一次过滤，效率低\n    - 避免在where子句中进行表达式操作\n    - join能用inner join 就不用left join，right join，如必须使用，以小表驱动大表，内连接会动两个表进行优化，优先把小表放到外面，把大表放到里面。left join或right join，不会重新调整顺序\n- 主从复制、读写分离\n- 分库分表\n\n## 事务的特性是什么？\n\n- 原子性（**A**tomicity）事务是不可分割的最小操作单元，要么全部成功，要么全部失败\n- 一致性（**C**onsistency）事务完成时，必须使的所有的数据都保持一致的状态\n- 隔离性（**I**solation）数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行\n- 持久性（**D**urability）事务一旦提交或者回滚，它对数据库的数据改变是永久的\n\n## 并发事务带来什么问题？\n\n- 脏读：一个事务读取到另外一个事务还没有提交的数据\n- 不可重复读：一个事务先后读取同一条数据，但两次读取的结果不同\n- 幻读：一个事务按照条件查询数据时，没有对应的数据行，但是在插入时，又发现这行数据已经存在，好像出现了“幻觉”\n\n## MySQL的隔离级别？\n\n默认为REPEATABLE READ 可重复读取 （无法解决 幻读）\n\n- READ UNCOMMITTED 未提交读  （无法解决 脏读、不可重复读、幻读）\n- READ COMMITTED 读已提交 （无法解决 不可重复 幻读）\n- REPEATABLE READ 可重复读取 （无法解决 幻读）\n- SERIALIZABLE 串行化\n\n## undo log 和 redo log的区别？\n\n- redo log: 记录的是数据页的物理变化，服务宕机可以用来同步数据\n- undo log: 记录的是逻辑日志，当事务回滚时，通过逆操作恢复原来的数据\n- redo log 保证了事务的持久性，undo log 保证了事务的原子性和一致性\n\n## 事务的隔离性是如何保证的？\n\n**锁机制：**\n  - 数据库系统使用锁来控制并发访问，确保事务在读取和修改数据时的一致性。\n  - 行级锁和表级锁是常见的锁类型，用于控制对数据行或表的访问。\n\n**MVCC：**MySQL中的多版本并发控制。指维护一个数据的多个版本，使得读写操作没有冲突\n  - 隐藏字段：\n      - trx_id（事务id）,记录每一次操作的事务id，是自增的\n      - roll_pointer（回滚指针），指向上一个版本的事务版本记录地址\n  - undo log:\n      - 回滚日志，存储老版日志\n      - 版本链：多个事务并行操作某一行记录，记录不同事务修改数据的版本，通过roll_pointer指针形成一个链表\n  - readView 解决的是一个事务查询选择版本的问题\n      - 根据readView匹配规则和当前事务id判断应该访问哪个版本的数据\n      - 不同的隔离级别快照读是不一样的，最终访问的结果也不同\n          - RC：每一次执行快照读时生成ReadView\n          - RR：仅在事务中第一次执行快照读时生成ReadView，后续复用\n\n## MySQL 主从同步原理\n\nMySQL主从复制的核心就是二进制日志binlog（DDL（数据定义语言）语句和DML（数据操纵）语句）\n\n1. 主库在事务提交时，会把数据变更记录在二进制文件binlog中\n2. 从库读取主库的二进制文件binlog，写入从库的中继日志Relay Log\n3. 从库重做中继日志中的时间，将改变反映到它自己的数据\n\n## MySQL分库分表\n\n**拆分前提：**\n\n- 请求数多或者业务累积大\n- 单表1000w+或者20G+\n\n**拆分策略：**\n\n- 水平分库，将一个库的数据拆分到多个库中，解决海量数据存储和高并发问题\n- 水平分表，解决单表存储和性能问题\n- 垂直分库，根据业务进行拆分，高并发下提高磁盘IO和网络连接数\n- 垂直分表，冷热数据分离，多表互不影响\n\n> 水平拆分需要用到 `sharding-sphere`或者`mycat`等中间件，用于解决分布式事务一致性问题、跨节点关联查询、挂节点分页、主键避重等问题。","slug":"mysql-interview","published":1,"updated":"2024-12-23T08:02:31.000Z","comments":1,"layout":"post","photos":[],"_id":"cm7t4ahdw000fu7jk64udfs62","content":"<h2 id=\"如何定位慢查询？\"><a href=\"#如何定位慢查询？\" class=\"headerlink\" title=\"如何定位慢查询？\"></a>如何定位慢查询？</h2><ul>\n<li>开源工具<ul>\n<li>调试工具：Arthas</li>\n<li>运维工具：Promethus、Skywalking</li>\n</ul>\n</li>\n<li>MySQL自带慢日志</li>\n</ul>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 开启MySQL慢日志查询开关</span></span><br><span class=\"line\"><span class=\"attr\">slow_query_log</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\"># 设置慢日志时间为2s</span></span><br><span class=\"line\"><span class=\"attr\">long_query_time</span>=<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\"># 慢日志位置</span></span><br><span class=\"line\"><span class=\"comment\"># /var/lib/mysql/localhost-slow.log</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一条SQL语句执行很慢，如何分析？\"><a href=\"#一条SQL语句执行很慢，如何分析？\" class=\"headerlink\" title=\"一条SQL语句执行很慢，如何分析？\"></a>一条SQL语句执行很慢，如何分析？</h2><p>可以使用<code>EXPLAIN</code>或者<code>DESC</code>命令获取MySQL如何执行SELECT语句信息</p>\n<ul>\n<li><p>possible_keys 当前sql可能会使用到的索引</p>\n</li>\n<li><p>key 当前sql实际命中的索引</p>\n</li>\n<li><p>key_len 索引占用的大小</p>\n</li>\n<li><p>Extra 额外的优化建议</p>\n<p>  <code>Using where; Using Index</code>查找使用了索引，需要的数据都在索引列中能找到，不需要回表查询</p>\n<p>  <code>Using index condition</code>查找使用了索引，但是需要回表查询数据</p>\n</li>\n<li><p>type 这条sql的连接的类型，性能由好到差为NULL、system、const、eq_ref、ref、range、index、all</p>\n<ul>\n<li>system 查询系统的表</li>\n<li>const 根据主键查询</li>\n<li>eq_ref 根据主键或者唯一索引</li>\n<li>ref 索引查询</li>\n<li>range 范围查询</li>\n<li>index 索引树扫描</li>\n<li>all 全表扫描</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"什么是索引？\"><a href=\"#什么是索引？\" class=\"headerlink\" title=\"什么是索引？\"></a>什么是索引？</h2><ul>\n<li>索引（index）是帮助MySQL高效获取数据的数据结构（有序）</li>\n<li>提高数据的检索效率，减低数据库的IO成本（不需要全表扫描）</li>\n<li>通过索引列对数据进行排序，降低数据排序的成本，降低了CPU的消耗</li>\n</ul>\n<h2 id=\"B树与B-树对比？\"><a href=\"#B树与B-树对比？\" class=\"headerlink\" title=\"B树与B+树对比？\"></a>B树与B+树对比？</h2><p>MySQL的InnoDB引擎采用的B+树的数据结构来存储索引</p>\n<ul>\n<li>阶数更多，路径更短</li>\n<li>磁盘读写代价B+树更低，非叶子节点只存储指针，叶子阶段存储数据</li>\n<li>B+树便于扫库和区间查询，叶子节点是一个双向链表</li>\n</ul>\n<h2 id=\"什么是聚簇索引什么是非聚簇索引？\"><a href=\"#什么是聚簇索引什么是非聚簇索引？\" class=\"headerlink\" title=\"什么是聚簇索引什么是非聚簇索引？\"></a>什么是聚簇索引什么是非聚簇索引？</h2><ul>\n<li>聚簇索引（聚集索引）：数据与索引放到一起，B+树的叶子节点保存了整行数据，有且只有一个</li>\n<li>非聚簇索引（二级索引）：数据与索引分开存储，B+树的叶子节点保存的是对应的主键，可以有多个</li>\n</ul>\n<h2 id=\"什么是回表查询？\"><a href=\"#什么是回表查询？\" class=\"headerlink\" title=\"什么是回表查询？\"></a>什么是回表查询？</h2><p>通过二级索引找到对应的主键值，到聚集索引中查找整行数据，这个过程就是回表</p>\n<h2 id=\"什么是覆盖索引？\"><a href=\"#什么是覆盖索引？\" class=\"headerlink\" title=\"什么是覆盖索引？\"></a>什么是覆盖索引？</h2><p>覆盖索引是指查询使用了索引，返回的列，必须在索引中全部找到</p>\n<ul>\n<li>使用id查询，直接走聚集索引查询，一次索引扫描，直接返回数据，性能高</li>\n<li>如果返回的列中没有创建索引，有可能出发回表查询，尽量避免使用select *</li>\n</ul>\n<h2 id=\"MySQL超大分页怎么处理？\"><a href=\"#MySQL超大分页怎么处理？\" class=\"headerlink\" title=\"MySQL超大分页怎么处理？\"></a>MySQL超大分页怎么处理？</h2><p><strong>问题：</strong>在数据量较大时，使用limit分页查询，需要对数据进行排序，效率低</p>\n<p><strong>解决方案：</strong>覆盖索引+子查询</p>\n<h2 id=\"索引创建的原则有哪些？\"><a href=\"#索引创建的原则有哪些？\" class=\"headerlink\" title=\"索引创建的原则有哪些？\"></a>索引创建的原则有哪些？</h2><ul>\n<li>数据量较大，且查询比较频繁的表（10w+）</li>\n<li>常作为查询、排序、分组的字段</li>\n<li>字段内容区分度高</li>\n<li>内容较长，使用前缀索引</li>\n<li>尽量使用联合索引（覆盖索引）</li>\n<li>要控制索引的数量</li>\n<li>如果索引列不能存储NULL值，在创建表的时候用NOT NULL约束</li>\n</ul>\n<h2 id=\"什么情况下索引会失效？\"><a href=\"#什么情况下索引会失效？\" class=\"headerlink\" title=\"什么情况下索引会失效？\"></a>什么情况下索引会失效？</h2><ul>\n<li>违反最左前缀法则</li>\n<li>范围查询右边的列，不能使用索引</li>\n<li>不能在索引列进行运算操作</li>\n<li>字符串条件不佳单引号（类型转换）</li>\n<li>以%开头的Like模糊查询</li>\n</ul>\n<h2 id=\"SQL优化方法？\"><a href=\"#SQL优化方法？\" class=\"headerlink\" title=\"SQL优化方法？\"></a>SQL优化方法？</h2><ul>\n<li>表设计优化（参考阿里开发手册《嵩山版》）<ul>\n<li>设置合适的数值（tinyint、int、bigint）</li>\n<li>设置合适的字符串类型（char、varchar），char定长效率高，varchar可变长、效率低</li>\n</ul>\n</li>\n<li>SQL语句优化<ul>\n<li>SELECT 语句必须指明字段名称</li>\n<li>SQL避免索引失效写法</li>\n<li>尽量使用union all 代替 union ，union会多一次过滤，效率低</li>\n<li>避免在where子句中进行表达式操作</li>\n<li>join能用inner join 就不用left join，right join，如必须使用，以小表驱动大表，内连接会动两个表进行优化，优先把小表放到外面，把大表放到里面。left join或right join，不会重新调整顺序</li>\n</ul>\n</li>\n<li>主从复制、读写分离</li>\n<li>分库分表</li>\n</ul>\n<h2 id=\"事务的特性是什么？\"><a href=\"#事务的特性是什么？\" class=\"headerlink\" title=\"事务的特性是什么？\"></a>事务的特性是什么？</h2><ul>\n<li>原子性（<strong>A</strong>tomicity）事务是不可分割的最小操作单元，要么全部成功，要么全部失败</li>\n<li>一致性（<strong>C</strong>onsistency）事务完成时，必须使的所有的数据都保持一致的状态</li>\n<li>隔离性（<strong>I</strong>solation）数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</li>\n<li>持久性（<strong>D</strong>urability）事务一旦提交或者回滚，它对数据库的数据改变是永久的</li>\n</ul>\n<h2 id=\"并发事务带来什么问题？\"><a href=\"#并发事务带来什么问题？\" class=\"headerlink\" title=\"并发事务带来什么问题？\"></a>并发事务带来什么问题？</h2><ul>\n<li>脏读：一个事务读取到另外一个事务还没有提交的数据</li>\n<li>不可重复读：一个事务先后读取同一条数据，但两次读取的结果不同</li>\n<li>幻读：一个事务按照条件查询数据时，没有对应的数据行，但是在插入时，又发现这行数据已经存在，好像出现了“幻觉”</li>\n</ul>\n<h2 id=\"MySQL的隔离级别？\"><a href=\"#MySQL的隔离级别？\" class=\"headerlink\" title=\"MySQL的隔离级别？\"></a>MySQL的隔离级别？</h2><p>默认为REPEATABLE READ 可重复读取 （无法解决 幻读）</p>\n<ul>\n<li>READ UNCOMMITTED 未提交读  （无法解决 脏读、不可重复读、幻读）</li>\n<li>READ COMMITTED 读已提交 （无法解决 不可重复 幻读）</li>\n<li>REPEATABLE READ 可重复读取 （无法解决 幻读）</li>\n<li>SERIALIZABLE 串行化</li>\n</ul>\n<h2 id=\"undo-log-和-redo-log的区别？\"><a href=\"#undo-log-和-redo-log的区别？\" class=\"headerlink\" title=\"undo log 和 redo log的区别？\"></a>undo log 和 redo log的区别？</h2><ul>\n<li>redo log: 记录的是数据页的物理变化，服务宕机可以用来同步数据</li>\n<li>undo log: 记录的是逻辑日志，当事务回滚时，通过逆操作恢复原来的数据</li>\n<li>redo log 保证了事务的持久性，undo log 保证了事务的原子性和一致性</li>\n</ul>\n<h2 id=\"事务的隔离性是如何保证的？\"><a href=\"#事务的隔离性是如何保证的？\" class=\"headerlink\" title=\"事务的隔离性是如何保证的？\"></a>事务的隔离性是如何保证的？</h2><p><strong>锁机制：</strong></p>\n<ul>\n<li>数据库系统使用锁来控制并发访问，确保事务在读取和修改数据时的一致性。</li>\n<li>行级锁和表级锁是常见的锁类型，用于控制对数据行或表的访问。</li>\n</ul>\n<p><strong>MVCC：</strong>MySQL中的多版本并发控制。指维护一个数据的多个版本，使得读写操作没有冲突</p>\n<ul>\n<li>隐藏字段：<ul>\n<li>trx_id（事务id）,记录每一次操作的事务id，是自增的</li>\n<li>roll_pointer（回滚指针），指向上一个版本的事务版本记录地址</li>\n</ul>\n</li>\n<li>undo log:<ul>\n<li>回滚日志，存储老版日志</li>\n<li>版本链：多个事务并行操作某一行记录，记录不同事务修改数据的版本，通过roll_pointer指针形成一个链表</li>\n</ul>\n</li>\n<li>readView 解决的是一个事务查询选择版本的问题<ul>\n<li>根据readView匹配规则和当前事务id判断应该访问哪个版本的数据</li>\n<li>不同的隔离级别快照读是不一样的，最终访问的结果也不同<ul>\n<li>RC：每一次执行快照读时生成ReadView</li>\n<li>RR：仅在事务中第一次执行快照读时生成ReadView，后续复用</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"MySQL-主从同步原理\"><a href=\"#MySQL-主从同步原理\" class=\"headerlink\" title=\"MySQL 主从同步原理\"></a>MySQL 主从同步原理</h2><p>MySQL主从复制的核心就是二进制日志binlog（DDL（数据定义语言）语句和DML（数据操纵）语句）</p>\n<ol>\n<li>主库在事务提交时，会把数据变更记录在二进制文件binlog中</li>\n<li>从库读取主库的二进制文件binlog，写入从库的中继日志Relay Log</li>\n<li>从库重做中继日志中的时间，将改变反映到它自己的数据</li>\n</ol>\n<h2 id=\"MySQL分库分表\"><a href=\"#MySQL分库分表\" class=\"headerlink\" title=\"MySQL分库分表\"></a>MySQL分库分表</h2><p><strong>拆分前提：</strong></p>\n<ul>\n<li>请求数多或者业务累积大</li>\n<li>单表1000w+或者20G+</li>\n</ul>\n<p><strong>拆分策略：</strong></p>\n<ul>\n<li>水平分库，将一个库的数据拆分到多个库中，解决海量数据存储和高并发问题</li>\n<li>水平分表，解决单表存储和性能问题</li>\n<li>垂直分库，根据业务进行拆分，高并发下提高磁盘IO和网络连接数</li>\n<li>垂直分表，冷热数据分离，多表互不影响</li>\n</ul>\n<blockquote>\n<p>水平拆分需要用到 <code>sharding-sphere</code>或者<code>mycat</code>等中间件，用于解决分布式事务一致性问题、跨节点关联查询、挂节点分页、主键避重等问题。</p>\n</blockquote>\n","excerpt":"","more":"<h2 id=\"如何定位慢查询？\"><a href=\"#如何定位慢查询？\" class=\"headerlink\" title=\"如何定位慢查询？\"></a>如何定位慢查询？</h2><ul>\n<li>开源工具<ul>\n<li>调试工具：Arthas</li>\n<li>运维工具：Promethus、Skywalking</li>\n</ul>\n</li>\n<li>MySQL自带慢日志</li>\n</ul>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 开启MySQL慢日志查询开关</span></span><br><span class=\"line\"><span class=\"attr\">slow_query_log</span>=<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"comment\"># 设置慢日志时间为2s</span></span><br><span class=\"line\"><span class=\"attr\">long_query_time</span>=<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\"># 慢日志位置</span></span><br><span class=\"line\"><span class=\"comment\"># /var/lib/mysql/localhost-slow.log</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"一条SQL语句执行很慢，如何分析？\"><a href=\"#一条SQL语句执行很慢，如何分析？\" class=\"headerlink\" title=\"一条SQL语句执行很慢，如何分析？\"></a>一条SQL语句执行很慢，如何分析？</h2><p>可以使用<code>EXPLAIN</code>或者<code>DESC</code>命令获取MySQL如何执行SELECT语句信息</p>\n<ul>\n<li><p>possible_keys 当前sql可能会使用到的索引</p>\n</li>\n<li><p>key 当前sql实际命中的索引</p>\n</li>\n<li><p>key_len 索引占用的大小</p>\n</li>\n<li><p>Extra 额外的优化建议</p>\n<p>  <code>Using where; Using Index</code>查找使用了索引，需要的数据都在索引列中能找到，不需要回表查询</p>\n<p>  <code>Using index condition</code>查找使用了索引，但是需要回表查询数据</p>\n</li>\n<li><p>type 这条sql的连接的类型，性能由好到差为NULL、system、const、eq_ref、ref、range、index、all</p>\n<ul>\n<li>system 查询系统的表</li>\n<li>const 根据主键查询</li>\n<li>eq_ref 根据主键或者唯一索引</li>\n<li>ref 索引查询</li>\n<li>range 范围查询</li>\n<li>index 索引树扫描</li>\n<li>all 全表扫描</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"什么是索引？\"><a href=\"#什么是索引？\" class=\"headerlink\" title=\"什么是索引？\"></a>什么是索引？</h2><ul>\n<li>索引（index）是帮助MySQL高效获取数据的数据结构（有序）</li>\n<li>提高数据的检索效率，减低数据库的IO成本（不需要全表扫描）</li>\n<li>通过索引列对数据进行排序，降低数据排序的成本，降低了CPU的消耗</li>\n</ul>\n<h2 id=\"B树与B-树对比？\"><a href=\"#B树与B-树对比？\" class=\"headerlink\" title=\"B树与B+树对比？\"></a>B树与B+树对比？</h2><p>MySQL的InnoDB引擎采用的B+树的数据结构来存储索引</p>\n<ul>\n<li>阶数更多，路径更短</li>\n<li>磁盘读写代价B+树更低，非叶子节点只存储指针，叶子阶段存储数据</li>\n<li>B+树便于扫库和区间查询，叶子节点是一个双向链表</li>\n</ul>\n<h2 id=\"什么是聚簇索引什么是非聚簇索引？\"><a href=\"#什么是聚簇索引什么是非聚簇索引？\" class=\"headerlink\" title=\"什么是聚簇索引什么是非聚簇索引？\"></a>什么是聚簇索引什么是非聚簇索引？</h2><ul>\n<li>聚簇索引（聚集索引）：数据与索引放到一起，B+树的叶子节点保存了整行数据，有且只有一个</li>\n<li>非聚簇索引（二级索引）：数据与索引分开存储，B+树的叶子节点保存的是对应的主键，可以有多个</li>\n</ul>\n<h2 id=\"什么是回表查询？\"><a href=\"#什么是回表查询？\" class=\"headerlink\" title=\"什么是回表查询？\"></a>什么是回表查询？</h2><p>通过二级索引找到对应的主键值，到聚集索引中查找整行数据，这个过程就是回表</p>\n<h2 id=\"什么是覆盖索引？\"><a href=\"#什么是覆盖索引？\" class=\"headerlink\" title=\"什么是覆盖索引？\"></a>什么是覆盖索引？</h2><p>覆盖索引是指查询使用了索引，返回的列，必须在索引中全部找到</p>\n<ul>\n<li>使用id查询，直接走聚集索引查询，一次索引扫描，直接返回数据，性能高</li>\n<li>如果返回的列中没有创建索引，有可能出发回表查询，尽量避免使用select *</li>\n</ul>\n<h2 id=\"MySQL超大分页怎么处理？\"><a href=\"#MySQL超大分页怎么处理？\" class=\"headerlink\" title=\"MySQL超大分页怎么处理？\"></a>MySQL超大分页怎么处理？</h2><p><strong>问题：</strong>在数据量较大时，使用limit分页查询，需要对数据进行排序，效率低</p>\n<p><strong>解决方案：</strong>覆盖索引+子查询</p>\n<h2 id=\"索引创建的原则有哪些？\"><a href=\"#索引创建的原则有哪些？\" class=\"headerlink\" title=\"索引创建的原则有哪些？\"></a>索引创建的原则有哪些？</h2><ul>\n<li>数据量较大，且查询比较频繁的表（10w+）</li>\n<li>常作为查询、排序、分组的字段</li>\n<li>字段内容区分度高</li>\n<li>内容较长，使用前缀索引</li>\n<li>尽量使用联合索引（覆盖索引）</li>\n<li>要控制索引的数量</li>\n<li>如果索引列不能存储NULL值，在创建表的时候用NOT NULL约束</li>\n</ul>\n<h2 id=\"什么情况下索引会失效？\"><a href=\"#什么情况下索引会失效？\" class=\"headerlink\" title=\"什么情况下索引会失效？\"></a>什么情况下索引会失效？</h2><ul>\n<li>违反最左前缀法则</li>\n<li>范围查询右边的列，不能使用索引</li>\n<li>不能在索引列进行运算操作</li>\n<li>字符串条件不佳单引号（类型转换）</li>\n<li>以%开头的Like模糊查询</li>\n</ul>\n<h2 id=\"SQL优化方法？\"><a href=\"#SQL优化方法？\" class=\"headerlink\" title=\"SQL优化方法？\"></a>SQL优化方法？</h2><ul>\n<li>表设计优化（参考阿里开发手册《嵩山版》）<ul>\n<li>设置合适的数值（tinyint、int、bigint）</li>\n<li>设置合适的字符串类型（char、varchar），char定长效率高，varchar可变长、效率低</li>\n</ul>\n</li>\n<li>SQL语句优化<ul>\n<li>SELECT 语句必须指明字段名称</li>\n<li>SQL避免索引失效写法</li>\n<li>尽量使用union all 代替 union ，union会多一次过滤，效率低</li>\n<li>避免在where子句中进行表达式操作</li>\n<li>join能用inner join 就不用left join，right join，如必须使用，以小表驱动大表，内连接会动两个表进行优化，优先把小表放到外面，把大表放到里面。left join或right join，不会重新调整顺序</li>\n</ul>\n</li>\n<li>主从复制、读写分离</li>\n<li>分库分表</li>\n</ul>\n<h2 id=\"事务的特性是什么？\"><a href=\"#事务的特性是什么？\" class=\"headerlink\" title=\"事务的特性是什么？\"></a>事务的特性是什么？</h2><ul>\n<li>原子性（<strong>A</strong>tomicity）事务是不可分割的最小操作单元，要么全部成功，要么全部失败</li>\n<li>一致性（<strong>C</strong>onsistency）事务完成时，必须使的所有的数据都保持一致的状态</li>\n<li>隔离性（<strong>I</strong>solation）数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</li>\n<li>持久性（<strong>D</strong>urability）事务一旦提交或者回滚，它对数据库的数据改变是永久的</li>\n</ul>\n<h2 id=\"并发事务带来什么问题？\"><a href=\"#并发事务带来什么问题？\" class=\"headerlink\" title=\"并发事务带来什么问题？\"></a>并发事务带来什么问题？</h2><ul>\n<li>脏读：一个事务读取到另外一个事务还没有提交的数据</li>\n<li>不可重复读：一个事务先后读取同一条数据，但两次读取的结果不同</li>\n<li>幻读：一个事务按照条件查询数据时，没有对应的数据行，但是在插入时，又发现这行数据已经存在，好像出现了“幻觉”</li>\n</ul>\n<h2 id=\"MySQL的隔离级别？\"><a href=\"#MySQL的隔离级别？\" class=\"headerlink\" title=\"MySQL的隔离级别？\"></a>MySQL的隔离级别？</h2><p>默认为REPEATABLE READ 可重复读取 （无法解决 幻读）</p>\n<ul>\n<li>READ UNCOMMITTED 未提交读  （无法解决 脏读、不可重复读、幻读）</li>\n<li>READ COMMITTED 读已提交 （无法解决 不可重复 幻读）</li>\n<li>REPEATABLE READ 可重复读取 （无法解决 幻读）</li>\n<li>SERIALIZABLE 串行化</li>\n</ul>\n<h2 id=\"undo-log-和-redo-log的区别？\"><a href=\"#undo-log-和-redo-log的区别？\" class=\"headerlink\" title=\"undo log 和 redo log的区别？\"></a>undo log 和 redo log的区别？</h2><ul>\n<li>redo log: 记录的是数据页的物理变化，服务宕机可以用来同步数据</li>\n<li>undo log: 记录的是逻辑日志，当事务回滚时，通过逆操作恢复原来的数据</li>\n<li>redo log 保证了事务的持久性，undo log 保证了事务的原子性和一致性</li>\n</ul>\n<h2 id=\"事务的隔离性是如何保证的？\"><a href=\"#事务的隔离性是如何保证的？\" class=\"headerlink\" title=\"事务的隔离性是如何保证的？\"></a>事务的隔离性是如何保证的？</h2><p><strong>锁机制：</strong></p>\n<ul>\n<li>数据库系统使用锁来控制并发访问，确保事务在读取和修改数据时的一致性。</li>\n<li>行级锁和表级锁是常见的锁类型，用于控制对数据行或表的访问。</li>\n</ul>\n<p><strong>MVCC：</strong>MySQL中的多版本并发控制。指维护一个数据的多个版本，使得读写操作没有冲突</p>\n<ul>\n<li>隐藏字段：<ul>\n<li>trx_id（事务id）,记录每一次操作的事务id，是自增的</li>\n<li>roll_pointer（回滚指针），指向上一个版本的事务版本记录地址</li>\n</ul>\n</li>\n<li>undo log:<ul>\n<li>回滚日志，存储老版日志</li>\n<li>版本链：多个事务并行操作某一行记录，记录不同事务修改数据的版本，通过roll_pointer指针形成一个链表</li>\n</ul>\n</li>\n<li>readView 解决的是一个事务查询选择版本的问题<ul>\n<li>根据readView匹配规则和当前事务id判断应该访问哪个版本的数据</li>\n<li>不同的隔离级别快照读是不一样的，最终访问的结果也不同<ul>\n<li>RC：每一次执行快照读时生成ReadView</li>\n<li>RR：仅在事务中第一次执行快照读时生成ReadView，后续复用</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"MySQL-主从同步原理\"><a href=\"#MySQL-主从同步原理\" class=\"headerlink\" title=\"MySQL 主从同步原理\"></a>MySQL 主从同步原理</h2><p>MySQL主从复制的核心就是二进制日志binlog（DDL（数据定义语言）语句和DML（数据操纵）语句）</p>\n<ol>\n<li>主库在事务提交时，会把数据变更记录在二进制文件binlog中</li>\n<li>从库读取主库的二进制文件binlog，写入从库的中继日志Relay Log</li>\n<li>从库重做中继日志中的时间，将改变反映到它自己的数据</li>\n</ol>\n<h2 id=\"MySQL分库分表\"><a href=\"#MySQL分库分表\" class=\"headerlink\" title=\"MySQL分库分表\"></a>MySQL分库分表</h2><p><strong>拆分前提：</strong></p>\n<ul>\n<li>请求数多或者业务累积大</li>\n<li>单表1000w+或者20G+</li>\n</ul>\n<p><strong>拆分策略：</strong></p>\n<ul>\n<li>水平分库，将一个库的数据拆分到多个库中，解决海量数据存储和高并发问题</li>\n<li>水平分表，解决单表存储和性能问题</li>\n<li>垂直分库，根据业务进行拆分，高并发下提高磁盘IO和网络连接数</li>\n<li>垂直分表，冷热数据分离，多表互不影响</li>\n</ul>\n<blockquote>\n<p>水平拆分需要用到 <code>sharding-sphere</code>或者<code>mycat</code>等中间件，用于解决分布式事务一致性问题、跨节点关联查询、挂节点分页、主键避重等问题。</p>\n</blockquote>\n"},{"title":"Python 离线部署","date":"2024-03-26T15:47:44.000Z","_content":"\n### 环境准备\n\n以下步骤需要在有网络的环境下操作\n\n### 1. 下载Python 3.7.9 压缩文件\n\n下载[Windows x86-64 embeddable zip file](https://www.python.org/ftp/python/3.7.9/python-3.7.9-embed-amd64.zip)并解压到`.runtime`目录下\n\n### 2. 安装PIP\n\n下载安装pip脚本，在浏览器打开下面地址，复制内容到`get-pip.py`\n\nhttps://bootstrap.pypa.io/get-pip.py\n\n在`.runtime`目录下执行如下命令\n\n```bash\npython.exe get-pip.py\n```\n\n修改`python37._pth`文件，将`import site`取消注释，完整文件内容如下\n\n```python\npython37.zip\n.\n\n# Uncomment to run site.main() automatically\nimport site\n```\n\n### 3. 下载项目所需依赖\n\n将`.runtime`文件夹复制到项目根目录\n\n在项目根目录下执行如下命令\n\n```bash\n.runtime\\Python37\\python.exe .runtime\\Python37\\Scripts\\pip3.exe download -d .runtime\\Packages\\ -r requirements.txt\n```\n\n到此，python离线环境已准备完毕\n\n### 离线部署\n\n以下步骤在离线环境下操作\n\n### 1. 安装依赖\n\n```bash\n.runtime\\Python37\\python.exe .runtime\\Python37\\Scripts\\pip3.exe install --no-index --find-links=.runtime\\Packages\\ -r requirements.txt\n```\n\n### 2. 启动项目\n\n```bash\n.runtime\\Python37\\python.exe app.py\n```","source":"_posts/python-offline-deploy.md","raw":"---\ntitle: Python 离线部署\ndate: 2024-03-26 23:47:44\ntags:\n- python\ncategories:\n- python\n---\n\n### 环境准备\n\n以下步骤需要在有网络的环境下操作\n\n### 1. 下载Python 3.7.9 压缩文件\n\n下载[Windows x86-64 embeddable zip file](https://www.python.org/ftp/python/3.7.9/python-3.7.9-embed-amd64.zip)并解压到`.runtime`目录下\n\n### 2. 安装PIP\n\n下载安装pip脚本，在浏览器打开下面地址，复制内容到`get-pip.py`\n\nhttps://bootstrap.pypa.io/get-pip.py\n\n在`.runtime`目录下执行如下命令\n\n```bash\npython.exe get-pip.py\n```\n\n修改`python37._pth`文件，将`import site`取消注释，完整文件内容如下\n\n```python\npython37.zip\n.\n\n# Uncomment to run site.main() automatically\nimport site\n```\n\n### 3. 下载项目所需依赖\n\n将`.runtime`文件夹复制到项目根目录\n\n在项目根目录下执行如下命令\n\n```bash\n.runtime\\Python37\\python.exe .runtime\\Python37\\Scripts\\pip3.exe download -d .runtime\\Packages\\ -r requirements.txt\n```\n\n到此，python离线环境已准备完毕\n\n### 离线部署\n\n以下步骤在离线环境下操作\n\n### 1. 安装依赖\n\n```bash\n.runtime\\Python37\\python.exe .runtime\\Python37\\Scripts\\pip3.exe install --no-index --find-links=.runtime\\Packages\\ -r requirements.txt\n```\n\n### 2. 启动项目\n\n```bash\n.runtime\\Python37\\python.exe app.py\n```","slug":"python-offline-deploy","published":1,"updated":"2024-12-23T08:02:31.000Z","comments":1,"layout":"post","photos":[],"_id":"cm7t4ahdw000gu7jkhcdr0qtc","content":"<h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><p>以下步骤需要在有网络的环境下操作</p>\n<h3 id=\"1-下载Python-3-7-9-压缩文件\"><a href=\"#1-下载Python-3-7-9-压缩文件\" class=\"headerlink\" title=\"1. 下载Python 3.7.9 压缩文件\"></a>1. 下载Python 3.7.9 压缩文件</h3><p>下载<a href=\"https://www.python.org/ftp/python/3.7.9/python-3.7.9-embed-amd64.zip\">Windows x86-64 embeddable zip file</a>并解压到<code>.runtime</code>目录下</p>\n<h3 id=\"2-安装PIP\"><a href=\"#2-安装PIP\" class=\"headerlink\" title=\"2. 安装PIP\"></a>2. 安装PIP</h3><p>下载安装pip脚本，在浏览器打开下面地址，复制内容到<code>get-pip.py</code></p>\n<p><a href=\"https://bootstrap.pypa.io/get-pip.py\">https://bootstrap.pypa.io/get-pip.py</a></p>\n<p>在<code>.runtime</code>目录下执行如下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python.exe get-pip.py</span><br></pre></td></tr></table></figure>\n\n<p>修改<code>python37._pth</code>文件，将<code>import site</code>取消注释，完整文件内容如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python37.<span class=\"built_in\">zip</span></span><br><span class=\"line\">.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to run site.main() automatically</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> site</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-下载项目所需依赖\"><a href=\"#3-下载项目所需依赖\" class=\"headerlink\" title=\"3. 下载项目所需依赖\"></a>3. 下载项目所需依赖</h3><p>将<code>.runtime</code>文件夹复制到项目根目录</p>\n<p>在项目根目录下执行如下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.runtime\\Python37\\python.exe .runtime\\Python37\\Scripts\\pip3.exe download -d .runtime\\Packages\\ -r requirements.txt</span><br></pre></td></tr></table></figure>\n\n<p>到此，python离线环境已准备完毕</p>\n<h3 id=\"离线部署\"><a href=\"#离线部署\" class=\"headerlink\" title=\"离线部署\"></a>离线部署</h3><p>以下步骤在离线环境下操作</p>\n<h3 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1. 安装依赖\"></a>1. 安装依赖</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.runtime\\Python37\\python.exe .runtime\\Python37\\Scripts\\pip3.exe install --no-index --find-links=.runtime\\Packages\\ -r requirements.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-启动项目\"><a href=\"#2-启动项目\" class=\"headerlink\" title=\"2. 启动项目\"></a>2. 启动项目</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.runtime\\Python37\\python.exe app.py</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><p>以下步骤需要在有网络的环境下操作</p>\n<h3 id=\"1-下载Python-3-7-9-压缩文件\"><a href=\"#1-下载Python-3-7-9-压缩文件\" class=\"headerlink\" title=\"1. 下载Python 3.7.9 压缩文件\"></a>1. 下载Python 3.7.9 压缩文件</h3><p>下载<a href=\"https://www.python.org/ftp/python/3.7.9/python-3.7.9-embed-amd64.zip\">Windows x86-64 embeddable zip file</a>并解压到<code>.runtime</code>目录下</p>\n<h3 id=\"2-安装PIP\"><a href=\"#2-安装PIP\" class=\"headerlink\" title=\"2. 安装PIP\"></a>2. 安装PIP</h3><p>下载安装pip脚本，在浏览器打开下面地址，复制内容到<code>get-pip.py</code></p>\n<p><a href=\"https://bootstrap.pypa.io/get-pip.py\">https://bootstrap.pypa.io/get-pip.py</a></p>\n<p>在<code>.runtime</code>目录下执行如下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python.exe get-pip.py</span><br></pre></td></tr></table></figure>\n\n<p>修改<code>python37._pth</code>文件，将<code>import site</code>取消注释，完整文件内容如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python37.<span class=\"built_in\">zip</span></span><br><span class=\"line\">.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Uncomment to run site.main() automatically</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> site</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-下载项目所需依赖\"><a href=\"#3-下载项目所需依赖\" class=\"headerlink\" title=\"3. 下载项目所需依赖\"></a>3. 下载项目所需依赖</h3><p>将<code>.runtime</code>文件夹复制到项目根目录</p>\n<p>在项目根目录下执行如下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.runtime\\Python37\\python.exe .runtime\\Python37\\Scripts\\pip3.exe download -d .runtime\\Packages\\ -r requirements.txt</span><br></pre></td></tr></table></figure>\n\n<p>到此，python离线环境已准备完毕</p>\n<h3 id=\"离线部署\"><a href=\"#离线部署\" class=\"headerlink\" title=\"离线部署\"></a>离线部署</h3><p>以下步骤在离线环境下操作</p>\n<h3 id=\"1-安装依赖\"><a href=\"#1-安装依赖\" class=\"headerlink\" title=\"1. 安装依赖\"></a>1. 安装依赖</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.runtime\\Python37\\python.exe .runtime\\Python37\\Scripts\\pip3.exe install --no-index --find-links=.runtime\\Packages\\ -r requirements.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-启动项目\"><a href=\"#2-启动项目\" class=\"headerlink\" title=\"2. 启动项目\"></a>2. 启动项目</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.runtime\\Python37\\python.exe app.py</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cm7t27pkv000453jkhhwf5m6w","category_id":"cm7t27pkw000653jk195s8945","_id":"cm7t27pkx000a53jkb2ln69vj"},{"post_id":"cm7t4ahdq0000u7jk3ek852vw","category_id":"cm7t4ahds0002u7jk7xav9uka","_id":"cm7t4ahdv000cu7jk6lebdnrz"},{"post_id":"cm7t4ahdr0001u7jk72jc3saz","category_id":"cm7t4ahdu0007u7jkanut7513","_id":"cm7t4ahdw000iu7jkdybnchp8"},{"post_id":"cm7t4ahdt0004u7jk1lni6u9j","category_id":"cm7t4ahdu0007u7jkanut7513","_id":"cm7t4ahdx000lu7jkbgnsc42h"},{"post_id":"cm7t4ahdt0005u7jkb7yagzgi","category_id":"cm7t4ahdw000hu7jk6gc712zh","_id":"cm7t4ahdx000qu7jk1ww3fanr"},{"post_id":"cm7t4ahdu0006u7jk0i1p8y2g","category_id":"cm7t4ahdu0007u7jkanut7513","_id":"cm7t4ahdx000tu7jkgldn1pmu"},{"post_id":"cm7t4ahdu000au7jkd3807i9v","category_id":"cm7t4ahdw000hu7jk6gc712zh","_id":"cm7t4ahdx000xu7jk0wbr3gnz"},{"post_id":"cm7t4ahdv000bu7jk3tdw4dws","category_id":"cm7t4ahdw000hu7jk6gc712zh","_id":"cm7t4ahdx0011u7jkev0d999g"},{"post_id":"cm7t4ahdw000fu7jk64udfs62","category_id":"cm7t4ahdx000wu7jk73v39s91","_id":"cm7t4ahdy0015u7jkb0thgxtk"},{"post_id":"cm7t4ahdw000gu7jkhcdr0qtc","category_id":"cm7t4ahdx0012u7jkc5u2c29u","_id":"cm7t4ahdy0018u7jk1zd57pp0"}],"PostTag":[{"post_id":"cm7t27pkv000453jkhhwf5m6w","tag_id":"cm7t27pkw000753jkc0bsg15z","_id":"cm7t27pkx000953jk9xlwd8if"},{"post_id":"cm7t4ahdq0000u7jk3ek852vw","tag_id":"cm7t4ahdt0003u7jk0dzv5sx4","_id":"cm7t4ahdu0009u7jk7lbu5yvn"},{"post_id":"cm7t4ahdr0001u7jk72jc3saz","tag_id":"cm7t4ahdu0008u7jk1l6l7nzv","_id":"cm7t4ahdw000ku7jkfg7p3mpo"},{"post_id":"cm7t4ahdr0001u7jk72jc3saz","tag_id":"cm7t4ahdv000eu7jk7e9n8y1h","_id":"cm7t4ahdx000mu7jk1uhvbyp4"},{"post_id":"cm7t4ahdt0004u7jk1lni6u9j","tag_id":"cm7t4ahdw000ju7jk04v6hela","_id":"cm7t4ahdx000vu7jkejav5urq"},{"post_id":"cm7t4ahdt0004u7jk1lni6u9j","tag_id":"cm7t4ahdx000ou7jk87c7ajx3","_id":"cm7t4ahdx000yu7jkceij26s5"},{"post_id":"cm7t4ahdt0004u7jk1lni6u9j","tag_id":"cm7t4ahdx000ru7jk2a3fertv","_id":"cm7t4ahdx0010u7jk78d7f5xh"},{"post_id":"cm7t4ahdt0005u7jkb7yagzgi","tag_id":"cm7t4ahdx000uu7jk5pj6eaf7","_id":"cm7t4ahdx0013u7jkhlq15or6"},{"post_id":"cm7t4ahdu0006u7jk0i1p8y2g","tag_id":"cm7t4ahdx000zu7jkca8wfvs9","_id":"cm7t4ahdy0017u7jkaxqo7a5m"},{"post_id":"cm7t4ahdu0006u7jk0i1p8y2g","tag_id":"cm7t4ahdx0014u7jk9kk5fnm0","_id":"cm7t4ahdy0019u7jkb2xidaup"},{"post_id":"cm7t4ahdu000au7jkd3807i9v","tag_id":"cm7t4ahdx000uu7jk5pj6eaf7","_id":"cm7t4ahdy001bu7jk521d4tcb"},{"post_id":"cm7t4ahdv000bu7jk3tdw4dws","tag_id":"cm7t4ahdx000uu7jk5pj6eaf7","_id":"cm7t4ahdy001du7jk3xom5gfn"},{"post_id":"cm7t4ahdw000fu7jk64udfs62","tag_id":"cm7t4ahdy001cu7jk2qr49jtj","_id":"cm7t4ahdy001fu7jk2c522yxz"},{"post_id":"cm7t4ahdw000gu7jkhcdr0qtc","tag_id":"cm7t4ahdy001eu7jk1mrjhz7z","_id":"cm7t4ahdy001gu7jkhi7mbpal"}],"Tag":[{"name":"Music","_id":"cm7t27pkw000753jkc0bsg15z"},{"name":"Web","_id":"cm7t4ahdt0003u7jk0dzv5sx4"},{"name":"centos","_id":"cm7t4ahdu0008u7jk1l6l7nzv"},{"name":"mirror","_id":"cm7t4ahdv000eu7jk7e9n8y1h"},{"name":"centos7","_id":"cm7t4ahdw000ju7jk04v6hela"},{"name":"glibc","_id":"cm7t4ahdx000ou7jk87c7ajx3"},{"name":"devops","_id":"cm7t4ahdx000ru7jk2a3fertv"},{"name":"Test","_id":"cm7t4ahdx000uu7jk5pj6eaf7"},{"name":"linux","_id":"cm7t4ahdx000zu7jkca8wfvs9"},{"name":"clash","_id":"cm7t4ahdx0014u7jk9kk5fnm0"},{"name":"面试","_id":"cm7t4ahdy001cu7jk2qr49jtj"},{"name":"python","_id":"cm7t4ahdy001eu7jk1mrjhz7z"}]}}