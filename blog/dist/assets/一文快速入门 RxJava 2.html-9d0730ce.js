import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as t,c as o,a as n,d as s,e as c,f as l}from"./app-51229bef.js";const u={},i={href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/adbc507fc3704fd8955aae739a433db2~tplv-k3u1fbpfcp-zoom-1.image",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,"希望对你有所帮助 🤣🤣",-1),r=l(`<h1 id="一、概述" tabindex="-1"><a class="header-anchor" href="#一、概述" aria-hidden="true">#</a> 一、概述</h1><p>在 RxJava 中，一个实现了 <code>Observer</code> 接口的对象可以订阅一个 <code>Observable</code> 类的实例。订阅者对 <code>Observable</code> 发射的任何数据或数据序列作出响应。这种模式简化了并发操作，因为它不需要阻塞等待 <code>Observable</code> 发射数据，而是创建了一个处于待命状态的观察者哨兵，哨兵在未来某个时刻响应 <code>Observable</code> 的通知。RxJava 提供了一套异步编程的 API，并且支持链式调用，所以使用 RxJava 编写的代码的逻辑会非常简洁</p><p>RxJava 有以下三个最基本的元素：</p><ol><li>被观察者（Observable）</li><li>观察者（Observer）</li><li>订阅（subscribe）</li></ol><p>创建被观察者</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>		<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;subscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;currentThread name: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建观察者</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>		<span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完成观察者与被观察者之间的订阅关系</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	 observable<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>observer<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以以链式调用的方式来完成订阅</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>		<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;subscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;currentThread name: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终的输出结果是一样的</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    onSubscribe
    subscribe
    currentThread name<span class="token operator">:</span> main
    onNext<span class="token operator">:</span> <span class="token number">1</span>
    onNext<span class="token operator">:</span> <span class="token number">2</span>
    onNext<span class="token operator">:</span> <span class="token number">3</span>
    onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>被观察者发送的事件类型有以下几种</p><table><thead><tr><th>事件种类</th><th>作用</th></tr></thead><tbody><tr><td>onNext()</td><td>发送该事件时，观察者会回调 onNext() 方法</td></tr><tr><td>onError()</td><td>发送该事件时，观察者会回调 onError() 方法，当发送该事件之后，其他事件将不会继续发送</td></tr><tr><td>onComplete()</td><td>发送该事件时，观察者会回调 onComplete() 方法，当发送该事件之后，其他事件将不会继续发送</td></tr></tbody></table><p>下面来讲解 RxJava 中各种常见的操作符</p><h1 id="二、创建操作符" tabindex="-1"><a class="header-anchor" href="#二、创建操作符" aria-hidden="true">#</a> 二、创建操作符</h1><h2 id="_1、create" tabindex="-1"><a class="header-anchor" href="#_1、create" aria-hidden="true">#</a> 1、create()</h2><p>用于创建一个 <code>Observable</code>。一个正确的 <code>Observable</code> 必须尝试调用观察者的 <code>onCompleted</code> 方法或者 <code>onError</code> 方法<strong>有且仅有一次</strong>，而且此后不能再调用<code>Observable</code> 的任何其它方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>		<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;subscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;currentThread name: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、just" tabindex="-1"><a class="header-anchor" href="#_2、just" aria-hidden="true">#</a> 2、just()</h2><p>创建一个 <code>Observable</code>并发送事件，发送的事件总数不可以超出十个</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>		<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    onSubscribe
    onNext<span class="token operator">:</span> <span class="token number">1</span>
    onNext<span class="token operator">:</span> <span class="token number">2</span>
    onNext<span class="token operator">:</span> <span class="token number">3</span>
    onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、fromarray" tabindex="-1"><a class="header-anchor" href="#_3、fromarray" aria-hidden="true">#</a> 3、fromArray</h2><p>和 <code>just()</code> 类似，但 <code>fromArray</code> 可以传入多于十个的变量，并且可以传入一个数组</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	    <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arrays <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Integer</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">fromArray</span><span class="token punctuation">(</span>arrays<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、fromcallable" tabindex="-1"><a class="header-anchor" href="#_4、fromcallable" aria-hidden="true">#</a> 4、fromCallable</h2><p>这里的 <code>Callable</code> 是指 <code>java.util.concurrent</code> 中的 <code>Callable</code>，<code>Callable</code> 和 <code>Runnable</code> 的用法基本一致，只是它包含一个返回值，这个结果值就是发给观察者的</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">fromCallable</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">100</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、fromfuture" tabindex="-1"><a class="header-anchor" href="#_5、fromfuture" aria-hidden="true">#</a> 5、fromFuture</h2><p>这里的 <code>Future</code> 是指 <code>java.util.concurrent</code> 中的 <code>Future</code>，<code>Future</code> 的作用是增加了 <code>cancel()</code> 等方法操作 <code>Callable</code>，它可以通过 <code>get()</code> 方法来获取 <code>Callable</code> 返回的值</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>		<span class="token keyword">final</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> futureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">12</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">fromFuture</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doOnSubscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Disposable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> disposable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                futureTask<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、fromiterable" tabindex="-1"><a class="header-anchor" href="#_6、fromiterable" aria-hidden="true">#</a> 6、fromIterable()</h2><p>用于发送一个 <code>List</code> 集合数据给观察者</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> integerList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        integerList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        integerList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        integerList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">fromIterable</span><span class="token punctuation">(</span>integerList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、defer" tabindex="-1"><a class="header-anchor" href="#_7、defer" aria-hidden="true">#</a> 7、defer()</h2><p><code>defer</code> 操作符会一直等待直到有观察者订阅它，然后它使用 <code>Observable</code> 工厂方法生成一个 <code>Observable</code>。它对每个观察者都这样做，因此尽管每个订阅者都以为自己订阅的是同一个 <code>Observable</code> ，实际上每个订阅者获取到的都是它们自己的单独的数据序列。在某些情况下，直到发生订阅时才生成 <code>Observable</code> 可以确保 <code>Observable</code> 包含最新的数据</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token comment">//全局变量</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> value <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>

	<span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable <span class="token operator">=</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">defer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ObservableSource</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">ObservableSource</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        value <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
        observable<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        value <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>
        observable<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    accept<span class="token operator">:</span> <span class="token number">200</span>
    accept<span class="token operator">:</span> <span class="token number">300</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>defer()</code> 操作符能使得每次订阅操作都创建被观察者，因此两次订阅操作会创建不同的被观察者对象，因此两次打印操作返回的值并不一样</p><h2 id="_8、timer" tabindex="-1"><a class="header-anchor" href="#_8、timer" aria-hidden="true">#</a> 8、timer()</h2><p>延迟指定时间后会发送一个大小为 <code>0L</code> 的值给观察者</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>       <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
           <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
               <span class="token annotation punctuation">@Override</span>
               <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>

               <span class="token punctuation">}</span>
           <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9、interval" tabindex="-1"><a class="header-anchor" href="#_9、interval" aria-hidden="true">#</a> 9、interval()</h2><p>每隔一段时间就发送一个事件，传递的值从 0 开始并不断增 1</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;value is: &quot;</span> <span class="token operator">+</span> aLong<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10、intervalrange" tabindex="-1"><a class="header-anchor" href="#_10、intervalrange" aria-hidden="true">#</a> 10、intervalRange()</h2><p>可以指定发送事件的开始值和数量，其他与 <code>interval()</code> 的功能一样</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>			<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">intervalRange</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext：&quot;</span> <span class="token operator">+</span> aLong<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>起始值从 2 开始递增，事件共传递三次，第一次事件在订阅后延迟 4 秒触发，之后每次延迟 5 秒</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">40.017</span> <span class="token number">17976</span><span class="token operator">-</span><span class="token number">17976</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">44.017</span> <span class="token number">17976</span><span class="token operator">-</span><span class="token number">17990</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext：<span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">49.017</span> <span class="token number">17976</span><span class="token operator">-</span><span class="token number">17990</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext：<span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">54.017</span> <span class="token number">17976</span><span class="token operator">-</span><span class="token number">17990</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext：<span class="token number">4</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">48</span><span class="token operator">:</span><span class="token number">54.017</span> <span class="token number">17976</span><span class="token operator">-</span><span class="token number">17990</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11、range" tabindex="-1"><a class="header-anchor" href="#_11、range" aria-hidden="true">#</a> 11、range()</h2><p>发送指定范围的事件序列</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>			<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;values is :&quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    values is <span class="token operator">:</span><span class="token number">2</span>
    values is <span class="token operator">:</span><span class="token number">3</span>
    values is <span class="token operator">:</span><span class="token number">4</span>
    values is <span class="token operator">:</span><span class="token number">5</span>
    values is <span class="token operator">:</span><span class="token number">6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_12、rangelong" tabindex="-1"><a class="header-anchor" href="#_12、rangelong" aria-hidden="true">#</a> 12、rangeLong()</h2><p>作用与 <code>range()</code> 一样，只是数据类型是 <code>Long</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>       		 <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">rangeLong</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;values is :&quot;</span> <span class="token operator">+</span> aLong<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13、empty-never-error" tabindex="-1"><a class="header-anchor" href="#_13、empty-never-error" aria-hidden="true">#</a> 13、empty() &amp; never() &amp; error()</h2><p><code>empty()</code> 直接发送 <code>onComplete()</code> 事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>		<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext: &quot;</span> <span class="token operator">+</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打印结果</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    onSubscribe
    onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>换成 <code>never()</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>onSubscribe
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>换成 <code>error()</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Throwable</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext: &quot;</span> <span class="token operator">+</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	onSubscribe
    onError<span class="token operator">:</span> <span class="token class-name">Hello</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="三、转换操作符" tabindex="-1"><a class="header-anchor" href="#三、转换操作符" aria-hidden="true">#</a> 三、转换操作符</h1><h2 id="_1、map" tabindex="-1"><a class="header-anchor" href="#_1、map" aria-hidden="true">#</a> 1、map()</h2><p><code>map()</code> 用于将被观察者发送的数据类型转变成其他的类型</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token string">&quot;I&#39;m &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">16.364</span> <span class="token number">18099</span><span class="token operator">-</span><span class="token number">18099</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">I</span>&#39;m <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">16.364</span> <span class="token number">18099</span><span class="token operator">-</span><span class="token number">18099</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">I</span>&#39;m <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">10</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">16.364</span> <span class="token number">18099</span><span class="token operator">-</span><span class="token number">18099</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">I</span>&#39;m <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、flatmap" tabindex="-1"><a class="header-anchor" href="#_2、flatmap" aria-hidden="true">#</a> 2、flatMap()</h2><p>用于将事件序列中的元素进行整合加工，返回一个新的被观察者</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> listArrayList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stringList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;A_&quot;</span> <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        listArrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stringList<span class="token punctuation">)</span><span class="token punctuation">;</span>

        stringList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stringList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;B_&quot;</span> <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        listArrayList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stringList<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">fromIterable</span><span class="token punctuation">(</span>listArrayList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">ObservableSource</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">ObservableSource</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringList1<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">fromIterable</span><span class="token punctuation">(</span>stringList1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;value is: &quot;</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">02</span><span class="token operator">:</span><span class="token number">47.246</span> <span class="token number">18230</span><span class="token operator">-</span><span class="token number">18230</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> value is<span class="token operator">:</span> <span class="token constant">A_0</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">02</span><span class="token operator">:</span><span class="token number">47.246</span> <span class="token number">18230</span><span class="token operator">-</span><span class="token number">18230</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> value is<span class="token operator">:</span> <span class="token constant">A_1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">02</span><span class="token operator">:</span><span class="token number">47.246</span> <span class="token number">18230</span><span class="token operator">-</span><span class="token number">18230</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> value is<span class="token operator">:</span> <span class="token constant">B_0</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">02</span><span class="token operator">:</span><span class="token number">47.246</span> <span class="token number">18230</span><span class="token operator">-</span><span class="token number">18230</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> value is<span class="token operator">:</span> <span class="token constant">B_1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、concatmap" tabindex="-1"><a class="header-anchor" href="#_3、concatmap" aria-hidden="true">#</a> 3、concatMap()</h2><p><code>concatMap()</code> 和 <code>flatMap()</code> 基本一样，只不过 <code>concatMap()</code> 转发出来的事件是有序的，而 <code>flatMap()</code> 是无序的</p><p>还是用 <code>flatMap()</code>的例子来看</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">fromIterable</span><span class="token punctuation">(</span>listArrayList<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">ObservableSource</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">ObservableSource</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringList1<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>stringList1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">fromIterable</span><span class="token punctuation">(</span>stringList1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">fromIterable</span><span class="token punctuation">(</span>stringList1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;value is: &quot;</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进行了一次延时操作，可以看到两次事件的发送顺序颠倒了</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">07</span><span class="token operator">:</span><span class="token number">30.753</span> <span class="token number">18702</span><span class="token operator">-</span><span class="token number">18702</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> value is<span class="token operator">:</span> <span class="token constant">B_0</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">07</span><span class="token operator">:</span><span class="token number">30.753</span> <span class="token number">18702</span><span class="token operator">-</span><span class="token number">18702</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> value is<span class="token operator">:</span> <span class="token constant">B_1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">07</span><span class="token operator">:</span><span class="token number">30.953</span> <span class="token number">18702</span><span class="token operator">-</span><span class="token number">18716</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> value is<span class="token operator">:</span> <span class="token constant">A_0</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">07</span><span class="token operator">:</span><span class="token number">30.953</span> <span class="token number">18702</span><span class="token operator">-</span><span class="token number">18716</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> value is<span class="token operator">:</span> <span class="token constant">A_1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>concatMap()</code> 则顺序将保持一致</p><h2 id="_4、buffer" tabindex="-1"><a class="header-anchor" href="#_4、buffer" aria-hidden="true">#</a> 4、buffer()</h2><p>从需要发送的事件当中获取指定数量的事件，并将这些事件放到缓冲区当中一并发出。<code>buffer</code> 有两个参数，参数一<code>count</code>用于指点缓冲区大小，参数二 <code>skip</code>用指定当缓冲区满了时，发送下一次事件序列的时候要跳过多少元素</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>			<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">buffer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> integers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;缓冲区大小： &quot;</span> <span class="token operator">+</span> integers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span> i <span class="token operator">:</span> integers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;元素： &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> onSubscribe
 缓冲区大小： <span class="token number">2</span>
 元素： <span class="token number">1</span>
 元素： <span class="token number">2</span>
 缓冲区大小： <span class="token number">2</span>
 元素： <span class="token number">3</span>
 元素： <span class="token number">4</span>
 缓冲区大小： <span class="token number">2</span>
 元素： <span class="token number">5</span>
 元素： <span class="token number">6</span>
 onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、groupby" tabindex="-1"><a class="header-anchor" href="#_5、groupby" aria-hidden="true">#</a> 5、groupBy()</h2><p>用于将数据进行分组，每个分组都会返回一个被观察者。<code>groupBy()</code> 方法的返回值用于指定分组名，每返回一个新值就代表会创建一个分组</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> 			<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>integer <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">return</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">return</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GroupedObservable</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">GroupedObservable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        observable<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token annotation punctuation">@Override</span>
                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;GroupedObservable onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>

                            <span class="token annotation punctuation">@Override</span>
                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;GroupedObservable onNext key :&quot;</span> <span class="token operator">+</span> observable<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;GroupedObservable onNext value :&quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>

                            <span class="token annotation punctuation">@Override</span>
                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;GroupedObservable onError&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>

                            <span class="token annotation punctuation">@Override</span>
                            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;GroupedObservable onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext key <span class="token operator">:</span>hello
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext value <span class="token operator">:</span><span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext key <span class="token operator">:</span>hello
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext value <span class="token operator">:</span><span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext key <span class="token operator">:</span>hello
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext value <span class="token operator">:</span><span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext key <span class="token operator">:</span>hi
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext value <span class="token operator">:</span><span class="token number">4</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext key <span class="token operator">:</span>hi
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext value <span class="token operator">:</span><span class="token number">5</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext key <span class="token operator">:</span>hi
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext value <span class="token operator">:</span><span class="token number">6</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext key <span class="token operator">:</span>hi
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onNext value <span class="token operator">:</span><span class="token number">7</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onComplete
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">GroupedObservable</span> onComplete
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">35.616</span> <span class="token number">19015</span><span class="token operator">-</span><span class="token number">19015</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、scan" tabindex="-1"><a class="header-anchor" href="#_6、scan" aria-hidden="true">#</a> 6、scan()</h2><p><code>scan()</code> 操作符对原始 <code>Observable</code> 发射的第一条数据应用一个函数，然后将那个函数的结果作为自己的第一项数据发射。它将函数的结果同第二项数据一起填充给这个函数来产生它自己的第二项数据。它持续进行这个过程来产生剩余的数据序列</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>		<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scan</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;integer : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;integer2 : &quot;</span> <span class="token operator">+</span> integer2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> integer <span class="token operator">+</span> integer2<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">19.389</span> <span class="token number">19158</span><span class="token operator">-</span><span class="token number">19158</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">19.389</span> <span class="token number">19158</span><span class="token operator">-</span><span class="token number">19158</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">19.389</span> <span class="token number">19158</span><span class="token operator">-</span><span class="token number">19158</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer2 <span class="token operator">:</span> <span class="token number">5</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">19.399</span> <span class="token number">19158</span><span class="token operator">-</span><span class="token number">19158</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">6</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">19.399</span> <span class="token number">19158</span><span class="token operator">-</span><span class="token number">19158</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token operator">:</span> <span class="token number">6</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">19.399</span> <span class="token number">19158</span><span class="token operator">-</span><span class="token number">19158</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer2 <span class="token operator">:</span> <span class="token number">8</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">19.399</span> <span class="token number">19158</span><span class="token operator">-</span><span class="token number">19158</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">14</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">19.399</span> <span class="token number">19158</span><span class="token operator">-</span><span class="token number">19158</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token operator">:</span> <span class="token number">14</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">19.409</span> <span class="token number">19158</span><span class="token operator">-</span><span class="token number">19158</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer2 <span class="token operator">:</span> <span class="token number">12</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">11</span><span class="token operator">:</span><span class="token number">25</span><span class="token operator">:</span><span class="token number">19.409</span> <span class="token number">19158</span><span class="token operator">-</span><span class="token number">19158</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">26</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="四、组合操作符" tabindex="-1"><a class="header-anchor" href="#四、组合操作符" aria-hidden="true">#</a> 四、组合操作符</h1><h2 id="_1、concat-concatarray" tabindex="-1"><a class="header-anchor" href="#_1、concat-concatarray" aria-hidden="true">#</a> 1、concat() &amp; concatArray()</h2><p>用于将多个观察者组合在一起，然后按照参数的传入顺序发送事件，<code>concat()</code> 最多只可以发送4个事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>		<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>accept<span class="token operator">:</span> <span class="token number">1</span>
accept<span class="token operator">:</span> <span class="token number">2</span>
accept<span class="token operator">:</span> <span class="token number">3</span>
accept<span class="token operator">:</span> <span class="token number">4</span>
accept<span class="token operator">:</span> <span class="token number">5</span>
accept<span class="token operator">:</span> <span class="token number">6</span>
accept<span class="token operator">:</span> <span class="token number">7</span>
accept<span class="token operator">:</span> <span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>concatArray()</code> 作用与 <code>concat()</code> 作用一样，不过前者可以发送多于 4 个的被观察者</p><h2 id="_2、merge-mergearray" tabindex="-1"><a class="header-anchor" href="#_2、merge-mergearray" aria-hidden="true">#</a> 2、merge() &amp; mergeArray()</h2><p>这个方法与 <code>concat()</code> 作用基本一样，只是 <code>concat()</code> 是串行发送事件，而 <code>merge()</code> 并行发送事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>	<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token string">&quot;Test_A_&quot;</span> <span class="token operator">+</span> aLong<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token string">&quot;Test_B_&quot;</span> <span class="token operator">+</span> aLong<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Test_A_0</span>
<span class="token class-name">Test_B_0</span>
<span class="token class-name">Test_A_1</span>
<span class="token class-name">Test_B_1</span>
<span class="token class-name">Test_A_2</span>
<span class="token class-name">Test_B_2</span>
<span class="token class-name">Test_B_3</span>
<span class="token class-name">Test_A_3</span>
<span class="token class-name">Test_A_4</span>
<span class="token class-name">Test_B_4</span>
<span class="token class-name">Test_A_5</span>
<span class="token class-name">Test_B_5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mergeArray()</code> 可以发送 4 个以上的被观察者</p><h2 id="_3、concatarraydelayerror-mergearraydelayerror" tabindex="-1"><a class="header-anchor" href="#_3、concatarraydelayerror-mergearraydelayerror" aria-hidden="true">#</a> 3、concatArrayDelayError() &amp; mergeArrayDelayError()</h2><p>在 <code>concatArray()</code> 和 <code>mergeArray()</code> 两个方法当中，如果其中有一个被观察者发送了一个 <code>Error</code> 事件，那么就会停止发送事件，如果想 <code>onError()</code> 事件延迟到所有被观察者都发送完事件后再执行的话，可以使用 <code>concatArrayDelayError()</code> 和 <code>mergeArrayDelayError()</code></p><p>首先使用 <code>concatArray()</code> 来验证其发送 <code>onError()</code> 事件是否会中断其他被观察者的发送事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">concatArray</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;Normal Exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>onNext<span class="token operator">:</span> <span class="token number">1</span>
onNext<span class="token operator">:</span> <span class="token number">2</span>
onError<span class="token operator">:</span> <span class="token class-name">Normal</span> <span class="token class-name">Exception</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从结果可以知道，确实中断了，现在换用 <code>concatArrayDelayError()</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">04</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">04.935</span> <span class="token number">6514</span><span class="token operator">-</span><span class="token number">6514</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext<span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">04</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">04.935</span> <span class="token number">6514</span><span class="token operator">-</span><span class="token number">6514</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext<span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">04</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">04.935</span> <span class="token number">6514</span><span class="token operator">-</span><span class="token number">6514</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext<span class="token operator">:</span> <span class="token number">30</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">04</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">04.935</span> <span class="token number">6514</span><span class="token operator">-</span><span class="token number">6514</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext<span class="token operator">:</span> <span class="token number">40</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">04</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">04.935</span> <span class="token number">6514</span><span class="token operator">-</span><span class="token number">6514</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext<span class="token operator">:</span> <span class="token number">50</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">04</span><span class="token operator">:</span><span class="token number">00</span><span class="token operator">:</span><span class="token number">04.935</span> <span class="token number">6514</span><span class="token operator">-</span><span class="token number">6514</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onError<span class="token operator">:</span> <span class="token class-name">Normal</span> <span class="token class-name">Exception</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从结果可以看到，<code>onError</code> 事件是在所有被观察者发送完事件才发送的</p><h2 id="_4、zip" tabindex="-1"><a class="header-anchor" href="#_4、zip" aria-hidden="true">#</a> 4、zip()</h2><p><code>zip()</code> 操作符返回一个 <code>Obversable</code>，它使用这个函数按顺序结合两个或多个 Observables 发射的数据项，然后它发射这个函数返回的结果。它按照严格的顺序应用这个函数。它只发射与发射数据项最少的那个 Observable 一样多的数据</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>		<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;_&quot;</span> <span class="token operator">+</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>integer2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>accept<span class="token operator">:</span> <span class="token number">1_5</span>
accept<span class="token operator">:</span> <span class="token number">2_6</span>
accept<span class="token operator">:</span> <span class="token number">3_7</span>
accept<span class="token operator">:</span> <span class="token number">4_8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、combinelatest-combinelatestdelayerror" tabindex="-1"><a class="header-anchor" href="#_5、combinelatest-combinelatestdelayerror" aria-hidden="true">#</a> 5、combineLatest() &amp; combineLatestDelayError()</h2><p><code>combineLatest()</code> 的作用与 <code>zip()</code> 类似，<code>combineLatest()</code> 发送事件的序列是与发送的时间线有关的，当两个 <code>Observables</code> 中的任何一个发射了一个数据时，通过一个指定的函数组合每个 <code>Observable</code> 发射的最新数据，然后发射这个函数的结果</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">zip</span><span class="token punctuation">(</span>
               <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">intervalRange</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token annotation punctuation">@Override</span>
                            <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token class-name">String</span> s1 <span class="token operator">=</span> <span class="token string">&quot;A&quot;</span> <span class="token operator">+</span> aLong<span class="token punctuation">;</span>
                                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;A 发送的事件 &quot;</span> <span class="token operator">+</span> s1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">return</span> s1<span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">intervalRange</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token annotation punctuation">@Override</span>
                            <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token class-name">String</span> s1 <span class="token operator">=</span> <span class="token string">&quot;B&quot;</span> <span class="token operator">+</span> aLong<span class="token punctuation">;</span>
                                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;B 发送的事件 &quot;</span> <span class="token operator">+</span> s1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token keyword">return</span> s1<span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">String</span> value1<span class="token punctuation">,</span> <span class="token class-name">String</span> value2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> value1 <span class="token operator">+</span> <span class="token string">&quot;_&quot;</span> <span class="token operator">+</span> value2<span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">06.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7241</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">A</span> 发送的事件 <span class="token constant">A1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">07.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7241</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">A</span> 发送的事件 <span class="token constant">A2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">07.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7242</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">B</span> 发送的事件 <span class="token constant">B1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">07.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7242</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token constant">A1_B1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">08.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7241</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">A</span> 发送的事件 <span class="token constant">A3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">08.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7242</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">B</span> 发送的事件 <span class="token constant">B2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">08.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7242</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token constant">A2_B2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">09.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7242</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">B</span> 发送的事件 <span class="token constant">B3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">09.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7242</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token constant">A3_B3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">09.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7241</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">A</span> 发送的事件 <span class="token constant">A4</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">10.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7242</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">B</span> 发送的事件 <span class="token constant">B4</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">10.337</span> <span class="token number">7227</span><span class="token operator">-</span><span class="token number">7242</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token constant">A4_B4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当发送 A1 和 A2 事件时，B 并没有发送任何事件，所以不会触发到 <code>accept</code> 方法。当发送了 B1 事件之后，就会与 A 最新发送的事件 A2 结合成 A1_B2，之后的发射规则也以此类推</p><p><code>combineLatestDelayError()</code> 多了延迟发送 <code>onError()</code> 的功能</p><h2 id="_6、reduce" tabindex="-1"><a class="header-anchor" href="#_6、reduce" aria-hidden="true">#</a> 6、reduce()</h2><p>与 <code>scan()</code> 操作符的作用类似，也是将发送数据以一定逻辑聚合起来，区别在于 <code>scan()</code> 每处理一次数据就会将事件发送给观察者，而 <code>reduce()</code> 会将所有数据聚合在一起才会发送事件给观察者</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer2<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;integer1 : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;integer2 : &quot;</span> <span class="token operator">+</span> integer2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> integer <span class="token operator">+</span> integer2<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>integer1 <span class="token operator">:</span> <span class="token number">1</span>
integer2 <span class="token operator">:</span> <span class="token number">3</span>
integer1 <span class="token operator">:</span> <span class="token number">4</span>
integer2 <span class="token operator">:</span> <span class="token number">5</span>
integer1 <span class="token operator">:</span> <span class="token number">9</span>
integer2 <span class="token operator">:</span> <span class="token number">7</span>
accept <span class="token operator">:</span> <span class="token number">16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、collect" tabindex="-1"><a class="header-anchor" href="#_7、collect" aria-hidden="true">#</a> 7、collect()</h2><p><code>collect()</code> 与 <code>reduce()</code> 类似，但它的目的是收集原始 Observable 发射的所有数据到一个可变的数据结构</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ArrayList</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BiConsumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ArrayList</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> integers<span class="token punctuation">,</span> <span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        integers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ArrayList</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> integers<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integers<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>accept <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_8、startwith-startwitharray" tabindex="-1"><a class="header-anchor" href="#_8、startwith-startwitharray" aria-hidden="true">#</a> 8、startWith() &amp; startWithArray()</h2><p>在发送事件之前追加事件，<code>startWith()</code> 追加一个事件，<code>startWithArray()</code> 可以追加多个事件，追加的事件会先发出</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">startWithArray</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">startWith</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">21.081</span> <span class="token number">8033</span><span class="token operator">-</span><span class="token number">8033</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">21.081</span> <span class="token number">8033</span><span class="token operator">-</span><span class="token number">8033</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">21.081</span> <span class="token number">8033</span><span class="token operator">-</span><span class="token number">8033</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">21.081</span> <span class="token number">8033</span><span class="token operator">-</span><span class="token number">8033</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">4</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">21.081</span> <span class="token number">8033</span><span class="token operator">-</span><span class="token number">8033</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9、count" tabindex="-1"><a class="header-anchor" href="#_9、count" aria-hidden="true">#</a> 9、count()</h2><p>返回被观察者发送事件的数量</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;aLong : &quot;</span> <span class="token operator">+</span> aLong<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>aLong : 3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="五、功能操作符" tabindex="-1"><a class="header-anchor" href="#五、功能操作符" aria-hidden="true">#</a> 五、功能操作符</h1><h2 id="_1、delay" tabindex="-1"><a class="header-anchor" href="#_1、delay" aria-hidden="true">#</a> 1、delay()</h2><p>延迟一段事件再发送事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> value<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;value : &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、dooneach" tabindex="-1"><a class="header-anchor" href="#_2、dooneach" aria-hidden="true">#</a> 2、doOnEach()</h2><p><code>Observable</code> 发送一次事件之前都会回调这个方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doOnEach</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Notification</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Notification</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> integerNotification<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;integerNotification value : &quot;</span> <span class="token operator">+</span> integerNotification<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> value<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">28.510</span> <span class="token number">8645</span><span class="token operator">-</span><span class="token number">8645</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integerNotification value <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">28.510</span> <span class="token number">8645</span><span class="token operator">-</span><span class="token number">8645</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">28.510</span> <span class="token number">8645</span><span class="token operator">-</span><span class="token number">8645</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integerNotification value <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">28.510</span> <span class="token number">8645</span><span class="token operator">-</span><span class="token number">8645</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">28.510</span> <span class="token number">8645</span><span class="token operator">-</span><span class="token number">8645</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integerNotification value <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">28.510</span> <span class="token number">8645</span><span class="token operator">-</span><span class="token number">8645</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">28.510</span> <span class="token number">8645</span><span class="token operator">-</span><span class="token number">8645</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integerNotification value <span class="token operator">:</span> <span class="token keyword">null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、doonnext" tabindex="-1"><a class="header-anchor" href="#_3、doonnext" aria-hidden="true">#</a> 3、doOnNext()</h2><p><code>Observable</code> 发送 <code>onNext()</code> 之前都会先回调这个方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doOnNext</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;doOnNext accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> value<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">25.618</span> <span class="token number">8758</span><span class="token operator">-</span><span class="token number">8758</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doOnNext accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">25.618</span> <span class="token number">8758</span><span class="token operator">-</span><span class="token number">8758</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">25.618</span> <span class="token number">8758</span><span class="token operator">-</span><span class="token number">8758</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doOnNext accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">25.618</span> <span class="token number">8758</span><span class="token operator">-</span><span class="token number">8758</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">25.618</span> <span class="token number">8758</span><span class="token operator">-</span><span class="token number">8758</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doOnNext accept <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">25.618</span> <span class="token number">8758</span><span class="token operator">-</span><span class="token number">8758</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、doafternext" tabindex="-1"><a class="header-anchor" href="#_4、doafternext" aria-hidden="true">#</a> 4、doAfterNext()</h2><p><code>Observable</code> 发送 <code>onNext()</code> 之后都会回调这个方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doAfterNext</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;doOnNext accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> value<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">09.357</span> <span class="token number">8872</span><span class="token operator">-</span><span class="token number">8872</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">09.357</span> <span class="token number">8872</span><span class="token operator">-</span><span class="token number">8872</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doOnNext accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">09.357</span> <span class="token number">8872</span><span class="token operator">-</span><span class="token number">8872</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">09.357</span> <span class="token number">8872</span><span class="token operator">-</span><span class="token number">8872</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doOnNext accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">09.357</span> <span class="token number">8872</span><span class="token operator">-</span><span class="token number">8872</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">05</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">09.357</span> <span class="token number">8872</span><span class="token operator">-</span><span class="token number">8872</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doOnNext accept <span class="token operator">:</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、dooncomplete" tabindex="-1"><a class="header-anchor" href="#_5、dooncomplete" aria-hidden="true">#</a> 5、doOnComplete()</h2><p><code>Observable</code> 调用 <code>onComplete()</code> 之前都会回调这个方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doOnComplete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;doOnComplete run()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> value<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">43.688</span> <span class="token number">8982</span><span class="token operator">-</span><span class="token number">8982</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">43.688</span> <span class="token number">8982</span><span class="token operator">-</span><span class="token number">8982</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">43.688</span> <span class="token number">8982</span><span class="token operator">-</span><span class="token number">8982</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">43.688</span> <span class="token number">8982</span><span class="token operator">-</span><span class="token number">8982</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doOnComplete <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、doonerror" tabindex="-1"><a class="header-anchor" href="#_6、doonerror" aria-hidden="true">#</a> 6、doOnError()</h2><p><code>Observable</code> 发送 <code>onError()</code> 之前都会回调这个方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;Normal Exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Throwable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;doOnError accept() : &quot;</span> <span class="token operator">+</span> throwable<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">14</span><span class="token operator">:</span><span class="token number">17.894</span> <span class="token number">9230</span><span class="token operator">-</span><span class="token number">9230</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">14</span><span class="token operator">:</span><span class="token number">17.894</span> <span class="token number">9230</span><span class="token operator">-</span><span class="token number">9230</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">14</span><span class="token operator">:</span><span class="token number">17.894</span> <span class="token number">9230</span><span class="token operator">-</span><span class="token number">9230</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doOnError <span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token class-name">Normal</span> <span class="token class-name">Exception</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">14</span><span class="token operator">:</span><span class="token number">17.894</span> <span class="token number">9230</span><span class="token operator">-</span><span class="token number">9230</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onError <span class="token operator">:</span> <span class="token class-name">Normal</span> <span class="token class-name">Exception</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、doonsubscribe" tabindex="-1"><a class="header-anchor" href="#_7、doonsubscribe" aria-hidden="true">#</a> 7、doOnSubscribe()</h2><p><code>Observable</code> 发送 <code>onSubscribe()</code> 之前会回调这个方法</p><h2 id="_8、doondispose" tabindex="-1"><a class="header-anchor" href="#_8、doondispose" aria-hidden="true">#</a> 8、doOnDispose()</h2><p>当调用 <code>Disposable</code> 的 <code>dispose()</code> 之后会回调该方法</p><h2 id="_9、doonlifecycle" tabindex="-1"><a class="header-anchor" href="#_9、doonlifecycle" aria-hidden="true">#</a> 9、doOnLifecycle()</h2><p>在回调 <code>onSubscribe</code> 之前回调该方法的第一个参数的回调方法，可以使用该回调方法决定是否取消订阅，<code>doOnLifecycle()</code> 第二个参数的回调方法的作用与 <code>doOnDispose()</code> 一样</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doOnLifecycle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Disposable</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> disposable<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;doOnLifecycle accept&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Action</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;doOnLifecycle run&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">private</span> <span class="token class-name">Disposable</span> disposable<span class="token punctuation">;</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>disposable <span class="token operator">=</span> d<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                disposable<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">45.011</span> <span class="token number">9602</span><span class="token operator">-</span><span class="token number">9602</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doOnLifecycle accept
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">45.011</span> <span class="token number">9602</span><span class="token operator">-</span><span class="token number">9602</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">45.011</span> <span class="token number">9602</span><span class="token operator">-</span><span class="token number">9602</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">45.011</span> <span class="token number">9602</span><span class="token operator">-</span><span class="token number">9602</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doOnLifecycle run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10、doonterminate-doafterterminate" tabindex="-1"><a class="header-anchor" href="#_10、doonterminate-doafterterminate" aria-hidden="true">#</a> 10、doOnTerminate() &amp; doAfterTerminate()</h2><p><code>doOnTerminate</code> 是在 <code>onError</code> 或者 <code>onComplete</code> 发送之前回调，而 <code>doAfterTerminate</code> 则是 <code>onError</code> 或者 <code>onComplete</code> 发送之后回调</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doOnTerminate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;doOnTerminate run&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doAfterTerminate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;doAfterTerminate run&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">34</span><span class="token operator">:</span><span class="token number">55.968</span> <span class="token number">9713</span><span class="token operator">-</span><span class="token number">9713</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">34</span><span class="token operator">:</span><span class="token number">55.968</span> <span class="token number">9713</span><span class="token operator">-</span><span class="token number">9713</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">34</span><span class="token operator">:</span><span class="token number">55.968</span> <span class="token number">9713</span><span class="token operator">-</span><span class="token number">9713</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">34</span><span class="token operator">:</span><span class="token number">55.968</span> <span class="token number">9713</span><span class="token operator">-</span><span class="token number">9713</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doOnTerminate run
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">34</span><span class="token operator">:</span><span class="token number">55.968</span> <span class="token number">9713</span><span class="token operator">-</span><span class="token number">9713</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onComplete
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">34</span><span class="token operator">:</span><span class="token number">55.968</span> <span class="token number">9713</span><span class="token operator">-</span><span class="token number">9713</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> doAfterTerminate run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11、dofinally" tabindex="-1"><a class="header-anchor" href="#_11、dofinally" aria-hidden="true">#</a> 11、doFinally()</h2><p>在所有事件发送完毕之后回调该方法。 <code>doFinally()</code> 和 <code>doAfterTerminate()</code> 的区别在于取消订阅时，如果取消订阅，之后 <code>doAfterTerminate()</code> 就不会被回调，而 <code>doFinally()</code> 无论怎么样都会被回调，且都会在事件序列的最后</p><h2 id="_12、onerrorreturn" tabindex="-1"><a class="header-anchor" href="#_12、onerrorreturn" aria-hidden="true">#</a> 12、onErrorReturn()</h2><p>当接受到一个 <code>onError()</code> 事件之后回调，返回的值会回调 <code>onNext()</code> 方法，并正常结束该事件序列</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;Normal Exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onErrorReturn</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">7</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">13.702</span> <span class="token number">9946</span><span class="token operator">-</span><span class="token number">9946</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">13.702</span> <span class="token number">9946</span><span class="token operator">-</span><span class="token number">9946</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">13.702</span> <span class="token number">9946</span><span class="token operator">-</span><span class="token number">9946</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">13.712</span> <span class="token number">9946</span><span class="token operator">-</span><span class="token number">9946</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">7</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">13.712</span> <span class="token number">9946</span><span class="token operator">-</span><span class="token number">9946</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13、onerrorresumenext" tabindex="-1"><a class="header-anchor" href="#_13、onerrorresumenext" aria-hidden="true">#</a> 13、onErrorResumeNext()</h2><p>当接收到 <code>onError()</code> 事件时，返回一个新的 <code>Observable</code>，并正常结束事件序列</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;Normal Exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onErrorResumeNext</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Throwable</span><span class="token punctuation">,</span> <span class="token class-name">ObservableSource</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">ObservableSource</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onErrorResumeNext apply: &quot;</span> <span class="token operator">+</span> throwable<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">36.650</span> <span class="token number">10243</span><span class="token operator">-</span><span class="token number">10243</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">36.650</span> <span class="token number">10243</span><span class="token operator">-</span><span class="token number">10243</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">36.650</span> <span class="token number">10243</span><span class="token operator">-</span><span class="token number">10243</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">36.650</span> <span class="token number">10243</span><span class="token operator">-</span><span class="token number">10243</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onErrorResumeNext apply<span class="token operator">:</span> <span class="token class-name">Normal</span> <span class="token class-name">Exception</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">36.650</span> <span class="token number">10243</span><span class="token operator">-</span><span class="token number">10243</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">4</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">36.650</span> <span class="token number">10243</span><span class="token operator">-</span><span class="token number">10243</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">5</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">36.650</span> <span class="token number">10243</span><span class="token operator">-</span><span class="token number">10243</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">6</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">36.650</span> <span class="token number">10243</span><span class="token operator">-</span><span class="token number">10243</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_14、-onexceptionresumenext" tabindex="-1"><a class="header-anchor" href="#_14、-onexceptionresumenext" aria-hidden="true">#</a> 14、 onExceptionResumeNext()</h2><p>与 <code>onErrorResumeNext()</code> 作用基本一致，但是这个方法只能捕捉 <code>Exception</code>，不能捕获 <code>Error</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        emitter<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;Normal Exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onExceptionResumeNext</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">subscribeActual</span><span class="token punctuation">(</span><span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> observer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onExceptionResumeNext subscribeActual&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        observer<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        observer<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">49.396</span> <span class="token number">10369</span><span class="token operator">-</span><span class="token number">10369</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">49.396</span> <span class="token number">10369</span><span class="token operator">-</span><span class="token number">10369</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">49.396</span> <span class="token number">10369</span><span class="token operator">-</span><span class="token number">10369</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">49.396</span> <span class="token number">10369</span><span class="token operator">-</span><span class="token number">10369</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onExceptionResumeNext subscribeActual
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">49.396</span> <span class="token number">10369</span><span class="token operator">-</span><span class="token number">10369</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">49.396</span> <span class="token number">10369</span><span class="token operator">-</span><span class="token number">10369</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将 <code>emitter.onError(new Exception(&quot;Normal Exception&quot;))</code> 改为 <code>emitter.onError(new Error(&quot;Normal Exception&quot;));</code></p><p>异常将不会被捕获</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">21.655</span> <span class="token number">10479</span><span class="token operator">-</span><span class="token number">10479</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">21.655</span> <span class="token number">10479</span><span class="token operator">-</span><span class="token number">10479</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">21.655</span> <span class="token number">10479</span><span class="token operator">-</span><span class="token number">10479</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">53</span><span class="token operator">:</span><span class="token number">21.655</span> <span class="token number">10479</span><span class="token operator">-</span><span class="token number">10479</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onError <span class="token operator">:</span> <span class="token class-name">Normal</span> <span class="token class-name">Exception</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_15、retry" tabindex="-1"><a class="header-anchor" href="#_15、retry" aria-hidden="true">#</a> 15、retry()</h2><p>如果出现错误事件，则会重新发送所有事件序列指定次数</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Normal Exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">retry</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">17.273</span> <span class="token number">10591</span><span class="token operator">-</span><span class="token number">10591</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">17.273</span> <span class="token number">10591</span><span class="token operator">-</span><span class="token number">10591</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">17.273</span> <span class="token number">10591</span><span class="token operator">-</span><span class="token number">10591</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">17.273</span> <span class="token number">10591</span><span class="token operator">-</span><span class="token number">10591</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">17.273</span> <span class="token number">10591</span><span class="token operator">-</span><span class="token number">10591</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">17.273</span> <span class="token number">10591</span><span class="token operator">-</span><span class="token number">10591</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">17.273</span> <span class="token number">10591</span><span class="token operator">-</span><span class="token number">10591</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">06</span><span class="token operator">:</span><span class="token number">55</span><span class="token operator">:</span><span class="token number">17.273</span> <span class="token number">10591</span><span class="token operator">-</span><span class="token number">10591</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onError <span class="token operator">:</span> <span class="token class-name">Normal</span> <span class="token class-name">Exception</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_16、retryuntil" tabindex="-1"><a class="header-anchor" href="#_16、retryuntil" aria-hidden="true">#</a> 16、retryUntil()</h2><p>出现错误事件之后，可以通过此方法判断是否继续发送事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;Normal Exception&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">retryUntil</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BooleanSupplier</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">getAsBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;getAsBoolean&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> index <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                index<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">07.675</span> <span class="token number">11433</span><span class="token operator">-</span><span class="token number">11433</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">07.675</span> <span class="token number">11433</span><span class="token operator">-</span><span class="token number">11433</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">07.675</span> <span class="token number">11433</span><span class="token operator">-</span><span class="token number">11433</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">07.675</span> <span class="token number">11433</span><span class="token operator">-</span><span class="token number">11433</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> getAsBoolean
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">07.675</span> <span class="token number">11433</span><span class="token operator">-</span><span class="token number">11433</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">07.675</span> <span class="token number">11433</span><span class="token operator">-</span><span class="token number">11433</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">07.675</span> <span class="token number">11433</span><span class="token operator">-</span><span class="token number">11433</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> getAsBoolean
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">07.675</span> <span class="token number">11433</span><span class="token operator">-</span><span class="token number">11433</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">07.675</span> <span class="token number">11433</span><span class="token operator">-</span><span class="token number">11433</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">07.675</span> <span class="token number">11433</span><span class="token operator">-</span><span class="token number">11433</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> getAsBoolean
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">19</span><span class="token operator">:</span><span class="token number">07.675</span> <span class="token number">11433</span><span class="token operator">-</span><span class="token number">11433</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onError <span class="token operator">:</span> <span class="token class-name">Normal</span> <span class="token class-name">Exception</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_17、repeat" tabindex="-1"><a class="header-anchor" href="#_17、repeat" aria-hidden="true">#</a> 17、repeat()</h2><p>以指定次数重复发送被观察者的事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">47.680</span> <span class="token number">12155</span><span class="token operator">-</span><span class="token number">12155</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">47.690</span> <span class="token number">12155</span><span class="token operator">-</span><span class="token number">12155</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">47.690</span> <span class="token number">12155</span><span class="token operator">-</span><span class="token number">12155</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">47.690</span> <span class="token number">12155</span><span class="token operator">-</span><span class="token number">12155</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">47.690</span> <span class="token number">12155</span><span class="token operator">-</span><span class="token number">12155</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">38</span><span class="token operator">:</span><span class="token number">47.690</span> <span class="token number">12155</span><span class="token operator">-</span><span class="token number">12155</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_18、repeatwhen" tabindex="-1"><a class="header-anchor" href="#_18、repeatwhen" aria-hidden="true">#</a> 18、repeatWhen()</h2><p>返回一个新的被观察者来决定是否重复发送事件。如果新的被观察者返回 <code>onComplete</code> 或者 <code>onError</code> 事件，则旧的被观察者不会发送事件。如果新的被观察者返回其他事件，则旧的观察者会发送事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                e<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">repeatWhen</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">ObservableSource</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">ObservableSource</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> objectObservable<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
<span class="token comment">//                return Observable.empty();</span>
<span class="token comment">//                return Observable.error(new Exception(&quot;Normal Exception&quot;));</span>
<span class="token comment">//                return Observable.just(1);</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上三种情况的输出结果分别是</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">29</span><span class="token operator">:</span><span class="token number">05.641</span> <span class="token number">20921</span><span class="token operator">-</span><span class="token number">20921</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">29</span><span class="token operator">:</span><span class="token number">05.641</span> <span class="token number">20921</span><span class="token operator">-</span><span class="token number">20921</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">29</span><span class="token operator">:</span><span class="token number">36.150</span> <span class="token number">21027</span><span class="token operator">-</span><span class="token number">21027</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">29</span><span class="token operator">:</span><span class="token number">36.150</span> <span class="token number">21027</span><span class="token operator">-</span><span class="token number">21027</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onError <span class="token operator">:</span> <span class="token class-name">Normal</span> <span class="token class-name">Exception</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">33.220</span> <span class="token number">21135</span><span class="token operator">-</span><span class="token number">21135</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">33.220</span> <span class="token number">21135</span><span class="token operator">-</span><span class="token number">21135</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">33.220</span> <span class="token number">21135</span><span class="token operator">-</span><span class="token number">21135</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">33.220</span> <span class="token number">21135</span><span class="token operator">-</span><span class="token number">21135</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">30</span><span class="token operator">:</span><span class="token number">33.220</span> <span class="token number">21135</span><span class="token operator">-</span><span class="token number">21135</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_19、subscribeon-observeon" tabindex="-1"><a class="header-anchor" href="#_19、subscribeon-observeon" aria-hidden="true">#</a> 19、subscribeOn() &amp; observeOn()</h2><p><code>subscribeOn()</code> 用于指定被观察者的线程，要注意的时，如果多次调用此方法，只有第一次有效</p><p><code>observeOn()</code> 用于指定观察者的线程，每指定一次就会生效一次</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Observable Thread Name:  &quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span><span class="token class-name">Schedulers</span><span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span><span class="token class-name">AndroidSchedulers</span><span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Observer Thread Name:  &quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError : &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">54</span><span class="token operator">:</span><span class="token number">02.839</span> <span class="token number">12629</span><span class="token operator">-</span><span class="token number">12629</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">54</span><span class="token operator">:</span><span class="token number">02.839</span> <span class="token number">12629</span><span class="token operator">-</span><span class="token number">12629</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">Observer</span> <span class="token class-name">Thread</span> <span class="token class-name">Name</span><span class="token operator">:</span>  main
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">54</span><span class="token operator">:</span><span class="token number">02.839</span> <span class="token number">12629</span><span class="token operator">-</span><span class="token number">12643</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> <span class="token class-name">Observable</span> <span class="token class-name">Thread</span> <span class="token class-name">Name</span><span class="token operator">:</span>  <span class="token class-name">RxNewThreadScheduler</span><span class="token operator">-</span><span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">54</span><span class="token operator">:</span><span class="token number">02.859</span> <span class="token number">12629</span><span class="token operator">-</span><span class="token number">12629</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">54</span><span class="token operator">:</span><span class="token number">02.869</span> <span class="token number">12629</span><span class="token operator">-</span><span class="token number">12629</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">54</span><span class="token operator">:</span><span class="token number">02.869</span> <span class="token number">12629</span><span class="token operator">-</span><span class="token number">12629</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>调度器</th><th>作用</th></tr></thead><tbody><tr><td>Schedulers.computation( )</td><td>用于使用计算任务，如事件循环和回调处理</td></tr><tr><td>Schedulers.immediate( )</td><td>当前线程</td></tr><tr><td>Schedulers.io( )</td><td>用于 IO 密集型任务，如果异步阻塞 IO 操作。</td></tr><tr><td>Schedulers.newThread( )</td><td>创建一个新的线程</td></tr><tr><td>AndroidSchedulers.mainThread()</td><td>Android 的 UI 线程，用于操作 UI。</td></tr></tbody></table><h1 id="六、过滤操作符" tabindex="-1"><a class="header-anchor" href="#六、过滤操作符" aria-hidden="true">#</a> 六、过滤操作符</h1><h2 id="_1、filter" tabindex="-1"><a class="header-anchor" href="#_1、filter" aria-hidden="true">#</a> 1、filter()</h2><p>通过一定逻辑来过滤被观察者发送的事件，如果返回 <code>true</code> 则会发送事件，否则不会发送</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">48.196</span> <span class="token number">12753</span><span class="token operator">-</span><span class="token number">12753</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">57</span><span class="token operator">:</span><span class="token number">48.196</span> <span class="token number">12753</span><span class="token operator">-</span><span class="token number">12753</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、oftype" tabindex="-1"><a class="header-anchor" href="#_2、oftype" aria-hidden="true">#</a> 2、ofType()</h2><p>过滤不符合该类型的事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;Hi&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ofType</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">59</span><span class="token operator">:</span><span class="token number">41.265</span> <span class="token number">12857</span><span class="token operator">-</span><span class="token number">12857</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">59</span><span class="token operator">:</span><span class="token number">41.265</span> <span class="token number">12857</span><span class="token operator">-</span><span class="token number">12857</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">59</span><span class="token operator">:</span><span class="token number">41.265</span> <span class="token number">12857</span><span class="token operator">-</span><span class="token number">12857</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">07</span><span class="token operator">:</span><span class="token number">59</span><span class="token operator">:</span><span class="token number">41.265</span> <span class="token number">12857</span><span class="token operator">-</span><span class="token number">12857</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、skip" tabindex="-1"><a class="header-anchor" href="#_3、skip" aria-hidden="true">#</a> 3、skip()</h2><p>以正序跳过指定数量的事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">01</span><span class="token operator">:</span><span class="token number">09.183</span> <span class="token number">12971</span><span class="token operator">-</span><span class="token number">12971</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">01</span><span class="token operator">:</span><span class="token number">09.183</span> <span class="token number">12971</span><span class="token operator">-</span><span class="token number">12971</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、skiplast" tabindex="-1"><a class="header-anchor" href="#_4、skiplast" aria-hidden="true">#</a> 4、skipLast()</h2><p>以反序跳过指定数量的事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skipLast</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">02</span><span class="token operator">:</span><span class="token number">00.753</span> <span class="token number">13079</span><span class="token operator">-</span><span class="token number">13079</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">02</span><span class="token operator">:</span><span class="token number">00.753</span> <span class="token number">13079</span><span class="token operator">-</span><span class="token number">13079</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、distinct" tabindex="-1"><a class="header-anchor" href="#_5、distinct" aria-hidden="true">#</a> 5、distinct()</h2><p>过滤事件序列中的重复事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">03</span><span class="token operator">:</span><span class="token number">27.402</span> <span class="token number">13189</span><span class="token operator">-</span><span class="token number">13189</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">03</span><span class="token operator">:</span><span class="token number">27.402</span> <span class="token number">13189</span><span class="token operator">-</span><span class="token number">13189</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">03</span><span class="token operator">:</span><span class="token number">27.402</span> <span class="token number">13189</span><span class="token operator">-</span><span class="token number">13189</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">03</span><span class="token operator">:</span><span class="token number">27.402</span> <span class="token number">13189</span><span class="token operator">-</span><span class="token number">13189</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、distinctuntilchanged" tabindex="-1"><a class="header-anchor" href="#_6、distinctuntilchanged" aria-hidden="true">#</a> 6、distinctUntilChanged()</h2><p>过滤掉连续重复的事件</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinctUntilChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">04</span><span class="token operator">:</span><span class="token number">44.531</span> <span class="token number">13294</span><span class="token operator">-</span><span class="token number">13294</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">04</span><span class="token operator">:</span><span class="token number">44.541</span> <span class="token number">13294</span><span class="token operator">-</span><span class="token number">13294</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">04</span><span class="token operator">:</span><span class="token number">44.541</span> <span class="token number">13294</span><span class="token operator">-</span><span class="token number">13294</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">04</span><span class="token operator">:</span><span class="token number">44.541</span> <span class="token number">13294</span><span class="token operator">-</span><span class="token number">13294</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">04</span><span class="token operator">:</span><span class="token number">44.541</span> <span class="token number">13294</span><span class="token operator">-</span><span class="token number">13294</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">4</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">04</span><span class="token operator">:</span><span class="token number">44.541</span> <span class="token number">13294</span><span class="token operator">-</span><span class="token number">13294</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、take" tabindex="-1"><a class="header-anchor" href="#_7、take" aria-hidden="true">#</a> 7、take()</h2><p>控制观察者接收事件的数量</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">43.520</span> <span class="token number">13397</span><span class="token operator">-</span><span class="token number">13397</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">43.520</span> <span class="token number">13397</span><span class="token operator">-</span><span class="token number">13397</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">05</span><span class="token operator">:</span><span class="token number">43.520</span> <span class="token number">13397</span><span class="token operator">-</span><span class="token number">13397</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8、debounce" tabindex="-1"><a class="header-anchor" href="#_8、debounce" aria-hidden="true">#</a> 8、debounce()</h2><p>如果两个事件发送的时间间隔小于设定的时间间隔，则前一件事件不会发送给观察者</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">900</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                emitter<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">59.337</span> <span class="token number">13509</span><span class="token operator">-</span><span class="token number">13523</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept <span class="token operator">:</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_9、firstelement-lastelement" tabindex="-1"><a class="header-anchor" href="#_9、firstelement-lastelement" aria-hidden="true">#</a> 9、firstElement() &amp;&amp; lastElement()</h2><p><code>firstElement()</code> 取事件序列的第一个元素，<code>lastElement()</code> 取事件序列的最后一个元素</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">firstElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10、elementat-elementatorerror" tabindex="-1"><a class="header-anchor" href="#_10、elementat-elementatorerror" aria-hidden="true">#</a> 10、elementAt() &amp; elementAtOrError()</h2><p><code>elementAt()</code> 可以指定取出事件序列中事件，但是输入的 <code>index</code> 超出事件序列的总数的话就不会触发任何调用，想触发异常信息的话就用 <code>elementAtOrError()</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">elementAt</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上代码不会触发任何</p><p>改用为 <code>elementAtOrError()</code>，则会抛出异常</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">elementAtOrError</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept : &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Process</span><span class="token operator">:</span> leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo<span class="token punctuation">,</span> <span class="token constant">PID</span><span class="token operator">:</span> <span class="token number">13948</span>
    <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>reactivex<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span></span>OnErrorNotImplementedException</span><span class="token operator">:</span> <span class="token class-name">The</span> exception was not handled due <span class="token keyword">to</span> <span class="token namespace">missing</span> onError handler in the <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> method <span class="token class-name"><span class="token namespace">call<span class="token punctuation">.</span></span> Further</span> reading<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token class-name">ReactiveX</span><span class="token operator">/</span><span class="token class-name">RxJava</span><span class="token operator">/</span>wiki<span class="token operator">/</span><span class="token class-name">Error</span><span class="token operator">-</span><span class="token class-name">Handling</span> <span class="token operator">|</span> <span class="token keyword">null</span>
        at <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>reactivex<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>functions<span class="token punctuation">.</span></span>Functions</span>$<span class="token class-name">OnErrorMissingConsumer</span><span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Functions</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">704</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>reactivex<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>functions<span class="token punctuation">.</span></span>Functions</span>$<span class="token class-name">OnErrorMissingConsumer</span><span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Functions</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">701</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>reactivex<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>observers<span class="token punctuation">.</span></span>ConsumerSingleObserver</span><span class="token punctuation">.</span><span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">ConsumerSingleObserver</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">46</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>reactivex<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>operators<span class="token punctuation">.</span>observable<span class="token punctuation">.</span></span>ObservableElementAtSingle</span>$<span class="token class-name">ElementAtObserver</span><span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token class-name">ObservableElementAtSingle</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">115</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>reactivex<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>operators<span class="token punctuation">.</span>observable<span class="token punctuation">.</span></span>ObservableFromArray</span>$<span class="token class-name">FromArrayDisposable</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ObservableFromArray</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">111</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>reactivex<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>operators<span class="token punctuation">.</span>observable<span class="token punctuation">.</span></span>ObservableFromArray</span><span class="token punctuation">.</span><span class="token function">subscribeActual</span><span class="token punctuation">(</span><span class="token class-name">ObservableFromArray</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">37</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>reactivex<span class="token punctuation">.</span></span>Observable</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">12090</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>reactivex<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>operators<span class="token punctuation">.</span>observable<span class="token punctuation">.</span></span>ObservableElementAtSingle</span><span class="token punctuation">.</span><span class="token function">subscribeActual</span><span class="token punctuation">(</span><span class="token class-name">ObservableElementAtSingle</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">37</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>reactivex<span class="token punctuation">.</span></span>Single</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">Single</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3438</span><span class="token punctuation">)</span>
        at <span class="token class-name"><span class="token namespace">io<span class="token punctuation">.</span>reactivex<span class="token punctuation">.</span></span>Single</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">Single</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3424</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="七、条件操作符" tabindex="-1"><a class="header-anchor" href="#七、条件操作符" aria-hidden="true">#</a> 七、条件操作符</h1><h2 id="_1、all" tabindex="-1"><a class="header-anchor" href="#_1、all" aria-hidden="true">#</a> 1、all()</h2><p>判断事件序列是否全部满足某个事件，如果都满足则返回 <code>true</code>，反之则返回 <code>false</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span> aBoolean<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> aBoolean<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">16</span><span class="token operator">:</span><span class="token number">10.212</span> <span class="token number">14043</span><span class="token operator">-</span><span class="token number">14043</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2、takewhile" tabindex="-1"><a class="header-anchor" href="#_2、takewhile" aria-hidden="true">#</a> 2、takeWhile()</h2><p>发射原始 <code>Observable</code>，直到指定的某个条件不成立的那一刻，它停止发射原始 <code>Observable</code>，并终止自己的 <code>Observable</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">takeWhile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> integer <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">03</span><span class="token operator">:</span><span class="token number">42.110</span> <span class="token number">20095</span><span class="token operator">-</span><span class="token number">20095</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">03</span><span class="token operator">:</span><span class="token number">42.110</span> <span class="token number">20095</span><span class="token operator">-</span><span class="token number">20095</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">14</span><span class="token operator">:</span><span class="token number">03</span><span class="token operator">:</span><span class="token number">42.110</span> <span class="token number">20095</span><span class="token operator">-</span><span class="token number">20095</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、skipwhile" tabindex="-1"><a class="header-anchor" href="#_3、skipwhile" aria-hidden="true">#</a> 3、skipWhile()</h2><p>订阅原始的 <code>Observable</code>，但是忽略它的发射物，直到指定的某个条件变为 false 时才开始发射原始 Observable</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>			<span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">skipWhile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> integer <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;integer &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">59</span><span class="token operator">:</span><span class="token number">40.583</span> <span class="token number">19764</span><span class="token operator">-</span><span class="token number">19764</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token number">4</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">59</span><span class="token operator">:</span><span class="token number">40.593</span> <span class="token number">19764</span><span class="token operator">-</span><span class="token number">19764</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">59</span><span class="token operator">:</span><span class="token number">40.593</span> <span class="token number">19764</span><span class="token operator">-</span><span class="token number">19764</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">59</span><span class="token operator">:</span><span class="token number">40.593</span> <span class="token number">19764</span><span class="token operator">-</span><span class="token number">19764</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token number">4</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">59</span><span class="token operator">:</span><span class="token number">40.593</span> <span class="token number">19764</span><span class="token operator">-</span><span class="token number">19764</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token number">5</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">59</span><span class="token operator">:</span><span class="token number">40.593</span> <span class="token number">19764</span><span class="token operator">-</span><span class="token number">19764</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">13</span><span class="token operator">:</span><span class="token number">59</span><span class="token operator">:</span><span class="token number">40.593</span> <span class="token number">19764</span><span class="token operator">-</span><span class="token number">19764</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token number">5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、takeuntil" tabindex="-1"><a class="header-anchor" href="#_4、takeuntil" aria-hidden="true">#</a> 4、takeUntil()</h2><p>用于设置一个条件，当事件满足此条件时，此事件会被发送，但之后的事件就不会被发送了</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">takeUntil</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> integer <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;integer &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">54</span><span class="token operator">:</span><span class="token number">24.833</span> <span class="token number">17208</span><span class="token operator">-</span><span class="token number">17208</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token number">1</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">54</span><span class="token operator">:</span><span class="token number">24.833</span> <span class="token number">17208</span><span class="token operator">-</span><span class="token number">17208</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">54</span><span class="token operator">:</span><span class="token number">24.833</span> <span class="token number">17208</span><span class="token operator">-</span><span class="token number">17208</span><span class="token operator">/</span><span class="token operator">?</span> <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> integer <span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、skipuntil" tabindex="-1"><a class="header-anchor" href="#_5、skipuntil" aria-hidden="true">#</a> 5、skipUntil()</h2><p>当 <code>skipUntil()</code> 中的 <code>Observable</code> 发送事件了，原始的 <code>Observable</code> 才会发送事件给观察者</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">intervalRange</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">skipUntil</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">intervalRange</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Disposable</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onSubscribe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span><span class="token class-name">Long</span> along<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onNext : &quot;</span> <span class="token operator">+</span> along<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onError&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;onComplete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">16.926</span> <span class="token number">16877</span><span class="token operator">-</span><span class="token number">16877</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onSubscribe
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">17.946</span> <span class="token number">16877</span><span class="token operator">-</span><span class="token number">16892</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">2</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">18.936</span> <span class="token number">16877</span><span class="token operator">-</span><span class="token number">16892</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">3</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">19.946</span> <span class="token number">16877</span><span class="token operator">-</span><span class="token number">16892</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">4</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">20.936</span> <span class="token number">16877</span><span class="token operator">-</span><span class="token number">16892</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">5</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">21.946</span> <span class="token number">16877</span><span class="token operator">-</span><span class="token number">16892</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onNext <span class="token operator">:</span> <span class="token number">6</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">51</span><span class="token operator">:</span><span class="token number">21.946</span> <span class="token number">16877</span><span class="token operator">-</span><span class="token number">16892</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> onComplete
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、sequenceequal" tabindex="-1"><a class="header-anchor" href="#_6、sequenceequal" aria-hidden="true">#</a> 6、sequenceEqual()</h2><p>判断两个 <code>Observable</code> 发送的事件是否相同，如果两个序列是相同的（相同的数据，相同的顺序，相同的终止状态），它就发射 true，否则发射 false</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">sequenceEqual</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span> aBoolean<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept aBoolean : &quot;</span> <span class="token operator">+</span> aBoolean<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">46</span><span class="token operator">:</span><span class="token number">59.369</span> <span class="token number">16492</span><span class="token operator">-</span><span class="token number">16492</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept aBoolean <span class="token operator">:</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_7、contains" tabindex="-1"><a class="header-anchor" href="#_7、contains" aria-hidden="true">#</a> 7、contains()</h2><p>判断事件序列中是否含有某个元素，如果有则返回 true，如果没有则返回 false</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span> aBoolean<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept aBoolean : &quot;</span> <span class="token operator">+</span> aBoolean<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">45</span><span class="token operator">:</span><span class="token number">58.100</span> <span class="token number">16386</span><span class="token operator">-</span><span class="token number">16386</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept aBoolean <span class="token operator">:</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_8、isempty" tabindex="-1"><a class="header-anchor" href="#_8、isempty" aria-hidden="true">#</a> 8、isEmpty()</h2><p>判断事件序列是否为空</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span> aBoolean<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept aBoolean: &quot;</span> <span class="token operator">+</span> aBoolean<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">43.201</span> <span class="token number">16278</span><span class="token operator">-</span><span class="token number">16278</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept aBoolean<span class="token operator">:</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_9、amb" tabindex="-1"><a class="header-anchor" href="#_9、amb" aria-hidden="true">#</a> 9、amb()</h2><p><code>amb()</code> 接收一个 <code>Observable</code> 集合，但是只会发送最先发送事件的 <code>Observable</code> 中的事件，不管发射的是一项数据还是一个 <code>onError</code> 或 <code>onCompleted</code> 通知，其余 <code>Observable</code> 将会被丢弃</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Observable</span><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">intervalRange</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">intervalRange</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">amb</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Long</span> aLong<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> aLong<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">45.783</span> <span class="token number">16053</span><span class="token operator">-</span><span class="token number">16068</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">10</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">46.783</span> <span class="token number">16053</span><span class="token operator">-</span><span class="token number">16068</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">11</span>
<span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">41</span><span class="token operator">:</span><span class="token number">47.783</span> <span class="token number">16053</span><span class="token operator">-</span><span class="token number">16068</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10、defaultifempty" tabindex="-1"><a class="header-anchor" href="#_10、defaultifempty" aria-hidden="true">#</a> 10、defaultIfEmpty()</h2><p>如果 Observable 没有发射任何值，则可以利用这个方法发送一个默认值</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>        <span class="token class-name">Observable</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObservableOnSubscribe</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">ObservableEmitter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> emitter<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                emitter<span class="token punctuation">.</span><span class="token function">onComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">defaultIfEmpty</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;accept: &quot;</span> <span class="token operator">+</span> integer<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token number">10</span><span class="token operator">-</span><span class="token number">06</span> <span class="token number">08</span><span class="token operator">:</span><span class="token number">40</span><span class="token operator">:</span><span class="token number">04.754</span> <span class="token number">15945</span><span class="token operator">-</span><span class="token number">15945</span><span class="token operator">/</span>leavesc<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>rxjavademo <span class="token class-name">E</span><span class="token operator">/</span><span class="token class-name">MainActivity</span><span class="token operator">:</span> accept<span class="token operator">:</span> <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,305);function d(m,v){const a=e("ExternalLinkIcon");return t(),o("div",null,[n("blockquote",null,[n("p",null,[s("公众号："),n("a",i,[s("字节数组"),c(a)])]),k]),r])}const y=p(u,[["render",d],["__file","一文快速入门 RxJava 2.html.vue"]]);export{y as default};
