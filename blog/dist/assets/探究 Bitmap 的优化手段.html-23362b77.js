import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,a as n,d as s,e as i,f as c}from"./app-6847d3e4.js";const l={},u={href:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/adbc507fc3704fd8955aae739a433db2~tplv-k3u1fbpfcp-zoom-1.image",target:"_blank",rel:"noopener noreferrer"},r=n("p",null,"希望对你有所帮助 🤣🤣",-1),d=c(`<p>Bitmap 应该是很多应用中最占据内存空间的一类资源了，Bitmap 也是导致应用 OOM 的常见原因之一。例如，Pixel 手机的相机拍摄的照片最大可达 4048 * 3036 像素（1200 万像素），如果使用的位图配置为 ARGB_8888（Android 2.3 及更高版本的默认设置），将单张照片加载到内存大约需要 48MB 内存（4048 * 3036 * 4 字节），如此庞大的内存需求可能会立即耗尽应用的所有可用内存</p><p>本篇文章就来讲下 Bitmap 一些比较有用的知识点，希望对你有所帮助 🤣🤣</p><p>全文可以概括为以下几个问题：</p><ol><li>Bitmap 所占内存大小的计算公式？</li><li>Bitmap 所占内存大小和所在的 drawable 文件夹的关系？</li><li>Bitmap 所占内存大小和 ImageView 的宽高的关系？</li><li>Bitmap 如何减少内存大小？</li></ol><h1 id="_1、预备知识" tabindex="-1"><a class="header-anchor" href="#_1、预备知识" aria-hidden="true">#</a> 1、预备知识</h1><p>在开始讲关于 Bitmap 的知识点前，需要先阐述一些基础概念作为预备知识</p><p>我们知道，在不同手机屏幕上 1dp 所对应的 px 值可能是会有很大差异的。例如，在小屏幕手机上 1dp 可能对应 1px，在大屏幕手机上对应的可能是 3px，这也是我们的应用实现屏幕适配的原理基础之一。想要知道在特定一台手机上 1dp 对应多少 px，或者是想要知道屏幕宽高大小，这些信息都可以通过 DisplayMetrics 来获取</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> displayMetrics <span class="token operator">=</span> applicationContext<span class="token punctuation">.</span>resources<span class="token punctuation">.</span>displayMetrics
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>打印出本文所使用的模拟器的 DisplayMetrics 信息：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">DisplayMetrics</span><span class="token punctuation">{</span>density<span class="token operator">=</span><span class="token number">3.0</span><span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">1080</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">1920</span><span class="token punctuation">,</span> scaledDensity<span class="token operator">=</span><span class="token number">3.0</span><span class="token punctuation">,</span> xdpi<span class="token operator">=</span><span class="token number">480.0</span><span class="token punctuation">,</span> ydpi<span class="token operator">=</span><span class="token number">480.0</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从中就可以提取出几点信息：</p><ol><li>density 等于 3，说明在该模拟器上 1dp 等于 3px</li><li>屏幕宽高大小为 1920 x 1080 px，即 640 x 360 dp</li><li>屏幕像素密度为 480dpi</li></ol><p>dpi 是一个很重要的值，指的是在系统软件上指定的单位尺寸的像素数量，往往是写在系统出厂配置文件的一个固定值。Android 系统定义的屏幕像素密度基准值是 160dpi，该基准值下 1dp 就等于 1px，依此类推 320dpi 下 1dp 就等于 2px</p><p>dpi 决定了应用在显示 drawable 时是选择哪一个文件夹内的切图。每个 drawable 文件夹都对应不同的 dpi 大小，Android 系统会自动根据当前手机的实际 dpi 大小从合适的 drawable 文件夹内选取图片，不同的后缀名对应的 dpi 大小就如以下表格所示。<strong>如果 drawable 文件夹名不带后缀，那么该文件夹就对应 160dpi</strong></p><table><thead><tr><th>drawable</th><th>dpi</th></tr></thead><tbody><tr><td>ldpi</td><td>120 dpi</td></tr><tr><td>mdpi</td><td>160 dpi</td></tr><tr><td>hdpi</td><td>240 dpi</td></tr><tr><td>xhdpi</td><td>320 dpi</td></tr><tr><td>xxhdpi</td><td>480 dpi</td></tr><tr><td>xxxhdpi</td><td>640 dpi</td></tr></tbody></table><p>举个例子。对于 320dpi 的设备来说，应用在选择图片时就会优先从 <code>drawable-xhdpi</code> 文件夹拿，如果该文件夹内没找到图片，就会依照 <code>xxhdpi -&gt; xxxhdpi -&gt; hdpi -&gt; mdpi -&gt; ldpi</code> 的顺序进行查找，<strong>优先使用高密度版本，然后从中选择最接近当前屏幕密度的图片资源</strong></p><h1 id="_2、内存大小的计算公式" tabindex="-1"><a class="header-anchor" href="#_2、内存大小的计算公式" aria-hidden="true">#</a> 2、内存大小的计算公式</h1><p>先将一张大小为 1920 x 1080 px 的图片保存到 <code>drawable-xxhdpi</code> 文件夹内，然后将其显示在一个宽高均为 180dp 的 ImageView 上，该 Bitmap 所占用的内存就通过 <code>bitmap.byteCount</code>来获取</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> options <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> bitmap <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>icon_awe<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
imageView<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;imageView width: &quot;</span></span> <span class="token operator">+</span> imageView<span class="token punctuation">.</span>width<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;imageView height: &quot;</span></span> <span class="token operator">+</span> imageView<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap width: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>width<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap height: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap config: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>config<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;inDensity: &quot;</span></span> <span class="token operator">+</span> options<span class="token punctuation">.</span>inDensity<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;inTargetDensity: &quot;</span></span> <span class="token operator">+</span> options<span class="token punctuation">.</span>inTargetDensity<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap byteCount: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>byteCount<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>BitmapMainActivity<span class="token operator">:</span> imageView width<span class="token operator">:</span> <span class="token number">540</span>
BitmapMainActivity<span class="token operator">:</span> imageView height<span class="token operator">:</span> <span class="token number">540</span>
BitmapMainActivity<span class="token operator">:</span> bitmap width<span class="token operator">:</span> <span class="token number">1920</span>
BitmapMainActivity<span class="token operator">:</span> bitmap height<span class="token operator">:</span> <span class="token number">1080</span>
BitmapMainActivity<span class="token operator">:</span> bitmap config<span class="token operator">:</span> ARGB_8888
BitmapMainActivity<span class="token operator">:</span> inDensity<span class="token operator">:</span> <span class="token number">480</span>
BitmapMainActivity<span class="token operator">:</span> inTargetDensity<span class="token operator">:</span> <span class="token number">480</span>
BitmapMainActivity<span class="token operator">:</span> bitmap byteCount<span class="token operator">:</span> <span class="token number">8294400</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>由于模拟器的 density 等于 3，所以 ImageView 的宽高都是 540 px</li><li>Bitmap 的宽高还是保持其原有大小，即1920 x 1080 px</li><li>ARGB_8888 代表的是该 Bitmap 的编码格式，该格式下一个像素点需要占用 4 byte</li><li><code>inDensity</code> 代表的是系统最终选择的 drawable 文件夹类型，等于 480 说明取的是 <code>drawable-xxhdpi</code>文件夹下的图片</li><li><code>inTargetDensity</code> 代表的是当前设备的 dpi</li><li>8294400 就是 Bitmap 所占用的内存大小，单位是 byte</li></ul><p>从最终结果可以很容易地就逆推出 Bitmap 所占内存大小的计算公式：<strong>bitmapWidth * bitmapHeight * 单位像素点所占用的字节数</strong>，即 1920 * 1080 * 4 = 8294400</p><h1 id="_3、和-drawable-文件夹的关系" tabindex="-1"><a class="header-anchor" href="#_3、和-drawable-文件夹的关系" aria-hidden="true">#</a> 3、和 drawable 文件夹的关系</h1><p>上面之所以很容易就逆推出了 Bitmap 所占内存大小的计算公式，是因为所有条件都被我故意设定为最优情况了，才使得计算过程这么简单。而实际上 Bitmap 所占内存大小和其所在的 drawable 文件夹是有很大关系的，虽然计算公式没变</p><p>现在的大部分应用为了达到最优的显示效果，会为应用准备多套切图放在不同的 drawable 文件夹下，而<code>BitmapFactory.decodeResource</code> 方法在解码 Bitmap 的时候，就会自动根据当前设备的 dpi 和 drawable 文件夹类型来判断是否需要对图片进行缩放显示</p><p>将图片从 <code>drawable-xxhdpi</code>迁移到 <code>drawable-xhdpi</code>文件夹，然后再打印日志信息</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>BitmapMainActivity<span class="token operator">:</span> imageView width<span class="token operator">:</span> <span class="token number">540</span>
BitmapMainActivity<span class="token operator">:</span> imageView height<span class="token operator">:</span> <span class="token number">540</span>
BitmapMainActivity<span class="token operator">:</span> bitmap width<span class="token operator">:</span> <span class="token number">2880</span>
BitmapMainActivity<span class="token operator">:</span> bitmap height<span class="token operator">:</span> <span class="token number">1620</span>
BitmapMainActivity<span class="token operator">:</span> bitmap config<span class="token operator">:</span> ARGB_8888
BitmapMainActivity<span class="token operator">:</span> inDensity<span class="token operator">:</span> <span class="token number">320</span>
BitmapMainActivity<span class="token operator">:</span> inTargetDensity<span class="token operator">:</span> <span class="token number">480</span>
BitmapMainActivity<span class="token operator">:</span> bitmap byteCount<span class="token operator">:</span> <span class="token number">18662400</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，Bitmap 的宽高都发生了变化，<code>inDensity</code> 等于 320 也说明了选取的是<code>drawable-xhdpi</code>文件夹内的图片，Bitmap 所占内存居然增加了一倍多</p><p>模拟器的 dpi 是 480，拿到了 dpi 为 320 的<code>drawable-xhdpi</code>文件夹下的图片，在系统的理解中该文件夹存放的都是小图标，是为小屏幕手机准备的，现在要在大屏幕手机上展示的话就需要对其进行放大，放大的比例就是 480 / 320 = 1.5 倍，因此 Bitmap 的宽就会变为 1920 * 1.5 = 2880 px，高就会变为 1080 * 1.5 = 1620 px，最终占用的内存空间大小就是 2880 * 1620 * 4 = 18662400</p><p>所以说，对于同一台手机，Bitmap 在不同 drawable 文件夹下对其最终占用的内存大小是有很大关系的，虽然计算公式没变，但是由于系统会进行自动缩放，导致 Bitmap 的最终宽高都发生了变化，从而影响到了其占用的内存空间大小。同理，对于同个 drawable 文件夹下的同一张图片，在不同的手机屏幕上也可能会占用不同的内存空间，因为不同的手机的 dpi 大小可能是不一样的，BitmapFactory 进行缩放的比例也就不一样</p><h1 id="_4、和-imageview-的宽高的关系" tabindex="-1"><a class="header-anchor" href="#_4、和-imageview-的宽高的关系" aria-hidden="true">#</a> 4、和 ImageView 的宽高的关系</h1><p>在上一个例子里，Bitmap 的宽高是 2880 * 1620 px，ImageView 的宽高是 540 * 540 px，该 Bitmap 肯定是会显示不全的，读者可以试着自己改变 ImageView 的宽高大小来验证是否会对 Bitmap 的大小产生影响</p><p>这里就不贴代码了，直接来说结论，答案是<strong>没有关系</strong>。原因也很简单，毕竟上述例子是先将 Bitmap 加载到内存中后再设置给 ImageView 的，ImageView 自然不会影响到 Bitmap 的加载过程，该 Bitmap 的大小也只受<strong>其所在的 drawable 文件夹类型</strong>以及<strong>手机的 dpi 大小</strong>这两个因素的影响。但这个结论是需要考虑测试方式的，如果你是使用 Glide 来加载图片，Glide 内部实现了按需加载的机制，会根据 ImageView 的大小对 Bitmap 进行自动缩放，避免内存浪费的情况，这种情况下 ImageView 的宽高就会影响到 Bitmap 的内存大小了</p><h1 id="_5、bitmapfactory" tabindex="-1"><a class="header-anchor" href="#_5、bitmapfactory" aria-hidden="true">#</a> 5、BitmapFactory</h1><p>BitmapFactory 提供了很多个方法用于加载 Bitmap 对象：<code>decodeFile、decodeResourceStream、decodeResource、decodeByteArray、decodeStream</code> 等多个，但只有 <code>decodeResourceStream</code> 和 <code>decodeResource</code> 这两个方法才会根据 dpi 进行自动缩放。如果是从磁盘或者 assert 目录加载图片的话是不会进行自动缩放的，毕竟这些来源也不具备 dpi 信息，Bitmap 的分辨率也只能保持其原有大小</p><p><code>decodeResource</code> 方法也会调用到<code>decodeResourceStream</code>方法，<code>decodeResourceStream</code>方法如果判断到<code>inDensity</code> 和 <code>inTargetDensity</code> 两个属性外部没有主动赋值的话，就会根据实际情况进行赋值</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Nullable</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Bitmap</span> <span class="token function">decodeResourceStream</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Resources</span> res<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">TypedValue</span> value<span class="token punctuation">,</span>
        <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">InputStream</span> is<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Rect</span> pad<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Options</span> opts<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">validate</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        opts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>inDensity <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> density <span class="token operator">=</span> value<span class="token punctuation">.</span>density<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>density <span class="token operator">==</span> <span class="token class-name">TypedValue</span><span class="token punctuation">.</span><span class="token constant">DENSITY_DEFAULT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//如果 density 没有赋值的话（等于0），那么就使用基准值 160 dpi</span>
            opts<span class="token punctuation">.</span>inDensity <span class="token operator">=</span> <span class="token class-name">DisplayMetrics</span><span class="token punctuation">.</span><span class="token constant">DENSITY_DEFAULT</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>density <span class="token operator">!=</span> <span class="token class-name">TypedValue</span><span class="token punctuation">.</span><span class="token constant">DENSITY_NONE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//在这里进行赋值，density 就等于 drawable 对应的 dpi</span>
            opts<span class="token punctuation">.</span>inDensity <span class="token operator">=</span> density<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>  
    <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>inTargetDensity <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> res <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//如果没有主动设置 inTargetDensity 的话，inTargetDensity 就等于设备的 dpi</span>
        opts<span class="token punctuation">.</span>inTargetDensity <span class="token operator">=</span> res<span class="token punctuation">.</span><span class="token function">getDisplayMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>densityDpi<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">decodeStream</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span> pad<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_6、bitmapconfig" tabindex="-1"><a class="header-anchor" href="#_6、bitmapconfig" aria-hidden="true">#</a> 6、BitmapConfig</h1><p>Bitmap.Config 定义了四种常见的编码格式，分别是：</p><ul><li>ALPHA_8。每个像素点需要一个字节的内存，只存储位图的透明度，没有颜色信息</li><li>ARGB_4444。A(Alpha)、R(Red)、G(Green)、B（Blue）各占四位精度，共计十六位的精度，折合两个字节，也就是说一个像素点占两个字节的内存，会存储位图的透明度和颜色信息</li><li>ARGB_8888。ARGB 各占八个位的精度，折合四个字节，会存储位图的透明度和颜色信息</li><li>RGB_565。R占五位精度，G占六位精度，B占五位精度，一共是十六位精度，折合两个字节，只存储颜色信息，没有透明度信息</li></ul><h1 id="_7、优化-bitmap" tabindex="-1"><a class="header-anchor" href="#_7、优化-bitmap" aria-hidden="true">#</a> 7、优化 Bitmap</h1><p>根据 Bitmap 所占内存大小的计算公式：<strong>bitmapWidth * bitmapHeight * 单位像素点所占用的字节数</strong>，想要尽量减少 Bitmap 占用的内存大小的话就要从<strong>降低图片分辨率</strong>和<strong>降低单位像素需要的字节数</strong>这两方面来考虑了</p><p>在一开始的情况下加载到的 Bitmap 的宽高是 1920 * 1080，占用的内存空间是 1920 * 1080 * 4 = 8294400，约 7.9 MB，这是优化前的状态</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> options <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> bitmap <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>icon_awe<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
imageView<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap width: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>width<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap height: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap config: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>config<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;inDensity: &quot;</span></span> <span class="token operator">+</span> options<span class="token punctuation">.</span>inDensity<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;inTargetDensity: &quot;</span></span> <span class="token operator">+</span> options<span class="token punctuation">.</span>inTargetDensity<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap byteCount: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>byteCount<span class="token punctuation">)</span>

BitmapMainActivity<span class="token operator">:</span> bitmap width<span class="token operator">:</span> <span class="token number">1920</span>
BitmapMainActivity<span class="token operator">:</span> bitmap height<span class="token operator">:</span> <span class="token number">1080</span>
BitmapMainActivity<span class="token operator">:</span> bitmap config<span class="token operator">:</span> ARGB_8888
BitmapMainActivity<span class="token operator">:</span> inDensity<span class="token operator">:</span> <span class="token number">480</span>
BitmapMainActivity<span class="token operator">:</span> inTargetDensity<span class="token operator">:</span> <span class="token number">480</span>
BitmapMainActivity<span class="token operator">:</span> bitmap byteCount<span class="token operator">:</span> <span class="token number">8294400</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1、insamplesize" tabindex="-1"><a class="header-anchor" href="#_1、insamplesize" aria-hidden="true">#</a> 1、inSampleSize</h2><p>由于 ImageView 的宽高只有 540 * 540 px，如果按照原图进行加载的话其实会造成很大的内存浪费，此时我们就可以通过 inSampleSize 属性来压缩图片尺寸</p><p>例如，将 inSampleSize 设置为 2 后，Bitmap 的宽高就都会缩减为原先的一半，占用的内存空间就变成了原先的四分之一， 960 * 540 * 4 = 2073600，约 1.9 MB</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> options <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
options<span class="token punctuation">.</span>inSampleSize <span class="token operator">=</span> <span class="token number">2</span>
<span class="token keyword">val</span> bitmap <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>icon_awe<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
imageView<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap width: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>width<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap height: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap config: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>config<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;inDensity: &quot;</span></span> <span class="token operator">+</span> options<span class="token punctuation">.</span>inDensity<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;inTargetDensity: &quot;</span></span> <span class="token operator">+</span> options<span class="token punctuation">.</span>inTargetDensity<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap byteCount: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>byteCount<span class="token punctuation">)</span>

BitmapMainActivity<span class="token operator">:</span> bitmap width<span class="token operator">:</span> <span class="token number">960</span>
BitmapMainActivity<span class="token operator">:</span> bitmap height<span class="token operator">:</span> <span class="token number">540</span>
BitmapMainActivity<span class="token operator">:</span> bitmap config<span class="token operator">:</span> ARGB_8888
BitmapMainActivity<span class="token operator">:</span> inDensity<span class="token operator">:</span> <span class="token number">480</span>
BitmapMainActivity<span class="token operator">:</span> inTargetDensity<span class="token operator">:</span> <span class="token number">480</span>
BitmapMainActivity<span class="token operator">:</span> bitmap byteCount<span class="token operator">:</span> <span class="token number">2073600</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出来，inSampleSize 属性应该设置多少是需要根据 <strong>Bitmap 的实际宽高</strong>和 <strong>ImageView 的实际宽高</strong>这两个条件来一起决定的。我们在正式加载 Bitmap 前要先获取到 Bitmap 的实际宽高大小，这可以通过 inJustDecodeBounds 属性来实现。设置 inJustDecodeBounds 为 true 后 <code>decodeResource</code>方法只会去读取 Bitmap 的宽高属性而不会去进行实际加载，这个操作是比较轻量级的。然后通过每次循环对半折减，计算出 inSampleSize 需要设置为多少才能尽量接近到 ImageView 的实际宽高，之后将 inJustDecodeBounds 设置为 false 去实际加载 Bitmap</p><p>需要注意的是，inSampleSize 使用的最终值将是向下舍入为最接近的 2 的幂，BitmapFactory 内部会自动会该值进行校验修正</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> options <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
options<span class="token punctuation">.</span>inJustDecodeBounds <span class="token operator">=</span> <span class="token boolean">true</span>
BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>icon_awe<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
<span class="token keyword">val</span> inSampleSize <span class="token operator">=</span> <span class="token function">calculateInSampleSize</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> imageView<span class="token punctuation">.</span>width<span class="token punctuation">,</span> imageView<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
options<span class="token punctuation">.</span>inSampleSize <span class="token operator">=</span> inSampleSize
options<span class="token punctuation">.</span>inJustDecodeBounds <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token keyword">val</span> bitmap <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>icon_awe<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
imageView<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span>


<span class="token keyword">fun</span> <span class="token function">calculateInSampleSize</span><span class="token punctuation">(</span>options<span class="token operator">:</span> BitmapFactory<span class="token punctuation">.</span>Options<span class="token punctuation">,</span> reqWidth<span class="token operator">:</span> Int<span class="token punctuation">,</span> reqHeight<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">{</span>
    <span class="token comment">// Raw height and width of image</span>
    <span class="token keyword">val</span> <span class="token punctuation">(</span>height<span class="token operator">:</span> Int<span class="token punctuation">,</span> width<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">run</span> <span class="token punctuation">{</span> outHeight <span class="token keyword">to</span> outWidth <span class="token punctuation">}</span>
    <span class="token keyword">var</span> inSampleSize <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>height <span class="token operator">&gt;</span> reqHeight <span class="token operator">||</span> width <span class="token operator">&gt;</span> reqWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">val</span> halfHeight<span class="token operator">:</span> Int <span class="token operator">=</span> height <span class="token operator">/</span> <span class="token number">2</span>
        <span class="token keyword">val</span> halfWidth<span class="token operator">:</span> Int <span class="token operator">=</span> width <span class="token operator">/</span> <span class="token number">2</span>
        <span class="token comment">// Calculate the largest inSampleSize value that is a power of 2 and keeps both</span>
        <span class="token comment">// height and width larger than the requested height and width.</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>halfHeight <span class="token operator">/</span> inSampleSize <span class="token operator">&gt;=</span> reqHeight <span class="token operator">&amp;&amp;</span> halfWidth <span class="token operator">/</span> inSampleSize <span class="token operator">&gt;=</span> reqWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            inSampleSize <span class="token operator">*=</span> <span class="token number">2</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> inSampleSize
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、intargetdensity" tabindex="-1"><a class="header-anchor" href="#_2、intargetdensity" aria-hidden="true">#</a> 2、inTargetDensity</h2><p>如果我们不主动设置 inTargetDensity 的话，<code>decodeResource</code> 方法会自动根据当前设备的 dpi 来对 Bitmap 进行缩放处理，我们可以通过主动设置 inTargetDensity 来控制缩放比例，从而控制 Bitmap 的最终宽高。最终宽高的生成规则： 180 / 480 * 1920 = 720，180 / 480 * 1080 = 405，占用的内存空间是 720 * 405 * 4 = 1166400，约 1.1 MB</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> options <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
options<span class="token punctuation">.</span>inTargetDensity <span class="token operator">=</span> <span class="token number">180</span>
<span class="token keyword">val</span> bitmap <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>icon_awe<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
imageView<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap width: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>width<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap height: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap config: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>config<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;inDensity: &quot;</span></span> <span class="token operator">+</span> options<span class="token punctuation">.</span>inDensity<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;inTargetDensity: &quot;</span></span> <span class="token operator">+</span> options<span class="token punctuation">.</span>inTargetDensity<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap byteCount: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>byteCount<span class="token punctuation">)</span>

BitmapMainActivity<span class="token operator">:</span> bitmap width<span class="token operator">:</span> <span class="token number">720</span>
BitmapMainActivity<span class="token operator">:</span> bitmap height<span class="token operator">:</span> <span class="token number">405</span>
BitmapMainActivity<span class="token operator">:</span> bitmap config<span class="token operator">:</span> ARGB_8888
BitmapMainActivity<span class="token operator">:</span> inDensity<span class="token operator">:</span> <span class="token number">480</span>
BitmapMainActivity<span class="token operator">:</span> inTargetDensity<span class="token operator">:</span> <span class="token number">480</span>
BitmapMainActivity<span class="token operator">:</span> bitmap byteCount<span class="token operator">:</span> <span class="token number">1166400</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、bitmap-config" tabindex="-1"><a class="header-anchor" href="#_3、bitmap-config" aria-hidden="true">#</a> 3、Bitmap.Config</h2><p>BitmapFactory 默认使用的编码图片格式是 ARGB_8888，每个像素点占用四个字节，我们可以按需改变要采用的图片格式。例如，如果要加载的 Bitmap 不包含透明通道的，我们可以使用 RGB_565，该格式每个像素点占用两个字节，占用的内存空间是 1920 * 1080 * 2 = 4147200，约 3.9 MB</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> options <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
options<span class="token punctuation">.</span>inPreferredConfig <span class="token operator">=</span> Bitmap<span class="token punctuation">.</span>Config<span class="token punctuation">.</span>RGB_565
<span class="token keyword">val</span> bitmap <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>icon_awe<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
imageView<span class="token punctuation">.</span><span class="token function">setImageBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap width: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>width<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap height: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap config: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>config<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;inDensity: &quot;</span></span> <span class="token operator">+</span> options<span class="token punctuation">.</span>inDensity<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;inTargetDensity: &quot;</span></span> <span class="token operator">+</span> options<span class="token punctuation">.</span>inTargetDensity<span class="token punctuation">)</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;bitmap byteCount: &quot;</span></span> <span class="token operator">+</span> bitmap<span class="token punctuation">.</span>byteCount<span class="token punctuation">)</span>

BitmapMainActivity<span class="token operator">:</span> bitmap width<span class="token operator">:</span> <span class="token number">1920</span>
BitmapMainActivity<span class="token operator">:</span> bitmap height<span class="token operator">:</span> <span class="token number">1080</span>
BitmapMainActivity<span class="token operator">:</span> bitmap config<span class="token operator">:</span> RGB_565
BitmapMainActivity<span class="token operator">:</span> inDensity<span class="token operator">:</span> <span class="token number">480</span>
BitmapMainActivity<span class="token operator">:</span> inTargetDensity<span class="token operator">:</span> <span class="token number">480</span>
BitmapMainActivity<span class="token operator">:</span> bitmap byteCount<span class="token operator">:</span> <span class="token number">4147200</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,57);function k(m,v){const a=p("ExternalLinkIcon");return e(),o("div",null,[n("blockquote",null,[n("p",null,[s("公众号："),n("a",u,[s("字节数组"),i(a)])]),r]),d])}const h=t(l,[["render",k],["__file","探究 Bitmap 的优化手段.html.vue"]]);export{h as default};
