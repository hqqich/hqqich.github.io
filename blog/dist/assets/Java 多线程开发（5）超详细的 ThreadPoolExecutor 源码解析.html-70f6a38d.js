const e=JSON.parse('{"key":"v-2a904758","path":"/md/kotlin/Java%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%BC%80%E5%8F%91%EF%BC%885%EF%BC%89%E8%B6%85%E8%AF%A6%E7%BB%86%E7%9A%84%20ThreadPoolExecutor%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90.html","title":"Java 多线程开发（5）超详细的 ThreadPoolExecutor 源码解析","lang":"zh-CN","frontmatter":{"title":"Java 多线程开发（5）超详细的 ThreadPoolExecutor 源码解析","index":false,"icon":"laptop-code","category":"kotlin","description":"公众号：字节数组 (https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/adbc507fc3704fd8955aae739a433db2~tplv-k3u1fbpfcp-zoom-1.image) 希望对你有所帮助 🤣🤣 目前，多线程编程可以说是在大部分平台和应用上都需要实现的一个基本需求。本系列文章...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/blog/dist/md/kotlin/Java%20%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%BC%80%E5%8F%91%EF%BC%885%EF%BC%89%E8%B6%85%E8%AF%A6%E7%BB%86%E7%9A%84%20ThreadPoolExecutor%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"blog"}],["meta",{"property":"og:title","content":"Java 多线程开发（5）超详细的 ThreadPoolExecutor 源码解析"}],["meta",{"property":"og:description","content":"公众号：字节数组 (https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/adbc507fc3704fd8955aae739a433db2~tplv-k3u1fbpfcp-zoom-1.image) 希望对你有所帮助 🤣🤣 目前，多线程编程可以说是在大部分平台和应用上都需要实现的一个基本需求。本系列文章..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-06T07:53:08.000Z"}],["meta",{"property":"article:author","content":"hqqich"}],["meta",{"property":"article:modified_time","content":"2024-02-06T07:53:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 多线程开发（5）超详细的 ThreadPoolExecutor 源码解析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-02-06T07:53:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"hqqich\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1、线程池的状态如何保存","slug":"_1、线程池的状态如何保存","link":"#_1、线程池的状态如何保存","children":[]},{"level":2,"title":"2、线程的创建流程","slug":"_2、线程的创建流程","link":"#_2、线程的创建流程","children":[]},{"level":2,"title":"3、线程的执行流程","slug":"_3、线程的执行流程","link":"#_3、线程的执行流程","children":[]},{"level":2,"title":"4、线程的回收流程","slug":"_4、线程的回收流程","link":"#_4、线程的回收流程","children":[]},{"level":2,"title":"5、线程池的关闭流程","slug":"_5、线程池的关闭流程","link":"#_5、线程池的关闭流程","children":[]},{"level":2,"title":"6、任务队列的选择","slug":"_6、任务队列的选择","link":"#_6、任务队列的选择","children":[]},{"level":2,"title":"7、任务的拒绝策略","slug":"_7、任务的拒绝策略","link":"#_7、任务的拒绝策略","children":[]},{"level":2,"title":"8、监控线程池的运行状态","slug":"_8、监控线程池的运行状态","link":"#_8、监控线程池的运行状态","children":[]},{"level":2,"title":"1、线程池死锁","slug":"_1、线程池死锁","link":"#_1、线程池死锁","children":[]},{"level":2,"title":"2、线程泄漏","slug":"_2、线程泄漏","link":"#_2、线程泄漏","children":[]}],"git":{"createdTime":1707205988000,"updatedTime":1707205988000,"contributors":[{"name":"hqqich","email":"hqqich1314@outlook.com","commits":1}]},"readingTime":{"minutes":44.1,"words":13231},"filePathRelative":"md/kotlin/Java 多线程开发（5）超详细的 ThreadPoolExecutor 源码解析.md","localizedDate":"2024年2月6日","autoDesc":true}');export{e as data};
