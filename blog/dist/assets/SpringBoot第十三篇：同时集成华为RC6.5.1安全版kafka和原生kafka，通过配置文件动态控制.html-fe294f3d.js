import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c,a,d as n,e as t,f as l}from"./app-6847d3e4.js";const i={},u=l(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><blockquote><p>最近又收到新需求，原本项目已经集成了开源kafka进行功能开发，但是又因为开源的kafka不稳定，也不安全，所以就要求要集成华为RC6.5.1安全版kafka，并且能够跟开源的kafka进行动态切换，想用哪个用哪个。。</p></blockquote><blockquote><p>注意：kafka集成是通过bean管理，所以有注册bean的操作</p></blockquote><blockquote><p>废话不多说，开搞，我把我经历的踩坑和埋坑经验分享给有需要的人</p></blockquote><h2 id="解决了哪些问题" tabindex="-1"><a class="header-anchor" href="#解决了哪些问题" aria-hidden="true">#</a> 解决了哪些问题</h2><h4 id="_1-如何通过配置文件控制初始化注册哪个版本的kafka的bean" tabindex="-1"><a class="header-anchor" href="#_1-如何通过配置文件控制初始化注册哪个版本的kafka的bean" aria-hidden="true">#</a> 1.如何通过配置文件控制初始化注册哪个版本的kafka的bean</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>简单说怎么解让springboot在启动时动态根据配置文件的配置项确定初始化注册指定版本的kafka的bean呢？
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>使用<code>@Bean</code>+<code>@ConditionalOnPoroperty</code>+<code>@ConditionalOnMissingBean</code>做到可通过配置文件进行动态初始化</p></blockquote><p>示例：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token class-name">KafkaInitAutoConfigure</span><span class="token punctuation">{</span>

	<span class="token annotation punctuation">@Bean</span>
	<span class="token annotation punctuation">@ConditionalOnPoroperty</span><span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">&quot;kafka&quot;</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> havingValue<span class="token operator">=</span><span class="token string">&quot;apache&quot;</span><span class="token punctuation">)</span>
	<span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">KafkaInitTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">ApacheKafkaTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">KafkaInitTemplate</span> <span class="token function">apacheKafkaTemplateInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//初始化apache开源kafka的逻辑</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Bean</span>
	<span class="token annotation punctuation">@ConditionalOnPoroperty</span><span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">&quot;kafka&quot;</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> havingValue<span class="token operator">=</span><span class="token string">&quot;huawei&quot;</span><span class="token punctuation">)</span>
	<span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">KafkaInitTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">HuaweiKafkaTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">HuaweiKafkaTemplate</span> <span class="token function">huaweiKafkaTemplateInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//初始化华为安全版kafka的逻辑</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">kafka</span><span class="token punctuation">:</span>
	<span class="token comment"># 选择使用开源版的kafka</span>
	<span class="token key atrule">type</span><span class="token punctuation">:</span> apache
	<span class="token comment"># 选择使用华为安全版的kafka</span>
	<span class="token comment"># type: huawei</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-认证文件读取问题" tabindex="-1"><a class="header-anchor" href="#_2-认证文件读取问题" aria-hidden="true">#</a> 2.认证文件读取问题</h4><p>使用华为安全版RC6.5.1，需要使用<code>krb5.conf</code>、<code>user.keytab</code>、以及jass.conf文件<br><code>jass.conf</code>文件可代码生成，也可自己创建填写，内容格式如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">KafkaClient</span> <span class="token punctuation">{</span>
<span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>security<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>module<span class="token punctuation">.</span></span>Krb5LoginModule</span> required
useKeyTab<span class="token operator">=</span><span class="token boolean">true</span>
keyTab<span class="token operator">=</span><span class="token string">&quot;src/main/resources/user.keytab&quot;</span>
principal<span class="token operator">=</span><span class="token string">&quot;developuser&quot;</span>
useTicketCache<span class="token operator">=</span><span class="token boolean">false</span>
storeKey<span class="token operator">=</span><span class="token boolean">true</span>
debug<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
refreshKrb5Config<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>keyTab</code>为<code>user.keytab</code>文件的绝对路径，<code>principal</code>是认证用户.<br> 就如<code>jass.conf</code>文件中keytab的路径要求是一个绝对路径，所以，你的项目如果打成jar包去运行的话，就得考虑把这个认证文件放在一个固定的路径。<br> 如果你是上k8s，也不用担心，挂载对应的路径去读取就好了。</p><h4 id="_3-运行报错-could-not-login-the-client-is-being" tabindex="-1"><a class="header-anchor" href="#_3-运行报错-could-not-login-the-client-is-being" aria-hidden="true">#</a> 3.运行报错：could not login: the client is being …</h4><blockquote><p>如果运行时初始化kafka生产者出现这个错误，一定是你的认证文件不正确，或者<code>jass.conf</code>中的配置信息填写不正确</p></blockquote><ul><li>仔仔细细确认程序读取的那两个认证文件是否正确</li><li>仔仔细细确认<code>jass.conf</code>中配置的<code>user.keytab</code>路径是否正确</li><li>仔仔细细确认<code>jass.conf</code>中配置的<code>principal</code>是否正确</li></ul><h4 id="_4-运行报错-clock-skew-too-great-37-process-tgs" tabindex="-1"><a class="header-anchor" href="#_4-运行报错-clock-skew-too-great-37-process-tgs" aria-hidden="true">#</a> 4. 运行报错：Clock skew too great (37) - PROCESS_TGS</h4><blockquote><p>原因就是：客户端和服务器系统时间相隔超过5分钟</p></blockquote><p>确认下两个系统之间的时间之差吧，通过相应的命令修改好即可<br> 注意：k8s启动的服务是看配置的时区是什么，即<code>timezone</code>，并不是所谓的系统时间。</p><h4 id="_5-运行报错-server-not-found-in-kerberos-database-7-looking-up-server" tabindex="-1"><a class="header-anchor" href="#_5-运行报错-server-not-found-in-kerberos-database-7-looking-up-server" aria-hidden="true">#</a> 5. 运行报错：Server not found in Kerberos database (7) - LOOKING_UP_SERVER</h4><blockquote><p>原因：是因为kafka-clients版本问题</p></blockquote><p>要使用华为提供的kafka-clients，它兼容开源的kafka-clients，不用担心使用它，就不能切换到开源版的kafka</p><h2 id="完整的【同时集成华为rc6-5-1安全版kafka和原生kafka-通过配置文件动态控制】的代码如下" tabindex="-1"><a class="header-anchor" href="#完整的【同时集成华为rc6-5-1安全版kafka和原生kafka-通过配置文件动态控制】的代码如下" aria-hidden="true">#</a> 完整的【同时集成华为RC6.5.1安全版kafka和原生kafka，通过配置文件动态控制】的代码如下</h2><p>kafka自动装配类：<code>KafkaInitAutoConfigure.java</code><br> 作用：用于项目启动时，根据指定配置初始化指定类型的kafkaTemple的bean，以便在各个service层使用。同一返回KafkaInitTemplate便于统一使用KafkaInitTemplate去进行kafka的生产和消费，关键在于底层的生产和消费使用不同的版本kafka即可，不需要把所有的类型都引用一遍</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableConfigurationProperties</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">KafkaInitProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">HuaweiKafkaProperties</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@AutoConfigureAfter</span><span class="token punctuation">(</span><span class="token class-name">KafkaAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">KafkaInitAutoConfigure</span><span class="token punctuation">{</span>
	
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">KafkaInitAutoConfigure</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>

	<span class="token annotation punctuation">@Bean</span>
	<span class="token annotation punctuation">@ConditionalOnPoroperty</span><span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">&quot;kafka&quot;</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> havingValue<span class="token operator">=</span><span class="token string">&quot;apache&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">KafkaInitTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">ApacheKafkaTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">KafkaInitTemplate</span> <span class="token function">apacheKafkaTemplateInit</span><span class="token punctuation">(</span><span class="token class-name">KafkaTemplate</span> kafkaTemplate<span class="token punctuation">,</span> <span class="token class-name">ComsumerFactory</span> consumerFactory<span class="token punctuation">,</span> <span class="token class-name">KafkaInitProperties</span> kafkaInitProperties<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
		<span class="token comment">//初始化apache开源kafka的逻辑</span>
		logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;初始化apache的kafka&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">KafkaInitTemplate</span> kafkaInitTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KafkaInitTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		kafkaInitTemplate<span class="token punctuation">.</span><span class="token function">setKafkaInitProperties</span><span class="token punctuation">(</span>kafkaInitProperties<span class="token punctuation">)</span><span class="token punctuation">;</span>
		kafkaInitTemplate<span class="token punctuation">.</span><span class="token function">setKafkaTemplate</span><span class="token punctuation">(</span>kafkaTemplate<span class="token punctuation">)</span><span class="token punctuation">;</span>
		kafkaInitTemplate<span class="token punctuation">.</span><span class="token function">setComsumerFactory</span><span class="token punctuation">(</span>consumerFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
		kafkaInitTemplate<span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span>  kafkaInitTemplate<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Bean</span>
	<span class="token annotation punctuation">@ConditionalOnPoroperty</span><span class="token punctuation">(</span>prefix<span class="token operator">=</span><span class="token string">&quot;kafka&quot;</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> havingValue<span class="token operator">=</span><span class="token string">&quot;huawei&quot;</span><span class="token punctuation">)</span>
	<span class="token annotation punctuation">@ConditionalOnMissingBean</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">KafkaInitTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token class-name">HuaweiKafkaTemplate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">KafkaInitTemplate</span> <span class="token function">huaweiKafkaTemplateInit</span><span class="token punctuation">(</span><span class="token class-name">HuaweiKafkaProperties</span> huaweiKafkaProperties<span class="token punctuation">,</span><span class="token class-name">KafkaInitProperties</span> kafkaInitProperties<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
		<span class="token comment">//初始化华为安全版kafka的逻辑</span>
		logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;初始化apache的kafka&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">KafkaInitTemplate</span> kafkaInitTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KafkaInitTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		kafkaInitTemplate<span class="token punctuation">.</span><span class="token function">setKafkaInitProperties</span><span class="token punctuation">(</span>kafkaInitProperties<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">HuaweiKafkaTemplate</span> huaweiKafkaTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HuaweiKafkaTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		kafkaInitTemplate<span class="token punctuation">.</span><span class="token function">setHuaweiKafkaTemplate</span><span class="token punctuation">(</span>huaweiKafkaTemplate<span class="token punctuation">)</span><span class="token punctuation">;</span>
		kafkaInitTemplate<span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span>  kafkaInitTemplate<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>统一处理的kafka处理类：<code>KafkaInitTemplate.java</code><br> 作用：提供一个各个类型的kafka装饰类，提供各个类型kafka的get和set方法，以及配置文件的get和set。提供send（生产）和recieve（消费）两个方法，recieve（消费）提供一个监听器，你可以通过代码起一个线程异步实时监听获取kafka消息</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">KafkaInitTemplate</span> <span class="token keyword">implements</span> <span class="token class-name">InitalizingBean</span><span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">KafkaInitProperties</span> kafkaInitProperties<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">KafkaTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> kafkaTemplate<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">ConsumerFactory</span> consumerFactory<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token class-name">HuaweiKafkaTemplate</span> huaweiKafkaTemplate；
	
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
		<span class="token keyword">switch</span><span class="token punctuation">(</span>kafkaInitProperties<span class="token punctuation">.</span>getKafkaType<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">case</span> <span class="token string">&quot;huawei&quot;</span><span class="token operator">:</span>
				<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span>huaweiKafkaTemplate <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;huaweiKafkaTemplate未初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">default</span><span class="token operator">:</span>
			    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span>kafkaTemplate <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;kafkaTemplate未初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span>consumerFactory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;consumerFactory未初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">KafkaTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getKafkaTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span>kafkaTemplate <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;kafkaTemplate未初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> kafkaTemplate<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setKafkaTemplate</span><span class="token punctuation">(</span><span class="token class-name">KafkaTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> kafkaTemplate<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>kafkaTemplate <span class="token operator">=</span> kafkaTemplate<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">KafkaInitProperties</span> <span class="token function">getKafkaInitProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">return</span> kafkaInitProperties<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setKafkaInitProperties</span><span class="token punctuation">(</span><span class="token class-name">KafkaInitProperties</span> kafkaInitProperties<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>kafkaInitProperties <span class="token operator">=</span> kafkaInitProperties<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">ConsumerFactory</span> <span class="token function">getConsumerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span>consumerFactory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;consumerFactory未初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> consumerFactory<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setConsumerFactory</span><span class="token punctuation">(</span><span class="token class-name">ConsumerFactory</span> consumerFactory<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>consumerFactory <span class="token operator">=</span> consumerFactory<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">HuaweiKafkaTemplate</span> <span class="token function">getHuaweiKafkaTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span>huaweiKafkaTemplate <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;huaweiKafkaTemplate未初始化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> huaweiKafkaTemplate<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setKafkaTemplate</span><span class="token punctuation">(</span><span class="token class-name">HuaweiKafkaTemplate</span> huaweiKafkaTemplate<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>huaweiKafkaTemplate <span class="token operator">=</span> huaweiKafkaTemplate<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	* 往指定topic生产发布消息
	*/</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span><span class="token string">&quot;topic不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span><span class="token string">&quot;key不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span><span class="token string">&quot;value不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>kafkaInitProperties<span class="token punctuation">.</span>getKafkaType<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">case</span> <span class="token string">&quot;huawei&quot;</span><span class="token operator">:</span>
				<span class="token keyword">this</span><span class="token punctuation">.</span>huaweiKafkaTemplate<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span>key<span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">default</span><span class="token operator">:</span>
				<span class="token keyword">this</span><span class="token punctuation">.</span>kafkaTemplate<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span>key<span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">AbstractMessageListenerContainer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">receive</span><span class="token punctuation">(</span><span class="token class-name">String</span> topic<span class="token punctuation">,</span> <span class="token class-name">String</span> groupId<span class="token punctuation">,</span><span class="token class-name">MessageListener</span> messageListener<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>topic<span class="token punctuation">,</span><span class="token string">&quot;topic不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>groupId<span class="token punctuation">,</span><span class="token string">&quot;groupId不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>messageListener<span class="token punctuation">,</span><span class="token string">&quot;messageListener不能为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">ContainerProperties</span> containerProperties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContainerProperties</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>topic<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		containerProperties<span class="token punctuation">.</span><span class="token function">setGroupId</span><span class="token punctuation">(</span>groupId<span class="token punctuation">)</span><span class="token punctuation">;</span>
		containerProperties<span class="token punctuation">.</span><span class="token function">setMessageListener</span><span class="token punctuation">(</span>messageListener<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">KafkaMessageListenerContainer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> messageListenerContainer<span class="token punctuation">;</span>
		<span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>kafkaInitProperties<span class="token punctuation">.</span>getKafkaType<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">case</span> <span class="token string">&quot;huawei&quot;</span><span class="token operator">:</span>
				messageListenerContainer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KafkaMessageListenerContainer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>huaweiKafkaTemplate<span class="token punctuation">.</span><span class="token function">createConsumerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> containerProperties<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token keyword">default</span><span class="token operator">:</span>
				messageListenerContainer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KafkaMessageListenerContainer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>consumerFactory<span class="token punctuation">,</span> containerProperties<span class="token punctuation">)</span><span class="token punctuation">;</span>	
		<span class="token punctuation">}</span>
		messageListenerContainer<span class="token punctuation">.</span><span class="token function">setBeanName</span><span class="token punctuation">(</span>topic <span class="token operator">+</span> <span class="token string">&quot;_&quot;</span> <span class="token operator">+</span> groupId<span class="token punctuation">)</span><span class="token punctuation">;</span>
		messageListenerContainer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> messageListenerContainer<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至于HuaweiKafkaTemplate.java，参照从华为集群下载的kafka客户端示例中，初始化即可，下面就不一一手打了，太累了，提供一些照片给大家看看</p><ul><li>这是构造方法里面初始化了一个生产者<br><img src="https://img-blog.csdnimg.cn/db0484c9851a400eaf1e019c381d57f0.png" alt="在这里插入图片描述" loading="lazy"></li><li>这是创建一个消费者工厂的方法<br><img src="https://img-blog.csdnimg.cn/22fcbbc75a284f6e86b193cfb6ca332e.png" alt="在这里插入图片描述" loading="lazy"></li><li>这是用消费者发送kafka消息的方法<br><img src="https://img-blog.csdnimg.cn/3505dff36142405a8d21c9574540b68e.png" alt="在这里插入图片描述" loading="lazy"></li><li>这是安全认证的方法<br><img src="https://img-blog.csdnimg.cn/7a319bd316a547199fedda4016fc5a2f.png" alt="在这里插入图片描述" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/a76115f8038645e1a877446cd75e3761.png" alt="在这里插入图片描述" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/aa4a289c1ac646d6b785a9a904314fca.png" alt="在这里插入图片描述" loading="lazy"><br><img src="https://img-blog.csdnimg.cn/00fac037fc4c4cbf94ff224a70dc03db.png" alt="在这里插入图片描述" loading="lazy"></li></ul><figure><img src="https://img-blog.csdnimg.cn/0ffd6e9dac8a461eb7339224d4454784.png" alt="在这里插入图片描述" tabindex="0" loading="lazy"><figcaption>在这里插入图片描述</figcaption></figure><p>如果你通过自己生成<code>jass.conf</code>文件，就没要调用<code>writeJassFile</code>方法</p><h2 id="以上只是提供一个实现思路-和一些问题的解决方案-大家在实操过程中可以参考-切不可生搬硬套-有问题可以问我-我会及时回复大家" tabindex="-1"><a class="header-anchor" href="#以上只是提供一个实现思路-和一些问题的解决方案-大家在实操过程中可以参考-切不可生搬硬套-有问题可以问我-我会及时回复大家" aria-hidden="true">#</a> 以上只是提供一个实现思路，和一些问题的解决方案，大家在实操过程中可以参考，切不可生搬硬套，有问题可以问我，我会及时回复大家</h2><p>文章知识点与官方知识档案匹配，可进一步学习相关知识</p>`,35),k={href:"https://edu.csdn.net/skill/cloud_native/?utm_source=csdn_ai_skill_tree_blog",target:"_blank",rel:"noopener noreferrer"},r={href:"https://edu.csdn.net/skill/cloud_native/?utm_source=csdn_ai_skill_tree_blog",target:"_blank",rel:"noopener noreferrer"},d={href:"https://edu.csdn.net/skill/cloud_native/?utm_source=csdn_ai_skill_tree_blog",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.csdn.net/zhangtao0417/article/details/125466693",target:"_blank",rel:"noopener noreferrer"};function v(f,b){const s=p("ExternalLinkIcon");return o(),c("div",null,[u,a("p",null,[a("a",k,[n("云原生入门技能树"),t(s)]),a("a",r,[n("首页"),t(s)]),a("a",d,[n("概览"),t(s)]),n("17248 人正在系统学习中")]),a("p",null,[n("本文转自 "),a("a",m,[n("https://blog.csdn.net/zhangtao0417/article/details/125466693"),t(s)]),n("，如有侵权，请联系删除。")])])}const h=e(i,[["render",v],["__file","SpringBoot第十三篇：同时集成华为RC6.5.1安全版kafka和原生kafka，通过配置文件动态控制.html.vue"]]);export{h as default};
