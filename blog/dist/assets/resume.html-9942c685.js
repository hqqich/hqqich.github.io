import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as a,f as e}from"./app-6847d3e4.js";const t={},s=e('<h2 id="个人信息" tabindex="-1"><a class="header-anchor" href="#个人信息" aria-hidden="true">#</a> 个人信息</h2><ul><li>姓名</li><li>电话</li><li>邮箱</li><li>毕业时间</li><li>工作时间</li><li>Github：https://github.com/hqqich</li></ul><h2 id="专业技能" tabindex="-1"><a class="header-anchor" href="#专业技能" aria-hidden="true">#</a> 专业技能</h2><ul><li>熟练掌握 Java 核心知识、JUC、HashMap、斐波那契散列等，具备良好的面向对象编程思想。</li><li>熟练掌握 Java 设计模式，如工厂、代理、组合、策略等设计模式，并善用设计原则构建可复用代码。</li><li>熟练使用 IDEA、Eclipse、Visual Studio Code、Navicat、PostMan、Git、Maven、SVN 等开发工具。</li><li>深入理解 JVM 底层原理，熟悉 JVM 各类垃圾收集器的使用及核心参数的调优，具备一定的 JVM 调优能力。</li><li><code>深入学习 Spring 核心流程模块，如IOC、AOP、依赖倒置等，掌握Spring解决复杂场景所需的分治、抽象和知识（设计模式、设计原则），能从核心原理上解决Spring场景问题。同时，具备基于 Spring 开发 SpringBoot Starter 的技能，减少研发成本，为复杂项目提供通用技术组件。</code></li><li><code>深入学习 MyBatis 核心流程模块，包括会话、反射、代理、事务和插件，熟练掌握 ORM 框架的设计思想、实现方式和应用价值。并根据需求结合 MyBatis 插件机制，开发企业所需的功能，如数据分页、数据库表路由、监控日志和数据安全等。</code></li><li>深入理解 Spring Boot，Spring Cloud 等微服务框架的设计原理及底层架构，熟悉各种微服务架构设计比如服务注册与发现，服务降级，限流，熔断，服务网关路由设计，服务安全认证架构。</li><li>熟悉 Dubbo、Zookeeper 等分布式服务协调与治理等技术。</li><li>熟练掌握 MySql，掌握 MySQL 主从同步，读写分离技术以及集群的搭建，具备一定的 SQL 调优能力。</li><li>深入理解 Redis 线程模型，熟练掌握 Redis 的核心数据结构的使用场景，熟悉各种缓存高并发的使用场景，比如缓存雪崩，缓存穿透等。</li><li>熟练掌握分布式场景中的常见的技术问题及解决，比如分布式锁，分布式事务，分布式 session，分布式任务调度。</li><li>熟悉 RabbitMQ、Kafka 等常用的消息中间件进行消息的异步数据处理。</li><li>了解分布式搜索引擎 ElasticSearch，并能基于 ELK+Kafka 搭建分布式日志收集系统，以及 x-pack-jdbc 的扩展使用。</li><li>熟悉 docker 常用命令，能够实现基于 docker+Jenkins 实现自动化部署</li><li>掌握 Linux 常用命令，了解 Nginx 服务器的反向代理、负载均衡、动静分离等。</li><li>熟练运用 DDD 四层架构领域驱动设计，构建出易于迭代和维护的工程架构，遵守整洁代码、洋葱架构设计思想。</li></ul><h2 id="工作经历【在校生无】" tabindex="-1"><a class="header-anchor" href="#工作经历【在校生无】" aria-hidden="true">#</a> 工作经历【在校生无】</h2><ul><li>公司</li><li>岗位</li><li>时间</li><li>职责【可选】</li><li>成绩【可选】</li></ul><h2 id="项目经验" tabindex="-1"><a class="header-anchor" href="#项目经验" aria-hidden="true">#</a> 项目经验</h2><h3 id="_1-手写-mybatis" tabindex="-1"><a class="header-anchor" href="#_1-手写-mybatis" aria-hidden="true">#</a> 1. 手写 MyBatis</h3><ul><li>项目架构：Object Relational Mapping</li><li>项目描述：MyBatis 是 Java 应用编程开发中，非常常用的技术框架。需要较深入的学习和使用，具备 MyBatis 插件开发能力，解决日常场景问题。才能更好更高效的工作。为此，深度学习了《手写MyBatis：渐进式源码实践》一书，完整实现了一个 MyBatis ORM 框架。技术积累颇深，提高了设计思维和编码能力。</li><li>个人收获： <ul><li>首先学习到为什么日常使用 MyBatis 时，可以仅提供 IDao 接口，就可以关联对应配置的SQL语句，完成数据库操作。这是因为做了代理与映射，封装调用逻辑到 SqlSession 会话功能实现中。</li><li>掌握了数10种设计模式的运用，其中感触最大的是 MyBatis 如何管理多边服务的设计。如创建会话模型，统一调度执行器使用和数据的封装，并把这些复杂的操作，通过 SqlSessionFactory 工厂统一对外提供 SqlSession 服务。</li><li>彻底了解并掌握了 MyBatis Plugin 设计模型，这个技术可以让我基于 MyBatis 做出日志监控、库表路由、字段加解密等操作。为以后编程工作，提供更多的解决方案。</li><li>除此之外，还有一级缓存、二级缓存的装饰器模式使用，MyBatis 开发后与 Spring、SpringBoot 整合的实现，让我对 MyBatis 的全体系开发流程和对应的技术整合，已经非常清晰，便于以后应用和从根上快速排查解决问题，并给出合理的技术方案。</li></ul></li></ul>',9),r=[s];function n(o,d){return l(),a("div",null,r)}const u=i(t,[["render",n],["__file","resume.html.vue"]]);export{u as default};
